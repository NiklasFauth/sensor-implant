ARM GAS  /tmp/cchP46LN.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"stm32l0xx_hal_i2c.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.I2C_Flush_TXDR,"ax",%progbits
  18              		.align	2
  19              		.code	16
  20              		.thumb_func
  22              	I2C_Flush_TXDR:
  23              	.LFB94:
  24              		.file 1 "Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c"
   1:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @file    stm32l0xx_hal_i2c.c
   4:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @version V1.8.1
   6:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @date    14-April-2017
   7:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief   I2C HAL module driver.
   8:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *          This file provides firmware functions to manage the following
   9:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *          functionalities of the Inter Integrated Circuit (I2C) peripheral:
  10:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *           + Initialization and de-initialization functions
  11:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *           + IO operation functions
  12:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *           + Peripheral State and Errors functions
  13:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *
  14:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   @verbatim
  15:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   ==============================================================================
  16:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****                         ##### How to use this driver #####
  17:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   ==============================================================================
  18:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     [..]
  19:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     The I2C HAL driver can be used as follows:
  20:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
  21:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     (#) Declare a I2C_HandleTypeDef handle structure, for example:
  22:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         I2C_HandleTypeDef  hi2c;
  23:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
  24:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     (#)Initialize the I2C low level resources by implementing the HAL_I2C_MspInit() API:
  25:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         (##) Enable the I2Cx interface clock
  26:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         (##) I2C pins configuration
  27:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****             (+++) Enable the clock for the I2C GPIOs
  28:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****             (+++) Configure I2C pins as alternate function open-drain
  29:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         (##) NVIC configuration if you need to use interrupt process
  30:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****             (+++) Configure the I2Cx interrupt priority
  31:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****             (+++) Enable the NVIC I2C IRQ Channel
  32:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         (##) DMA Configuration if you need to use DMA process
  33:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****             (+++) Declare a DMA_HandleTypeDef handle structure for the transmit or receive channel
  34:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****             (+++) Enable the DMAx interface clock using
ARM GAS  /tmp/cchP46LN.s 			page 2


  35:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****             (+++) Configure the DMA handle parameters
  36:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****             (+++) Configure the DMA Tx or Rx channel
  37:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****             (+++) Associate the initialized DMA handle to the hi2c DMA Tx or Rx handle
  38:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  39:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****                   the DMA Tx or Rx channel
  40:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
  41:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     (#) Configure the Communication Clock Timing, Own Address1, Master Addressing mode, Dual Addres
  42:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         Own Address2, Own Address2 Mask, General call and Nostretch mode in the hi2c Init structure
  43:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
  44:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     (#) Initialize the I2C registers by calling the HAL_I2C_Init(), configures also the low level H
  45:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         (GPIO, CLOCK, NVIC...etc) by calling the customized HAL_I2C_MspInit(&hi2c) API.
  46:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
  47:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     (#) To check if target device is ready for communication, use the function HAL_I2C_IsDeviceRead
  48:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
  49:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     (#) For I2C IO and IO MEM operations, three operation modes are available within this driver :
  50:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
  51:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     *** Polling mode IO operation ***
  52:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     =================================
  53:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     [..]
  54:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) Transmit in master mode an amount of data in blocking mode using HAL_I2C_Master_Transmit(
  55:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) Receive in master mode an amount of data in blocking mode using HAL_I2C_Master_Receive()
  56:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) Transmit in slave mode an amount of data in blocking mode using HAL_I2C_Slave_Transmit()
  57:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) Receive in slave mode an amount of data in blocking mode using HAL_I2C_Slave_Receive()
  58:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
  59:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     *** Polling mode IO MEM operation ***
  60:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     =====================================
  61:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     [..]
  62:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) Write an amount of data in blocking mode to a specific memory address using HAL_I2C_Mem_W
  63:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) Read an amount of data in blocking mode from a specific memory address using HAL_I2C_Mem_
  64:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
  65:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
  66:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     *** Interrupt mode IO operation ***
  67:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     ===================================
  68:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     [..]
  69:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) Transmit in master mode an amount of data in non-blocking mode using HAL_I2C_Master_Trans
  70:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) At transmission end of transfer, HAL_I2C_MasterTxCpltCallback() is executed and user can
  71:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MasterTxCpltCallback()
  72:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) Receive in master mode an amount of data in non-blocking mode using HAL_I2C_Master_Receiv
  73:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) At reception end of transfer, HAL_I2C_MasterRxCpltCallback() is executed and user can
  74:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MasterRxCpltCallback()
  75:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) Transmit in slave mode an amount of data in non-blocking mode using HAL_I2C_Slave_Transmi
  76:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) At transmission end of transfer, HAL_I2C_SlaveTxCpltCallback() is executed and user can
  77:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_SlaveTxCpltCallback()
  78:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) Receive in slave mode an amount of data in non-blocking mode using HAL_I2C_Slave_Receive_
  79:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) At reception end of transfer, HAL_I2C_SlaveRxCpltCallback() is executed and user can
  80:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_SlaveRxCpltCallback()
  81:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) In case of transfer Error, HAL_I2C_ErrorCallback() function is executed and user can
  82:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_ErrorCallback()
  83:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) Abort a master I2C process communication with Interrupt using HAL_I2C_Master_Abort_IT()
  84:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) End of abort process, HAL_I2C_AbortCpltCallback() is executed and user can
  85:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_AbortCpltCallback()
  86:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) Discard a slave I2C process communication using __HAL_I2C_GENERATE_NACK() macro.
  87:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****            This action will inform Master to generate a Stop condition to discard the communication
  88:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
  89:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
  90:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     *** Interrupt mode IO sequential operation ***
  91:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     ==============================================
ARM GAS  /tmp/cchP46LN.s 			page 3


  92:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     [..]
  93:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (@) These interfaces allow to manage a sequential transfer with a repeated start condition
  94:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           when a direction change during transfer
  95:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     [..]
  96:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) A specific option field manage the different steps of a sequential transfer
  97:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) Option field values are defined through @ref I2C_XFEROPTIONS and are listed below:
  98:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (++) I2C_FIRST_AND_LAST_FRAME: No sequential usage, functionnal is same as associated interfa
  99:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (++) I2C_FIRST_FRAME: Sequential usage, this option allow to manage a sequence with start con
 100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****                             and data to transfer without a final stop condition
 101:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (++) I2C_FIRST_AND_NEXT_FRAME: Sequential usage (Master only), this option allow to manage a 
 102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****                             and data to transfer without a final stop condition, an then permit a c
 103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****                             several times (like HAL_I2C_Master_Sequential_Transmit_IT() then HAL_I2
 104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (++) I2C_NEXT_FRAME: Sequential usage, this option allow to manage a sequence with a restart 
 105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****                             and with new data to transfer if the direction change or manage only th
 106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****                             if no direction change and without a final stop condition in both cases
 107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (++) I2C_LAST_FRAME: Sequential usage, this option allow to manage a sequance with a restart 
 108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****                             and with new data to transfer if the direction change or manage only th
 109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****                             if no direction change and with a final stop condition in both cases
 110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) Differents sequential I2C interfaces are listed below:
 112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (++) Sequential transmit in master I2C mode an amount of data in non-blocking mode using HAL_
 113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+++) At transmission end of current frame transfer, HAL_I2C_MasterTxCpltCallback() is execut
 114:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MasterTxCpltCallback()
 115:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (++) Sequential receive in master I2C mode an amount of data in non-blocking mode using HAL_I
 116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+++) At reception end of current frame transfer, HAL_I2C_MasterRxCpltCallback() is executed 
 117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MasterRxCpltCallback()
 118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (++) Abort a master I2C process communication with Interrupt using HAL_I2C_Master_Abort_IT()
 119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+++) End of abort process, HAL_I2C_AbortCpltCallback() is executed and user can
 120:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_AbortCpltCallback()
 121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (++) Enable/disable the Address listen mode in slave I2C mode using HAL_I2C_EnableListen_IT()
 122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+++) When address slave I2C match, HAL_I2C_AddrCallback() is executed and user can
 123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****            add his own code to check the Address Match Code and the transmission direction request 
 124:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+++) At Listen mode end HAL_I2C_ListenCpltCallback() is executed and user can
 125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_ListenCpltCallback()
 126:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (++) Sequential transmit in slave I2C mode an amount of data in non-blocking mode using HAL_I
 127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+++) At transmission end of current frame transfer, HAL_I2C_SlaveTxCpltCallback() is execute
 128:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_SlaveTxCpltCallback()
 129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (++) Sequential receive in slave I2C mode an amount of data in non-blocking mode using HAL_I2
 130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+++) At reception end of current frame transfer, HAL_I2C_SlaveRxCpltCallback() is executed a
 131:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_SlaveRxCpltCallback()
 132:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (++) In case of transfer Error, HAL_I2C_ErrorCallback() function is executed and user can
 133:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_ErrorCallback()
 134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (++) Abort a master I2C process communication with Interrupt using HAL_I2C_Master_Abort_IT()
 135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (++) End of abort process, HAL_I2C_AbortCpltCallback() is executed and user can
 136:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_AbortCpltCallback()
 137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (++) Discard a slave I2C process communication using __HAL_I2C_GENERATE_NACK() macro.
 138:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****            This action will inform Master to generate a Stop condition to discard the communication
 139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     *** Interrupt mode IO MEM operation ***
 141:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     =======================================
 142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     [..]
 143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) Write an amount of data in non-blocking mode with Interrupt to a specific memory address 
 144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           HAL_I2C_Mem_Write_IT()
 145:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) At Memory end of write transfer, HAL_I2C_MemTxCpltCallback() is executed and user can
 146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MemTxCpltCallback()
 147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) Read an amount of data in non-blocking mode with Interrupt from a specific memory address
 148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           HAL_I2C_Mem_Read_IT()
ARM GAS  /tmp/cchP46LN.s 			page 4


 149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) At Memory end of read transfer, HAL_I2C_MemRxCpltCallback() is executed and user can
 150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MemRxCpltCallback()
 151:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) In case of transfer Error, HAL_I2C_ErrorCallback() function is executed and user can
 152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_ErrorCallback()
 153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     *** DMA mode IO operation ***
 155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     ==============================
 156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     [..]
 157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) Transmit in master mode an amount of data in non-blocking mode (DMA) using
 158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           HAL_I2C_Master_Transmit_DMA()
 159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) At transmission end of transfer, HAL_I2C_MasterTxCpltCallback() is executed and user can
 160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MasterTxCpltCallback()
 161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) Receive in master mode an amount of data in non-blocking mode (DMA) using
 162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           HAL_I2C_Master_Receive_DMA()
 163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) At reception end of transfer, HAL_I2C_MasterRxCpltCallback() is executed and user can
 164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MasterRxCpltCallback()
 165:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) Transmit in slave mode an amount of data in non-blocking mode (DMA) using
 166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           HAL_I2C_Slave_Transmit_DMA()
 167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) At transmission end of transfer, HAL_I2C_SlaveTxCpltCallback() is executed and user can
 168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_SlaveTxCpltCallback()
 169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) Receive in slave mode an amount of data in non-blocking mode (DMA) using
 170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           HAL_I2C_Slave_Receive_DMA()
 171:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) At reception end of transfer, HAL_I2C_SlaveRxCpltCallback() is executed and user can
 172:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_SlaveRxCpltCallback()
 173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) In case of transfer Error, HAL_I2C_ErrorCallback() function is executed and user can
 174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_ErrorCallback()
 175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) Abort a master I2C process communication with Interrupt using HAL_I2C_Master_Abort_IT()
 176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) End of abort process, HAL_I2C_AbortCpltCallback() is executed and user can
 177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_AbortCpltCallback()
 178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) Discard a slave I2C process communication using __HAL_I2C_GENERATE_NACK() macro.
 179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****            This action will inform Master to generate a Stop condition to discard the communication
 180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     *** DMA mode IO MEM operation ***
 182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     =================================
 183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     [..]
 184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) Write an amount of data in non-blocking mode with DMA to a specific memory address using
 185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           HAL_I2C_Mem_Write_DMA()
 186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) At Memory end of write transfer, HAL_I2C_MemTxCpltCallback() is executed and user can
 187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MemTxCpltCallback()
 188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) Read an amount of data in non-blocking mode with DMA from a specific memory address using
 189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           HAL_I2C_Mem_Read_DMA()
 190:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) At Memory end of read transfer, HAL_I2C_MemRxCpltCallback() is executed and user can
 191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MemRxCpltCallback()
 192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) In case of transfer Error, HAL_I2C_ErrorCallback() function is executed and user can
 193:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_ErrorCallback()
 194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****      *** I2C HAL driver macros list ***
 197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****      ==================================
 198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****      [..]
 199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****        Below the list of most used macros in I2C HAL driver.
 200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 201:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) __HAL_I2C_ENABLE: Enable the I2C peripheral
 202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) __HAL_I2C_DISABLE: Disable the I2C peripheral
 203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) __HAL_I2C_GENERATE_NACK: Generate a Non-Acknowledge I2C peripheral in Slave mode
 204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) __HAL_I2C_GET_FLAG: Check whether the specified I2C flag is set or not
 205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) __HAL_I2C_CLEAR_FLAG: Clear the specified I2C pending flag
ARM GAS  /tmp/cchP46LN.s 			page 5


 206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) __HAL_I2C_ENABLE_IT: Enable the specified I2C interrupt
 207:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) __HAL_I2C_DISABLE_IT: Disable the specified I2C interrupt
 208:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****      [..]
 210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****        (@) You can refer to the I2C HAL driver header file for more useful macros
 211:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   @endverbatim
 213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   ******************************************************************************
 214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @attention
 215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *
 216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
 217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *
 218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * Redistribution and use in source and binary forms, with or without modification,
 219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * are permitted provided that the following conditions are met:
 220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *      this list of conditions and the following disclaimer.
 222:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *      this list of conditions and the following disclaimer in the documentation
 224:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *      and/or other materials provided with the distribution.
 225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *      may be used to endorse or promote products derived from this software
 227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *      without specific prior written permission.
 228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *
 229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *
 240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   ******************************************************************************
 241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */ 
 242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /* Includes ------------------------------------------------------------------*/
 244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** #include "stm32l0xx_hal.h"
 245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /** @addtogroup STM32L0xx_HAL_Driver
 247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @{
 248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
 249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /** @defgroup I2C I2C
 251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief I2C HAL module driver
 252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @{
 253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
 254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** #ifdef HAL_I2C_MODULE_ENABLED
 256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /* Private typedef -----------------------------------------------------------*/
 258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /* Private define ------------------------------------------------------------*/
 259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /** @defgroup I2C_Private_Define I2C Private Define
 261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @{
 262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
ARM GAS  /tmp/cchP46LN.s 			page 6


 263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** #define TIMING_CLEAR_MASK   (0xF0FFFFFFU)  /*!< I2C TIMING clear register Mask */
 264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** #define I2C_TIMEOUT_ADDR    (10000U)       /*!< 10 s  */
 265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** #define I2C_TIMEOUT_BUSY    (25U)          /*!< 25 ms */
 266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** #define I2C_TIMEOUT_DIR     (25U)          /*!< 25 ms */
 267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** #define I2C_TIMEOUT_RXNE    (25U)          /*!< 25 ms */
 268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** #define I2C_TIMEOUT_STOPF   (25U)          /*!< 25 ms */
 269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** #define I2C_TIMEOUT_TC      (25U)          /*!< 25 ms */
 270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** #define I2C_TIMEOUT_TCR     (25U)          /*!< 25 ms */
 271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** #define I2C_TIMEOUT_TXIS    (25U)          /*!< 25 ms */
 272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** #define I2C_TIMEOUT_FLAG    (25U)          /*!< 25 ms */
 273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** #define MAX_NBYTE_SIZE      255U
 275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** #define SlaveAddr_SHIFT     7U
 276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** #define SlaveAddr_MSK       0x06U
 277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /* Private define for @ref PreviousState usage */
 279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** #define I2C_STATE_MSK             ((uint32_t)((HAL_I2C_STATE_BUSY_TX | HAL_I2C_STATE_BUSY_RX) & (~(
 280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** #define I2C_STATE_NONE            ((uint32_t)(HAL_I2C_MODE_NONE))                                  
 281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** #define I2C_STATE_MASTER_BUSY_TX  ((uint32_t)((HAL_I2C_STATE_BUSY_TX & I2C_STATE_MSK) | HAL_I2C_MOD
 282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** #define I2C_STATE_MASTER_BUSY_RX  ((uint32_t)((HAL_I2C_STATE_BUSY_RX & I2C_STATE_MSK) | HAL_I2C_MOD
 283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** #define I2C_STATE_SLAVE_BUSY_TX   ((uint32_t)((HAL_I2C_STATE_BUSY_TX & I2C_STATE_MSK) | HAL_I2C_MOD
 284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** #define I2C_STATE_SLAVE_BUSY_RX   ((uint32_t)((HAL_I2C_STATE_BUSY_RX & I2C_STATE_MSK) | HAL_I2C_MOD
 285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** #define I2C_STATE_MEM_BUSY_TX     ((uint32_t)((HAL_I2C_STATE_BUSY_TX & I2C_STATE_MSK) | HAL_I2C_MOD
 286:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** #define I2C_STATE_MEM_BUSY_RX     ((uint32_t)((HAL_I2C_STATE_BUSY_RX & I2C_STATE_MSK) | HAL_I2C_MOD
 287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /* Private define to centralize the enable/disable of Interrupts */
 290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** #define I2C_XFER_TX_IT          (0x00000001U)
 291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** #define I2C_XFER_RX_IT          (0x00000002U)
 292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** #define I2C_XFER_LISTEN_IT      (0x00000004U)
 293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 294:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** #define I2C_XFER_ERROR_IT       (0x00000011U)
 295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** #define I2C_XFER_CPLT_IT        (0x00000012U)
 296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** #define I2C_XFER_RELOAD_IT      (0x00000012U)
 297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /* Private define Sequential Transfer Options default/reset value */
 299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** #define I2C_NO_OPTION_FRAME     (0xFFFF0000U)
 300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
 301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @}
 302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
 303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /* Private macro -------------------------------------------------------------*/
 305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** #define I2C_GET_DMA_REMAIN_DATA(__HANDLE__) ((((__HANDLE__)->State) == HAL_I2C_STATE_BUSY_TX)   ? \
 306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****                                             ((uint32_t)((__HANDLE__)->hdmatx->Instance->CNDTR)) : \
 307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****                                             ((uint32_t)((__HANDLE__)->hdmarx->Instance->CNDTR)))
 308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /* Private variables ---------------------------------------------------------*/
 310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /* Private function prototypes -----------------------------------------------*/
 311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /** @defgroup I2C_Private_Functions I2C Private Functions
 313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @{
 314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
 315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /* Private functions to handle DMA transfer */
 316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static void I2C_DMAMasterTransmitCplt(DMA_HandleTypeDef *hdma);
 317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static void I2C_DMAMasterReceiveCplt(DMA_HandleTypeDef *hdma);
 318:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static void I2C_DMASlaveTransmitCplt(DMA_HandleTypeDef *hdma);
 319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static void I2C_DMASlaveReceiveCplt(DMA_HandleTypeDef *hdma);
ARM GAS  /tmp/cchP46LN.s 			page 7


 320:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static void I2C_DMAError(DMA_HandleTypeDef *hdma);
 321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static void I2C_DMAAbort(DMA_HandleTypeDef *hdma);
 322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /* Private functions to handle IT transfer */
 324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static void I2C_ITAddrCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static void I2C_ITMasterSequentialCplt(I2C_HandleTypeDef *hi2c);
 326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static void I2C_ITSlaveSequentialCplt(I2C_HandleTypeDef *hi2c);
 327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static void I2C_ITMasterCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static void I2C_ITSlaveCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static void I2C_ITListenCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static void I2C_ITError(I2C_HandleTypeDef *hi2c, uint32_t ErrorCode);
 331:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /* Private functions to handle IT transfer */
 333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint1
 334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16
 335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /* Private functions for I2C transfer IRQ handler */
 337:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
 338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint3
 339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uin
 340:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
 341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 342:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /* Private functions to handle flags during polling transfer */
 343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagSta
 344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
 345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
 346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnSTOPFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
 347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_
 348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /* Private functions to centralize the enable/disable of Interrupts */
 350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Enable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest);
 351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Disable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest);
 352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /* Private functions to flush TXDR register */
 354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c);
 355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /* Private functions to handle  start, restart or stop a transfer */
 357:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c,  uint16_t DevAddress, uint8_t Size, uint32_
 358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
 359:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @}
 360:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
 361:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /* Exported functions --------------------------------------------------------*/
 363:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions I2C Exported Functions
 365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @{
 366:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
 367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions_Group1 Initialization and de-initialization functions
 369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****  *  @brief    Initialization and Configuration functions 
 370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****  *
 371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** @verbatim
 372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****  ===============================================================================
 373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****               ##### Initialization and de-initialization functions #####
 374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****  ===============================================================================
 375:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     [..]  This subsection provides a set of functions allowing to initialize and
 376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           deinitialize the I2Cx peripheral:
ARM GAS  /tmp/cchP46LN.s 			page 8


 377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) User must Implement HAL_I2C_MspInit() function in which he configures
 379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           all related peripherals resources (CLOCK, GPIO, DMA, IT and NVIC ).
 380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) Call the function HAL_I2C_Init() to configure the selected device with
 382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           the selected configuration:
 383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         (++) Clock Timing
 384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         (++) Own Address 1
 385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         (++) Addressing mode (Master, Slave)
 386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         (++) Dual Addressing mode
 387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         (++) Own Address 2
 388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         (++) Own Address 2 Mask
 389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         (++) General call mode
 390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         (++) Nostretch mode
 391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (+) Call the function HAL_I2C_DeInit() to restore the default configuration
 393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           of the selected I2Cx peripheral.
 394:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** @endverbatim
 396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @{
 397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
 398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
 400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Initializes the I2C according to the specified parameters
 401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *         in the I2C_InitTypeDef and initialize the associated handle.
 402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL status
 405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
 406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
 407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 408:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 409:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c == NULL)
 410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
 411:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_ERROR;
 412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
 413:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Check the parameters */
 415:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
 416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS1(hi2c->Init.OwnAddress1));
 417:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   assert_param(IS_I2C_ADDRESSING_MODE(hi2c->Init.AddressingMode));
 418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   assert_param(IS_I2C_DUAL_ADDRESS(hi2c->Init.DualAddressMode));
 419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
 420:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS2_MASK(hi2c->Init.OwnAddress2Masks));
 421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
 422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));
 423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 424:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_RESET)
 425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
 426:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Allocate lock resource and initialize it */
 427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Lock = HAL_UNLOCKED;
 428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
 430:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     HAL_I2C_MspInit(hi2c);
 431:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
 432:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 433:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_BUSY;
ARM GAS  /tmp/cchP46LN.s 			page 9


 434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 435:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Disable the selected I2C peripheral */
 436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_I2C_DISABLE(hi2c);
 437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /*---------------------------- I2Cx TIMINGR Configuration ------------------*/
 439:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Configure I2Cx: Frequency range */
 440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
 443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Disable Own Address1 before set the Own Address1 configuration */
 444:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 446:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Configure I2Cx: Own Address1 and ack own address1 mode */
 447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
 449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 450:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
 451:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else /* I2C_ADDRESSINGMODE_10BIT */
 452:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
 453:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 454:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
 455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /*---------------------------- I2Cx CR2 Configuration ----------------------*/
 457:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Configure I2Cx: Addressing Master mode */
 458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
 460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->CR2 = (I2C_CR2_ADD10);
 461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
 462:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Enable the AUTOEND by default, and enable NACK (should be disable only during Slave process */
 463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 464:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
 466:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Disable Own Address2 before set the Own Address2 configuration */
 467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 468:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Configure I2Cx: Dual mode and Own Address2 */
 470:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddr
 471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 472:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /*---------------------------- I2Cx CR1 Configuration ----------------------*/
 473:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Configure I2Cx: Generalcall and NoStretch mode */
 474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 475:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 476:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Enable the selected I2C peripheral */
 477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_I2C_ENABLE(hi2c);
 478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 479:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
 481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 483:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 484:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   return HAL_OK;
 485:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 487:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
 488:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  DeInitialize the I2C peripheral.
 489:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 490:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
ARM GAS  /tmp/cchP46LN.s 			page 10


 491:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL status
 492:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
 493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_DeInit(I2C_HandleTypeDef *hi2c)
 494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 495:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 496:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c == NULL)
 497:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
 498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_ERROR;
 499:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
 500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 501:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Check the parameters */
 502:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
 503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_BUSY;
 505:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Disable the I2C Peripheral Clock */
 507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_I2C_DISABLE(hi2c);
 508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 509:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
 510:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   HAL_I2C_MspDeInit(hi2c);
 511:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 512:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_RESET;
 514:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 516:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 517:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Release Lock */
 518:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   return HAL_OK;
 521:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 522:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 523:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
 524:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief Initialize the I2C MSP.
 525:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 526:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 527:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval None
 528:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
 529:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** __weak void HAL_I2C_MspInit(I2C_HandleTypeDef *hi2c)
 530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 531:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 532:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   UNUSED(hi2c);
 533:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 534:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 535:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****             the HAL_I2C_MspInit could be implemented in the user file
 536:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****    */
 537:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 538:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 539:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
 540:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief DeInitialize the I2C MSP.
 541:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 542:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 543:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval None
 544:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
 545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** __weak void HAL_I2C_MspDeInit(I2C_HandleTypeDef *hi2c)
 546:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 547:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /tmp/cchP46LN.s 			page 11


 548:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   UNUSED(hi2c);
 549:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 550:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 551:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****             the HAL_I2C_MspDeInit could be implemented in the user file
 552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****    */
 553:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 554:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
 556:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @}
 557:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
 558:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 559:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions_Group2 Input and Output operation functions
 560:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****  *  @brief   Data transfers functions 
 561:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****  *
 562:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** @verbatim
 563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****  ===============================================================================
 564:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****                       ##### IO operation functions #####
 565:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****  ===============================================================================
 566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     [..]
 567:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     This subsection provides a set of functions allowing to manage the I2C data
 568:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     transfers.
 569:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 570:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     (#) There are two modes of transfer:
 571:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****        (++) Blocking mode : The communication is performed in the polling mode.
 572:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****             The status of all data processing is returned by the same function 
 573:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****             after finishing transfer.
 574:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****        (++) No-Blocking mode : The communication is performed using Interrupts
 575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****             or DMA. These functions return the status of the transfer startup.
 576:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****             The end of the data processing will be indicated through the
 577:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****             dedicated I2C IRQ when using Interrupt mode or the DMA IRQ when
 578:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****             using DMA mode.
 579:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 580:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     (#) Blocking mode functions are :
 581:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         (++) HAL_I2C_Master_Transmit()
 582:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         (++) HAL_I2C_Master_Receive()
 583:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Transmit()
 584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Receive()
 585:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Write()
 586:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Read()
 587:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         (++) HAL_I2C_IsDeviceReady()
 588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 589:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     (#) No-Blocking mode functions with Interrupt are :
 590:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         (++) HAL_I2C_Master_Transmit_IT()
 591:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         (++) HAL_I2C_Master_Receive_IT()
 592:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Transmit_IT()
 593:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Receive_IT()
 594:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Write_IT()
 595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Read_IT()
 596:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     (#) No-Blocking mode functions with DMA are :
 598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         (++) HAL_I2C_Master_Transmit_DMA()
 599:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         (++) HAL_I2C_Master_Receive_DMA()
 600:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Transmit_DMA()
 601:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Receive_DMA()
 602:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Write_DMA()
 603:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Read_DMA()
 604:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
ARM GAS  /tmp/cchP46LN.s 			page 12


 605:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     (#) A set of Transfer Complete Callbacks are provided in non Blocking mode:
 606:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         (++) HAL_I2C_MemTxCpltCallback()
 607:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         (++) HAL_I2C_MemRxCpltCallback()
 608:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         (++) HAL_I2C_MasterTxCpltCallback()
 609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         (++) HAL_I2C_MasterRxCpltCallback()
 610:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         (++) HAL_I2C_SlaveTxCpltCallback()
 611:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         (++) HAL_I2C_SlaveRxCpltCallback()
 612:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         (++) HAL_I2C_ErrorCallback()
 613:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 614:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** @endverbatim
 615:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @{
 616:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
 617:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 618:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
 619:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Transmits in master mode an amount of data in blocking mode.
 620:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 621:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 622:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
 623:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
 624:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
 625:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
 626:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
 627:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL status
 628:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
 629:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pD
 630:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 631:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint32_t tickstart = 0U;
 632:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 633:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 634:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
 635:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Locked */
 636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 637:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 638:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
 639:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     tickstart = HAL_GetTick();
 640:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 641:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 642:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
 643:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_TIMEOUT;
 644:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
 645:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 646:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 647:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 648:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 649:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     
 650:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Prepare transfer parameters */
 651:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
 652:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount = Size;
 653:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 654:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 655:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Send Slave Address */
 656:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
 657:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
 658:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
 659:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 660:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRIT
 661:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
ARM GAS  /tmp/cchP46LN.s 			page 13


 662:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     else
 663:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
 664:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 665:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_WRI
 666:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
 667:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 668:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     while(hi2c->XferCount > 0U)
 669:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
 670:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Wait until TXIS flag is set */
 671:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 672:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
 673:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 674:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         {
 675:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           return HAL_ERROR;
 676:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         }
 677:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         else
 678:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         {
 679:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           return HAL_TIMEOUT;
 680:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         }
 681:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
 682:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Write data to TXDR */
 683:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Instance->TXDR = (*hi2c->pBuffPtr++);
 684:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferCount--;
 685:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize--;
 686:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 687:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if((hi2c->XferSize == 0U) && (hi2c->XferCount!=0U))
 688:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
 689:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Wait until TCR flag is set */
 690:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 691:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         {
 692:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           return HAL_TIMEOUT;
 693:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         }
 694:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 695:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         if(hi2c->XferCount > MAX_NBYTE_SIZE)
 696:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         {
 697:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
 698:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 699:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         }
 700:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         else
 701:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         {
 702:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
 703:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 704:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         }
 705:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
 706:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
 707:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 708:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
 709:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Wait until STOPF flag is set */
 710:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 711:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
 712:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 713:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
 714:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_ERROR;
 715:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
 716:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       else
 717:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
 718:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_TIMEOUT;
ARM GAS  /tmp/cchP46LN.s 			page 14


 719:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
 720:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
 721:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 722:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Clear STOP Flag */
 723:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 724:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 725:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
 726:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
 727:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 728:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 729:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 730:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 731:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Unlocked */
 732:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 733:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 734:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
 735:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
 736:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else
 737:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
 738:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
 739:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
 740:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 741:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 742:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
 743:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Receives in master mode an amount of data in blocking mode.
 744:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 745:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 746:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
 747:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
 748:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
 749:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
 750:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
 751:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL status
 752:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
 753:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Receive(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pDa
 754:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 755:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint32_t tickstart = 0U;
 756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 757:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 758:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {    
 759:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Locked */
 760:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 761:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 762:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
 763:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     tickstart = HAL_GetTick();
 764:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 765:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 766:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
 767:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_TIMEOUT;
 768:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
 769:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 770:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 771:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 772:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 773:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 774:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Prepare transfer parameters */
 775:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
ARM GAS  /tmp/cchP46LN.s 			page 15


 776:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount = Size;
 777:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 778:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 779:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Send Slave Address */
 780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
 781:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
 782:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
 783:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 784:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_START_READ
 785:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
 786:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     else
 787:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
 788:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 789:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_REA
 790:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
 791:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 792:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     while(hi2c->XferCount > 0U)
 793:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
 794:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Wait until RXNE flag is set */
 795:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 796:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
 797:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 798:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         {
 799:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           return HAL_ERROR;
 800:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         }
 801:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         else
 802:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         {
 803:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           return HAL_TIMEOUT;
 804:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         }
 805:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
 806:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 807:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Read data from RXDR */
 808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
 809:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize--;
 810:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferCount--;
 811:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 812:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if((hi2c->XferSize == 0U) && (hi2c->XferCount != 0U))
 813:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
 814:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Wait until TCR flag is set */
 815:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 816:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         {
 817:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           return HAL_TIMEOUT;
 818:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         }
 819:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 820:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         if(hi2c->XferCount > MAX_NBYTE_SIZE)
 821:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         {
 822:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
 823:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 824:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         }
 825:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         else
 826:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         {
 827:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
 828:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 829:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         }
 830:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
 831:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
 832:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
ARM GAS  /tmp/cchP46LN.s 			page 16


 833:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
 834:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Wait until STOPF flag is set */
 835:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 836:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
 837:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 838:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
 839:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_ERROR;
 840:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
 841:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       else
 842:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
 843:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_TIMEOUT;
 844:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
 845:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
 846:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     
 847:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Clear STOP Flag */
 848:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 849:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 850:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
 851:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
 852:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 853:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 854:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 855:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 856:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Unlocked */
 857:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 858:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 859:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
 860:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
 861:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else
 862:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
 863:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
 864:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
 865:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 866:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 867:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
 868:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Transmits in slave mode an amount of data in blocking mode. 
 869:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 870:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 871:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
 872:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
 873:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
 874:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL status
 875:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
 876:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Transmit(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size, ui
 877:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 878:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint32_t tickstart = 0U;
 879:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 880:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 881:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
 882:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 883:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
 884:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return  HAL_ERROR;
 885:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
 886:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Locked */
 887:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 888:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     
 889:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
ARM GAS  /tmp/cchP46LN.s 			page 17


 890:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     tickstart = HAL_GetTick();
 891:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 892:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 893:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 894:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 895:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 896:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Prepare transfer parameters */
 897:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
 898:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount = Size;
 899:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 900:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 901:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Enable Address Acknowledge */
 902:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
 903:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 904:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Wait until ADDR flag is set */
 905:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
 906:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
 907:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Disable Address Acknowledge */
 908:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
 909:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_TIMEOUT;
 910:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
 911:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 912:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Clear ADDR flag */
 913:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c,I2C_FLAG_ADDR);
 914:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 915:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* If 10bit addressing mode is selected */
 916:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 917:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
 918:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Wait until ADDR flag is set */
 919:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
 920:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
 921:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Disable Address Acknowledge */
 922:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
 923:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_TIMEOUT;
 924:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
 925:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 926:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Clear ADDR flag */
 927:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c,I2C_FLAG_ADDR);
 928:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
 929:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 930:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Wait until DIR flag is set Transmitter mode */
 931:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_DIR, RESET, Timeout, tickstart) != HAL_OK)
 932:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
 933:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Disable Address Acknowledge */
 934:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
 935:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_TIMEOUT;
 936:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
 937:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 938:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     while(hi2c->XferCount > 0U)
 939:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
 940:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Wait until TXIS flag is set */
 941:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 942:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
 943:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Disable Address Acknowledge */
 944:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
 945:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 946:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
ARM GAS  /tmp/cchP46LN.s 			page 18


 947:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         {
 948:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           return HAL_ERROR;
 949:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         }
 950:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         else
 951:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         {
 952:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           return HAL_TIMEOUT;
 953:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         }
 954:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
 955:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 956:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Write data to TXDR */
 957:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Instance->TXDR = (*hi2c->pBuffPtr++);
 958:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferCount--;
 959:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
 960:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 961:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Wait until STOP flag is set */
 962:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 963:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
 964:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Disable Address Acknowledge */
 965:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
 966:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 967:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 968:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
 969:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 	/* Normal use case for Transmitter mode */
 970:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 	/* A NACK is generated to confirm the end of transfer */
 971:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 	hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 972:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
 973:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       else
 974:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
 975:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_TIMEOUT;
 976:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
 977:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
 978:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 979:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Clear STOP flag */
 980:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c,I2C_FLAG_STOPF);
 981:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 982:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Wait until BUSY flag is reset */ 
 983:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, Timeout, tickstart) != HAL_OK)
 984:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
 985:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Disable Address Acknowledge */
 986:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
 987:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_TIMEOUT;
 988:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
 989:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 990:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Disable Address Acknowledge */
 991:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->CR2 |= I2C_CR2_NACK;
 992:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 993:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 994:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 995:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 996:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Unlocked */
 997:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 998:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
 999:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
1000:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
1001:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else
1002:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
1003:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
ARM GAS  /tmp/cchP46LN.s 			page 19


1004:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
1005:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
1006:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1007:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
1008:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Receive in slave mode an amount of data in blocking mode
1009:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1010:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1011:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1012:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1013:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1014:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL status
1015:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
1016:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Receive(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size, uin
1017:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
1018:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint32_t tickstart = 0U;
1019:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1020:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
1021:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {  
1022:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
1023:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
1024:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return  HAL_ERROR;
1025:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
1026:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Locked */
1027:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1028:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1029:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1030:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     tickstart = HAL_GetTick();
1031:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1032:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
1033:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
1034:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1035:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1036:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Prepare transfer parameters */
1037:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
1038:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount = Size;
1039:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
1040:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1041:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1042:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1043:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1044:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Wait until ADDR flag is set */
1045:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
1046:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
1047:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1048:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1049:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_TIMEOUT;
1050:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
1051:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1052:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Clear ADDR flag */
1053:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c,I2C_FLAG_ADDR);
1054:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1055:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Wait until DIR flag is reset Receiver mode */
1056:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_DIR, SET, Timeout, tickstart) != HAL_OK)
1057:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
1058:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1059:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1060:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_TIMEOUT;
ARM GAS  /tmp/cchP46LN.s 			page 20


1061:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
1062:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1063:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     while(hi2c->XferCount > 0U)
1064:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
1065:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Wait until RXNE flag is set */
1066:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1067:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
1068:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Disable Address Acknowledge */
1069:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
1070:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1071:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Store Last receive data if any */
1072:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
1073:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         {
1074:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           /* Read data from RXDR */
1075:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
1076:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           hi2c->XferCount--;
1077:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         }
1078:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1079:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         if(hi2c->ErrorCode == HAL_I2C_ERROR_TIMEOUT)
1080:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         {
1081:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           return HAL_TIMEOUT;
1082:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         }
1083:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         else
1084:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         {
1085:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           return HAL_ERROR;
1086:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         }
1087:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
1088:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1089:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Read data from RXDR */
1090:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
1091:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferCount--;
1092:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
1093:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1094:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Wait until STOP flag is set */
1095:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1096:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
1097:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1098:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1099:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
1101:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
1102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_ERROR;
1103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
1104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       else
1105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
1106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_TIMEOUT;
1107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
1108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
1109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Clear STOP flag */
1111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c,I2C_FLAG_STOPF);
1112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Wait until BUSY flag is reset */
1114:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, Timeout, tickstart) != HAL_OK)
1115:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
1116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
ARM GAS  /tmp/cchP46LN.s 			page 21


1118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_TIMEOUT;
1119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
1120:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Disable Address Acknowledge */
1122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->CR2 |= I2C_CR2_NACK;
1123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1124:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
1125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
1126:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Unlocked */
1128:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
1131:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
1132:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else
1133:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
1134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
1135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
1136:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
1137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1138:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
1139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Transmit in master mode an amount of data in non-blocking mode with Interrupt
1140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1141:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
1144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1145:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL status
1147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
1148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Transmit_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t 
1149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
1150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint32_t xfermode = 0U;
1151:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
1153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
1154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
1156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_BUSY;
1157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
1158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Locked */
1160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
1163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1165:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Prepare transfer parameters */
1167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
1171:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     
1172:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
1173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
1174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
ARM GAS  /tmp/cchP46LN.s 			page 22


1175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
1177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     else
1178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
1179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
1182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Send Slave Address */
1184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
1185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, xfermode, I2C_GENERATE_START_WRITE);
1186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Unlocked */
1188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c); 
1189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1190:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****               process unlock */
1193:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, TXI interrupt */
1195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* possible to enable all of these */
1196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
1198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
1200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
1201:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else
1202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
1203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
1204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
1205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
1206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1207:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
1208:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Receive in master mode an amount of data in non-blocking mode with Interrupt
1209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1211:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
1213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL status
1216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
1217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Receive_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *
1218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
1219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint32_t xfermode = 0U;
1220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
1222:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
1223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1224:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
1225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_BUSY;
1226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
1227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Locked */
1229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
ARM GAS  /tmp/cchP46LN.s 			page 23


1232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Prepare transfer parameters */
1236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
1240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     
1241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
1242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
1243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
1246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     else
1247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
1248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
1251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Send Slave Address */
1253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
1254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, xfermode, I2C_GENERATE_START_READ);
1255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     
1256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Unlocked */
1257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****               process unlock */
1262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, RXI interrupt */
1264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* possible to enable all of these */
1265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT);
1267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
1269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
1270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else
1271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
1272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
1273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
1274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
1275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
1277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Transmit in slave mode an amount of data in non-blocking mode with Interrupt
1278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL status
1283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
1284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Transmit_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size)
1285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
1286:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
1287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
1288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Locked */
ARM GAS  /tmp/cchP46LN.s 			page 24


1289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
1292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
1293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1294:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Prepare transfer parameters */
1299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
1302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
1304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Unlocked */
1306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****               process unlock */
1311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, TXI interrupt */
1313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* possible to enable all of these */
1314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT | I2C_XFER_LISTEN_IT);
1316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
1318:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
1319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else
1320:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
1321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
1322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
1323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
1324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
1326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Receive in slave mode an amount of data in non-blocking mode with Interrupt 
1327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1331:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL status
1332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
1333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Receive_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size)
1334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
1335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
1336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
1337:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Locked */
1338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1340:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
1341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
1342:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
ARM GAS  /tmp/cchP46LN.s 			page 25


1346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Prepare transfer parameters */
1348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
1351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
1353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Unlocked */
1355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1357:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1359:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****               process unlock */
1360:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1361:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, RXI interrupt */
1362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* possible to enable all of these */
1363:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_LISTEN_IT);
1365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1366:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
1367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
1368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else
1369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
1370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
1371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
1372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
1373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
1375:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Transmit in master mode an amount of data in non-blocking mode with DMA
1376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
1380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL status
1383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
1384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t
1385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
1386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint32_t xfermode = 0U;
1387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
1389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
1390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
1392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_BUSY;
1393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
1394:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Locked */
1396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
1399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Prepare transfer parameters */
ARM GAS  /tmp/cchP46LN.s 			page 26


1403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
1407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     
1408:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
1409:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
1410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1411:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
1413:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     else
1414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
1415:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1417:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
1418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferSize > 0U)
1420:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
1421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
1422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->hdmatx->XferCpltCallback = I2C_DMAMasterTransmitCplt;
1423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1424:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Set the DMA error callback */
1425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
1426:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
1428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->hdmatx->XferHalfCpltCallback = NULL;
1429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
1430:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1431:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Enable the DMA channel */
1432:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->TXDR, hi2c->XferSi
1433:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Send Slave Address */
1435:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
1436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, xfermode, I2C_GENERATE_START_WRITE);
1437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Update XferCount value */
1439:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
1440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Process Unlocked */
1442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
1443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1444:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
1445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
1446:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****                 process unlock */
1447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Enable ERR and NACK interrupts */
1448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
1449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1450:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Enable DMA Request */
1451:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
1452:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
1453:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     else
1454:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
1455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Update Transfer ISR function pointer */
1456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
1457:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       
1458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Send Slave Address */
1459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Set NBYTES to write and generate START condition */
ARM GAS  /tmp/cchP46LN.s 			page 27


1460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_WRI
1461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1462:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Process Unlocked */
1463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
1464:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
1466:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
1467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****                 process unlock */
1468:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
1469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* possible to enable all of these */
1470:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_
1471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
1472:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
1473:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
1475:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
1476:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else
1477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
1478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
1479:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
1480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
1481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
1483:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Receive in master mode an amount of data in non-blocking mode with DMA
1484:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1485:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1487:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
1488:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1489:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1490:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL status
1491:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
1492:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Receive_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t 
1493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
1494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint32_t xfermode = 0U;
1495:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1496:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
1497:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
1498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1499:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
1500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_BUSY;
1501:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
1502:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Locked */
1504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1505:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
1507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1509:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1510:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Prepare transfer parameters */
1511:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1512:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1514:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
1515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     
1516:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
ARM GAS  /tmp/cchP46LN.s 			page 28


1517:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
1518:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
1521:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     else
1522:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
1523:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1524:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1525:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
1526:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1527:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferSize > 0U)
1528:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
1529:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
1530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->hdmarx->XferCpltCallback = I2C_DMAMasterReceiveCplt;
1531:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1532:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Set the DMA error callback */
1533:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
1534:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1535:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
1536:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->hdmarx->XferHalfCpltCallback = NULL;
1537:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
1538:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1539:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Enable the DMA channel */
1540:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)pData, hi2c->XferSi
1541:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1542:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Send Slave Address */
1543:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Set NBYTES to read and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
1544:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c,DevAddress,hi2c->XferSize, xfermode, I2C_GENERATE_START_READ);
1545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1546:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Update XferCount value */
1547:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
1548:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1549:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Process Unlocked */
1550:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
1551:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
1553:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
1554:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****                 process unlock */
1555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Enable ERR and NACK interrupts */
1556:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
1557:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1558:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Enable DMA Request */
1559:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
1560:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
1561:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     else
1562:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
1563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Update Transfer ISR function pointer */
1564:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
1565:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       
1566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Send Slave Address */
1567:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Set NBYTES to read and generate START condition */
1568:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_REA
1569:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1570:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Process Unlocked */
1571:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
1572:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1573:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
ARM GAS  /tmp/cchP46LN.s 			page 29


1574:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
1575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****                 process unlock */
1576:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
1577:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* possible to enable all of these */
1578:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_
1579:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
1580:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
1581:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
1582:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
1583:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else
1584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
1585:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
1586:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
1587:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
1588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1589:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
1590:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Transmit in slave mode an amount of data in non-blocking mode with DMA
1591:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1592:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1593:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1594:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL status
1596:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
1597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size
1598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
1599:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
1600:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
1601:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
1602:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
1603:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return  HAL_ERROR;
1604:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }   
1605:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Locked */
1606:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1607:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1608:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
1609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
1610:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1611:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1612:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Prepare transfer parameters */
1613:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1614:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1615:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
1616:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1617:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
1618:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1619:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Set the I2C DMA transfer complete callback */
1620:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->hdmatx->XferCpltCallback = I2C_DMASlaveTransmitCplt;
1621:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1622:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Set the DMA error callback */
1623:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
1624:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1625:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Set the unused DMA callbacks to NULL */
1626:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->hdmatx->XferHalfCpltCallback = NULL;
1627:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->hdmatx->XferAbortCallback = NULL;
1628:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1629:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Enable the DMA channel */
1630:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->TXDR, hi2c->XferSize
ARM GAS  /tmp/cchP46LN.s 			page 30


1631:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1632:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1633:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1634:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1635:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Unlocked */
1636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1637:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1638:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1639:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1640:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****               process unlock */
1641:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Enable ERR, STOP, NACK, ADDR interrupts */
1642:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
1643:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1644:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Enable DMA Request */
1645:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN; 
1646:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1647:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
1648:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
1649:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else
1650:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
1651:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
1652:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
1653:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
1654:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1655:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
1656:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Receive in slave mode an amount of data in non-blocking mode with DMA
1657:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1658:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1659:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1660:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1661:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL status
1662:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
1663:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Receive_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size)
1664:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
1665:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
1666:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
1667:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U)) 
1668:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
1669:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return  HAL_ERROR;
1670:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }   
1671:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Locked */
1672:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1673:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1674:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
1675:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
1676:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1677:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1678:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Prepare transfer parameters */
1679:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1680:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1681:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
1682:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1683:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
1684:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1685:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Set the I2C DMA transfer complete callback */
1686:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->hdmarx->XferCpltCallback = I2C_DMASlaveReceiveCplt;
1687:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
ARM GAS  /tmp/cchP46LN.s 			page 31


1688:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Set the DMA error callback */
1689:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
1690:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1691:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Set the unused DMA callbacks to NULL */
1692:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->hdmarx->XferHalfCpltCallback = NULL;
1693:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->hdmarx->XferAbortCallback = NULL;
1694:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1695:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Enable the DMA channel */
1696:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)pData, hi2c->XferSize
1697:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1698:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1699:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1700:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1701:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Unlocked */
1702:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1703:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1704:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1705:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1706:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****               process unlock */
1707:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Enable ERR, STOP, NACK, ADDR interrupts */
1708:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
1709:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1710:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Enable DMA Request */
1711:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
1712:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1713:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
1714:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
1715:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else
1716:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
1717:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
1718:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
1719:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
1720:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
1721:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Write an amount of data in blocking mode to a specific memory address
1722:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1723:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1724:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1725:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
1726:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
1727:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
1728:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1729:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1730:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1731:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL status
1732:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
1733:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Write(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddre
1734:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
1735:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint32_t tickstart = 0U;
1736:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1737:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Check the parameters */
1738:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
1739:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1740:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
1741:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
1742:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
1743:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
1744:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return  HAL_ERROR;
ARM GAS  /tmp/cchP46LN.s 			page 32


1745:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
1746:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1747:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Locked */
1748:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1749:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1750:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1751:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     tickstart = HAL_GetTick();
1752:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1753:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
1754:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
1755:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_TIMEOUT;
1756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
1757:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1758:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
1759:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
1760:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1761:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1762:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Prepare transfer parameters */
1763:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
1764:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount = Size;
1765:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
1766:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1767:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
1768:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_
1769:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
1770:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
1771:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
1772:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Process Unlocked */
1773:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1774:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_ERROR;
1775:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
1776:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       else
1777:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
1778:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Process Unlocked */
1779:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_TIMEOUT;
1781:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
1782:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
1783:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1784:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
1785:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
1786:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
1787:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1788:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
1789:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
1790:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     else
1791:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
1792:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1793:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
1794:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
1795:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1796:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     do
1797:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
1798:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Wait until TXIS flag is set */
1799:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1800:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
1801:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
ARM GAS  /tmp/cchP46LN.s 			page 33


1802:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         {
1803:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           return HAL_ERROR;
1804:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         }
1805:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         else
1806:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         {
1807:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           return HAL_TIMEOUT;
1808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         }
1809:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
1810:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1811:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Write data to TXDR */
1812:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Instance->TXDR = (*hi2c->pBuffPtr++);
1813:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferCount--;
1814:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize--;
1815:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1816:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if((hi2c->XferSize == 0U) && (hi2c->XferCount!=0U))
1817:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
1818:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Wait until TCR flag is set */
1819:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
1820:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         {
1821:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           return HAL_TIMEOUT;
1822:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         }
1823:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1824:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         if(hi2c->XferCount > MAX_NBYTE_SIZE)
1825:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         {
1826:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
1827:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
1828:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         }
1829:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         else
1830:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         {
1831:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
1832:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
1833:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         }
1834:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
1835:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1836:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }while(hi2c->XferCount > 0U);
1837:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1838:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
1839:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Wait until STOPF flag is reset */ 
1840:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1841:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
1842:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
1843:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
1844:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_ERROR;
1845:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
1846:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       else
1847:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
1848:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_TIMEOUT;
1849:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
1850:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
1851:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1852:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Clear STOP Flag */
1853:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
1854:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1855:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
1856:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
1857:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1858:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
ARM GAS  /tmp/cchP46LN.s 			page 34


1859:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
1860:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1861:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Unlocked */
1862:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1863:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1864:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
1865:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
1866:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else
1867:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
1868:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
1869:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
1870:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
1871:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1872:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
1873:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Read an amount of data in blocking mode from a specific memory address
1874:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1875:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1876:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1877:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
1878:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
1879:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
1880:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1881:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1882:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1883:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL status
1884:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
1885:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Read(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddres
1886:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
1887:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint32_t tickstart = 0U;
1888:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1889:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Check the parameters */
1890:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
1891:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1892:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
1893:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
1894:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
1895:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
1896:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return  HAL_ERROR;
1897:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
1898:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1899:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Locked */
1900:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1901:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1902:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1903:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     tickstart = HAL_GetTick();
1904:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1905:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
1906:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
1907:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_TIMEOUT;
1908:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
1909:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1910:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
1911:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
1912:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1913:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1914:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Prepare transfer parameters */
1915:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
ARM GAS  /tmp/cchP46LN.s 			page 35


1916:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount = Size;
1917:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
1918:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1919:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
1920:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_O
1921:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
1922:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
1923:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
1924:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Process Unlocked */
1925:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1926:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_ERROR;
1927:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
1928:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       else
1929:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
1930:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Process Unlocked */
1931:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1932:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_TIMEOUT;
1933:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
1934:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
1935:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1936:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Send Slave Address */
1937:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
1938:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
1939:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
1940:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1941:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_START_READ
1942:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
1943:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     else
1944:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
1945:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1946:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_REA
1947:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
1948:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1949:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     do
1950:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
1951:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Wait until RXNE flag is set */
1952:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
1953:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
1954:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_TIMEOUT;
1955:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
1956:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1957:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Read data from RXDR */
1958:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
1959:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize--;
1960:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferCount--;
1961:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1962:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if((hi2c->XferSize == 0U) && (hi2c->XferCount != 0U))
1963:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
1964:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Wait until TCR flag is set */
1965:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
1966:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         {
1967:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           return HAL_TIMEOUT;
1968:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         }
1969:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1970:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         if(hi2c->XferCount > MAX_NBYTE_SIZE)
1971:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         {
1972:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
ARM GAS  /tmp/cchP46LN.s 			page 36


1973:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
1974:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         }
1975:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         else
1976:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         {
1977:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
1978:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
1979:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         }
1980:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
1981:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }while(hi2c->XferCount > 0U);
1982:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1983:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
1984:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Wait until STOPF flag is reset */ 
1985:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1986:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
1987:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
1988:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
1989:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_ERROR;
1990:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
1991:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       else
1992:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
1993:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_TIMEOUT;
1994:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
1995:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
1996:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
1997:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Clear STOP Flag */
1998:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
1999:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2000:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
2001:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
2002:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2003:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
2004:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
2005:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2006:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Unlocked */
2007:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2008:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2009:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
2010:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
2011:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else
2012:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
2013:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
2014:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
2015:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
2016:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
2017:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Write an amount of data in non-blocking mode with Interrupt to a specific memory addres
2018:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2019:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2020:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2021:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
2022:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2023:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2024:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2025:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2026:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL status
2027:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
2028:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Write_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAd
2029:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
ARM GAS  /tmp/cchP46LN.s 			page 37


2030:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint32_t tickstart = 0U;
2031:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint32_t xfermode = 0U;
2032:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2033:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Check the parameters */
2034:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2035:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2036:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
2037:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
2038:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
2039:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
2040:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return  HAL_ERROR;
2041:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
2042:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     
2043:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2044:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
2045:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_BUSY;
2046:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
2047:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2048:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Locked */
2049:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2050:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2051:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2052:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2053:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2054:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
2055:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2056:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2057:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2058:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Prepare transfer parameters */
2059:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2060:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2061:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2062:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
2063:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     
2064:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
2065:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
2066:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2067:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2068:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
2069:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     else
2070:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
2071:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2072:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
2073:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
2074:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2075:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2076:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstart
2077:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
2078:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
2079:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
2080:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Process Unlocked */
2081:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2082:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_ERROR;
2083:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
2084:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       else
2085:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
2086:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Process Unlocked */
ARM GAS  /tmp/cchP46LN.s 			page 38


2087:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2088:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_TIMEOUT;
2089:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
2090:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
2091:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2092:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2093:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_TransferConfig(hi2c,DevAddress, hi2c->XferSize, xfermode, I2C_NO_STARTSTOP);
2094:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2095:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Unlocked */
2096:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c); 
2097:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2098:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process 
2099:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****               process unlock */
2101:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, TXI interrupt */
2103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* possible to enable all of these */
2104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
2105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
2106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
2108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
2109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else
2110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
2111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
2112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
2113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
2114:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2115:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
2116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Read an amount of data in non-blocking mode with Interrupt from a specific memory addre
2117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2120:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
2121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2124:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL status
2126:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
2127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Read_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAdd
2128:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
2129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint32_t tickstart = 0U;
2130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint32_t xfermode = 0U;
2131:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2132:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Check the parameters */
2133:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
2136:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
2137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
2138:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
2139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return  HAL_ERROR;
2140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
2141:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     
2142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
ARM GAS  /tmp/cchP46LN.s 			page 39


2144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_BUSY;
2145:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
2146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Locked */
2148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2151:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
2154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Prepare transfer parameters */
2158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
2162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     
2163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
2164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
2165:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
2168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     else
2169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
2170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2171:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
2172:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
2173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstart)
2176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
2177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
2178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
2179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Process Unlocked */
2180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_ERROR;
2182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
2183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       else
2184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
2185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Process Unlocked */
2186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_TIMEOUT;
2188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
2189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
2190:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_TransferConfig(hi2c,DevAddress,hi2c->XferSize, xfermode, I2C_GENERATE_START_READ);
2193:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Unlocked */
2195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****               process unlock */
2200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
ARM GAS  /tmp/cchP46LN.s 			page 40


2201:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, RXI interrupt */
2202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* possible to enable all of these */
2203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
2204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT);
2205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
2207:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
2208:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else
2209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
2210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
2211:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
2212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
2213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
2214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Write an amount of data in non-blocking mode with DMA to a specific memory address
2215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
2219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2222:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL status
2224:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
2225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Write_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemA
2226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
2227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint32_t tickstart = 0U;
2228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint32_t xfermode = 0U;
2229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Check the parameters */
2231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
2234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
2235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
2236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
2237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return  HAL_ERROR;
2238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
2239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
2242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_BUSY;
2243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
2244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Locked */
2246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
2252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Prepare transfer parameters */
2256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
ARM GAS  /tmp/cchP46LN.s 			page 41


2258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
2260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     
2261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
2262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
2263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
2266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     else
2267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
2268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
2270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
2271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstart
2274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
2275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
2276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
2277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Process Unlocked */
2278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_ERROR;
2280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
2281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       else
2282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
2283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Process Unlocked */
2284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_TIMEOUT;
2286:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
2287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
2288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Set the I2C DMA transfer complete callback */
2290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->hdmatx->XferCpltCallback = I2C_DMAMasterTransmitCplt;
2291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Set the DMA error callback */
2293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
2294:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Set the unused DMA callbacks to NULL */
2296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->hdmatx->XferHalfCpltCallback = NULL;
2297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->hdmatx->XferAbortCallback = NULL;
2298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Enable the DMA channel */
2300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->TXDR, hi2c->XferSize
2301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Send Slave Address */
2303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, xfermode, I2C_NO_STARTSTOP);
2305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Update XferCount value */
2307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount -= hi2c->XferSize;
2308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Unlocked */
2310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****               process unlock */
ARM GAS  /tmp/cchP46LN.s 			page 42


2315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Enable ERR and NACK interrupts */
2316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
2317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2318:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Enable DMA Request */
2319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
2320:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
2322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
2323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else
2324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
2325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
2326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
2327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
2328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
2330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Reads an amount of data in non-blocking mode with DMA from a specific memory address.
2331:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
2335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2337:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Size Amount of data to be read
2339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL status
2340:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
2341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Read_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAd
2342:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
2343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint32_t tickstart = 0U;
2344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint32_t xfermode = 0U;
2345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Check the parameters */
2347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
2350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
2351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
2352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
2353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return  HAL_ERROR;
2354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
2355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2357:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
2358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_BUSY;
2359:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
2360:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2361:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Locked */
2362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2363:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2366:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
2368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Prepare transfer parameters */
ARM GAS  /tmp/cchP46LN.s 			page 43


2372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2375:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
2376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
2378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
2379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
2382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     else
2383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
2384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
2386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
2387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstart)
2390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
2391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
2392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
2393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Process Unlocked */
2394:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_ERROR;
2396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
2397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       else
2398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
2399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Process Unlocked */
2400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_TIMEOUT;
2402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
2403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
2404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Set the I2C DMA transfer complete callback */
2406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->hdmarx->XferCpltCallback = I2C_DMAMasterReceiveCplt;
2407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2408:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Set the DMA error callback */
2409:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
2410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2411:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Set the unused DMA callbacks to NULL */
2412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->hdmarx->XferHalfCpltCallback = NULL;
2413:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->hdmarx->XferAbortCallback = NULL;
2414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2415:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Enable the DMA channel */
2416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)pData, hi2c->XferSize
2417:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_TransferConfig(hi2c,DevAddress, hi2c->XferSize, xfermode, I2C_GENERATE_START_READ);
2420:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Update XferCount value */
2422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount -= hi2c->XferSize;
2423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2424:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Unlocked */
2425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2426:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Enable DMA Request */
2428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
ARM GAS  /tmp/cchP46LN.s 			page 44


2429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2430:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2431:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2432:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****               process unlock */
2433:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Enable ERR and NACK interrupts */
2434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
2435:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
2437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
2438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else
2439:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
2440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
2441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
2442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
2443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2444:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
2445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Checks if target device is ready for communication.
2446:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @note   This function is used with Memory devices
2447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2450:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
2451:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Trials Number of trials
2452:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
2453:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL status
2454:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
2455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_IsDeviceReady(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Tria
2456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
2457:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint32_t tickstart = 0U;
2458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __IO uint32_t I2C_Trials = 0U;
2460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
2462:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
2463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2464:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
2465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_BUSY;
2466:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
2467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2468:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Locked */
2469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2470:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_BUSY;
2472:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
2473:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     do
2475:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
2476:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Generate Start */
2477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Instance->CR2 = I2C_GENERATE_START(hi2c->Init.AddressingMode,DevAddress);
2478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2479:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
2480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Wait until STOPF flag is set or a NACK flag is set*/
2481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       tickstart = HAL_GetTick();
2482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       while((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (__HAL_I2C_GET_FLAG(hi2c, I2C_FL
2483:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
2484:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       	if(Timeout != HAL_MAX_DELAY)
2485:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       	{
ARM GAS  /tmp/cchP46LN.s 			page 45


2486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           if((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
2487:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           {
2488:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****             /* Device is ready */
2489:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****             hi2c->State = HAL_I2C_STATE_READY;
2490:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****             /* Process Unlocked */
2491:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****             __HAL_UNLOCK(hi2c);
2492:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****             return HAL_TIMEOUT;
2493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           }
2494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         } 
2495:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
2496:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2497:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Check if the NACKF flag has not been set */
2498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == RESET)
2499:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
2500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Wait until STOPF flag is reset */ 
2501:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
2502:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         {
2503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           return HAL_TIMEOUT;
2504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         }
2505:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Clear STOP Flag */
2507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
2508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2509:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Device is ready */
2510:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
2511:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2512:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Process Unlocked */
2513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2514:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_OK;
2516:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
2517:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       else
2518:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
2519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Wait until STOPF flag is reset */
2520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
2521:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         {
2522:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           return HAL_TIMEOUT;
2523:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         }
2524:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2525:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Clear NACK Flag */
2526:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
2527:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2528:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Clear STOP Flag, auto generated with autoend*/
2529:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
2530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
2531:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2532:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Check if the maximum allowed number of trials has been reached */
2533:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if (I2C_Trials++ == Trials)
2534:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
2535:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Generate Stop */
2536:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_STOP;
2537:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2538:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Wait until STOPF flag is reset */ 
2539:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
2540:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         {
2541:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           return HAL_TIMEOUT;
2542:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         }
ARM GAS  /tmp/cchP46LN.s 			page 46


2543:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2544:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Clear STOP Flag */
2545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
2546:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
2547:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }while(I2C_Trials < Trials);
2548:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2549:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
2550:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2551:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Unlocked */
2552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2553:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2554:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_TIMEOUT;
2555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
2556:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else
2557:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
2558:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
2559:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
2560:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
2561:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2562:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
2563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Sequential transmit in master I2C mode an amount of data in non-blocking mode with Inte
2564:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
2565:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2567:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2568:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
2569:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2570:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2571:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
2572:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL status
2573:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
2574:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Sequential_Transmit_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddres
2575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
2576:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint32_t xfermode = 0U;
2577:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_WRITE;
2578:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2579:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Check the parameters */
2580:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
2581:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2582:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
2583:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
2584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Locked */
2585:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2586:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2587:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
2588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
2589:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
2590:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2591:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Prepare transfer parameters */
2592:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2593:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2594:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
2595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
2596:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* If size > MAX_NBYTE_SIZE, use reload mode */
2598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
2599:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
ARM GAS  /tmp/cchP46LN.s 			page 47


2600:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2601:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2602:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
2603:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     else
2604:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
2605:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2606:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
2607:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
2608:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* If transfer direction not change, do not generate Restart Condition */
2610:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
2611:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->PreviousState == I2C_STATE_MASTER_BUSY_TX)
2612:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
2613:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
2614:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
2615:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2616:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Send Slave Address and set NBYTES to write */
2617:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, xfermode, xferrequest);
2618:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2619:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Unlocked */
2620:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2621:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2622:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2623:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2624:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****               process unlock */
2625:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
2626:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2627:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
2628:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
2629:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else
2630:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
2631:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
2632:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
2633:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
2634:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2635:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
2636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Sequential receive in master I2C mode an amount of data in non-blocking mode with Inter
2637:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
2638:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2639:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2640:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2641:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
2642:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2643:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2644:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
2645:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL status
2646:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
2647:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Sequential_Receive_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress
2648:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
2649:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint32_t xfermode = 0U;
2650:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_READ;
2651:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2652:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Check the parameters */
2653:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
2654:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2655:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
2656:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
ARM GAS  /tmp/cchP46LN.s 			page 48


2657:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Locked */
2658:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2659:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2660:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
2661:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
2662:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
2663:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2664:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Prepare transfer parameters */
2665:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2666:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2667:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
2668:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
2669:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2670:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* If hi2c->XferCount > MAX_NBYTE_SIZE, use reload mode */
2671:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
2672:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
2673:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2674:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2675:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
2676:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     else
2677:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
2678:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2679:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
2680:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
2681:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2682:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* If transfer direction not change, do not generate Restart Condition */
2683:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
2684:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->PreviousState == I2C_STATE_MASTER_BUSY_RX)
2685:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
2686:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
2687:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
2688:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2689:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Send Slave Address and set NBYTES to read */
2690:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_TransferConfig(hi2c,DevAddress, hi2c->XferSize, xfermode, xferrequest);
2691:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2692:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Unlocked */
2693:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2694:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2695:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2696:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2697:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****               process unlock */
2698:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT);
2699:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2700:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
2701:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
2702:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else
2703:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
2704:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
2705:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
2706:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
2707:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2708:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
2709:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Sequential transmit in slave/device I2C mode an amount of data in non-blocking mode wit
2710:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
2711:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2712:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2713:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
ARM GAS  /tmp/cchP46LN.s 			page 49


2714:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2715:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
2716:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL status
2717:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
2718:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Sequential_Transmit_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uin
2719:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
2720:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Check the parameters */
2721:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
2722:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2723:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if((hi2c->State & HAL_I2C_STATE_LISTEN) == HAL_I2C_STATE_LISTEN)
2724:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
2725:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
2726:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
2727:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return  HAL_ERROR;
2728:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
2729:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2730:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
2731:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_TX_IT);
2732:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2733:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Locked */
2734:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2735:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     
2736:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
2737:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* and then toggle the HAL slave RX state to TX state */
2738:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
2739:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
2740:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Disable associated Interrupts */
2741:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
2742:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
2743:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2744:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX_LISTEN;
2745:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
2746:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
2747:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2748:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Enable Address Acknowledge */
2749:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
2750:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2751:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Prepare transfer parameters */
2752:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2753:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2754:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
2755:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
2756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
2757:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2758:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_GET_DIR(hi2c) == I2C_DIRECTION_RECEIVE)
2759:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
2760:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Clear ADDR flag after prepare the transfer parameters */
2761:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* This action will generate an acknowledge to the Master */
2762:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c,I2C_FLAG_ADDR);
2763:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
2764:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2765:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Unlocked */
2766:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2767:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2768:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2769:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
2770:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     process unlock */
ARM GAS  /tmp/cchP46LN.s 			page 50


2771:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* REnable ADDR interrupt */
2772:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT | I2C_XFER_LISTEN_IT);
2773:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2774:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
2775:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
2776:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else
2777:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
2778:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_ERROR;
2779:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
2780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
2781:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2782:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
2783:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Sequential receive in slave/device I2C mode an amount of data in non-blocking mode with
2784:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
2785:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2786:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2787:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2788:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2789:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
2790:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL status
2791:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
2792:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Sequential_Receive_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint
2793:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
2794:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Check the parameters */
2795:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
2796:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2797:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if((hi2c->State & HAL_I2C_STATE_LISTEN) == HAL_I2C_STATE_LISTEN)
2798:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
2799:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
2800:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
2801:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return  HAL_ERROR;
2802:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
2803:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2804:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
2805:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT);
2806:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2807:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Locked */
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2809:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     
2810:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
2811:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* and then toggle the HAL slave TX state to RX state */
2812:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
2813:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
2814:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Disable associated Interrupts */
2815:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
2816:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
2817:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     
2818:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX_LISTEN;
2819:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
2820:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
2821:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2822:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Enable Address Acknowledge */
2823:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
2824:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2825:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Prepare transfer parameters */
2826:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2827:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
ARM GAS  /tmp/cchP46LN.s 			page 51


2828:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
2829:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
2830:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
2831:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2832:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_GET_DIR(hi2c) == I2C_DIRECTION_TRANSMIT)
2833:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
2834:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Clear ADDR flag after prepare the transfer parameters */
2835:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* This action will generate an acknowledge to the Master */
2836:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c,I2C_FLAG_ADDR);
2837:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
2838:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2839:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Unlocked */
2840:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2841:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2842:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2843:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
2844:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     process unlock */
2845:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* REnable ADDR interrupt */
2846:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_LISTEN_IT);
2847:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2848:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
2849:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
2850:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else
2851:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
2852:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_ERROR;
2853:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
2854:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
2855:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2856:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
2857:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Enable the Address listen mode with Interrupt.
2858:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2859:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2860:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL status
2861:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
2862:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_EnableListen_IT(I2C_HandleTypeDef *hi2c)
2863:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
2864:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
2865:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
2866:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_LISTEN;
2867:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR = I2C_Slave_ISR_IT;
2868:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2869:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Enable the Address Match interrupt */
2870:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
2871:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2872:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
2873:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
2874:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else
2875:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
2876:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
2877:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
2878:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
2879:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2880:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
2881:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Disable the Address listen mode with Interrupt.
2882:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2883:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C
2884:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL status
ARM GAS  /tmp/cchP46LN.s 			page 52


2885:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
2886:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_DisableListen_IT(I2C_HandleTypeDef *hi2c)
2887:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
2888:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Declaration of tmp to prevent undefined behavior of volatile usage */
2889:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint32_t tmp;
2890:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2891:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Disable Address listen mode only if a transfer is not ongoing */
2892:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_LISTEN)
2893:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
2894:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     tmp = (uint32_t)(hi2c->State) & I2C_STATE_MSK;
2895:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->PreviousState = tmp | (uint32_t)(hi2c->Mode);
2896:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
2897:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
2898:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR = NULL;
2899:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2900:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Disable the Address Match interrupt */
2901:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
2902:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2903:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
2904:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
2905:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else
2906:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
2907:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
2908:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
2909:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
2910:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2911:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
2912:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Abort a master I2C IT or DMA process communication with Interrupt.
2913:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2914:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2915:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2916:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
2917:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL status
2918:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
2919:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Abort_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress)
2920:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
2921:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->Mode == HAL_I2C_MODE_MASTER)
2922:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
2923:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Locked */
2924:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2925:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2926:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Disable Interrupts */
2927:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
2928:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
2929:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2930:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Set State at HAL_I2C_STATE_ABORT */
2931:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_ABORT;
2932:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2933:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Set NBYTES to 1 to generate a dummy read on I2C peripheral */
2934:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Set AUTOEND mode, this will generate a NACK then STOP condition to abort the current transfe
2935:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, 1, I2C_AUTOEND_MODE, I2C_GENERATE_STOP);
2936:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2937:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Unlocked */
2938:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2939:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2940:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process 
2941:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
ARM GAS  /tmp/cchP46LN.s 			page 53


2942:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****               process unlock */
2943:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
2944:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2945:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
2946:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
2947:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else
2948:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
2949:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Wrong usage of abort function */
2950:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* This function should be used only in case of abort monitored by master device */
2951:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_ERROR;
2952:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
2953:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
2954:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2955:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
2956:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @}
2957:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
2958:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2959:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /** @defgroup I2C_IRQ_Handler_and_Callbacks IRQ Handler and Callbacks
2960:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****  * @{
2961:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****  */   
2962:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2963:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
2964:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  This function handles I2C event interrupt request.
2965:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2966:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2967:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval None
2968:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
2969:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** void HAL_I2C_EV_IRQHandler(I2C_HandleTypeDef *hi2c)
2970:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
2971:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Get current IT Flags and IT sources value */
2972:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint32_t itflags   = READ_REG(hi2c->Instance->ISR);
2973:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
2974:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2975:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* I2C events treatment -------------------------------------*/
2976:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->XferISR != NULL)
2977:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
2978:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR(hi2c, itflags, itsources);
2979:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
2980:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
2981:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2982:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
2983:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  This function handles I2C error interrupt request.
2984:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2985:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2986:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval None
2987:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
2988:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** void HAL_I2C_ER_IRQHandler(I2C_HandleTypeDef *hi2c)
2989:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
2990:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint32_t itflags   = READ_REG(hi2c->Instance->ISR);
2991:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
2992:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2993:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* I2C Bus error interrupt occurred ------------------------------------*/
2994:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(((itflags & I2C_FLAG_BERR) != RESET) && ((itsources & I2C_IT_ERRI) != RESET))
2995:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
2996:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_BERR;
2997:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
2998:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Clear BERR flag */
ARM GAS  /tmp/cchP46LN.s 			page 54


2999:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
3000:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
3001:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3002:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* I2C Over-Run/Under-Run interrupt occurred ----------------------------------------*/
3003:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(((itflags & I2C_FLAG_OVR) != RESET) && ((itsources & I2C_IT_ERRI) != RESET))
3004:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
3005:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_OVR;
3006:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3007:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Clear OVR flag */
3008:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
3009:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
3010:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3011:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* I2C Arbitration Loss error interrupt occurred -------------------------------------*/
3012:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(((itflags & I2C_FLAG_ARLO) != RESET) && ((itsources & I2C_IT_ERRI) != RESET))
3013:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
3014:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_ARLO;
3015:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3016:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Clear ARLO flag */
3017:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
3018:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
3019:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3020:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Call the Error Callback in case of Error detected */
3021:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if((hi2c->ErrorCode & (HAL_I2C_ERROR_BERR | HAL_I2C_ERROR_OVR | HAL_I2C_ERROR_ARLO)) !=  HAL_I2C_
3022:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
3023:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_ITError(hi2c, hi2c->ErrorCode);
3024:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
3025:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
3026:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3027:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
3028:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Master Tx Transfer completed callback.
3029:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3030:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3031:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval None
3032:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
3033:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** __weak void HAL_I2C_MasterTxCpltCallback(I2C_HandleTypeDef *hi2c)
3034:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
3035:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3036:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   UNUSED(hi2c);
3037:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3038:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3039:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****             the HAL_I2C_MasterTxCpltCallback could be implemented in the user file
3040:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****    */
3041:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
3042:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3043:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
3044:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Master Rx Transfer completed callback.
3045:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3046:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3047:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval None
3048:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
3049:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** __weak void HAL_I2C_MasterRxCpltCallback(I2C_HandleTypeDef *hi2c)
3050:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
3051:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3052:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   UNUSED(hi2c);
3053:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3054:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3055:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****             the HAL_I2C_MasterRxCpltCallback could be implemented in the user file
ARM GAS  /tmp/cchP46LN.s 			page 55


3056:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****    */
3057:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
3058:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3059:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /** @brief  Slave Tx Transfer completed callback.
3060:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3061:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3062:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval None
3063:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
3064:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** __weak void HAL_I2C_SlaveTxCpltCallback(I2C_HandleTypeDef *hi2c)
3065:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
3066:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3067:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   UNUSED(hi2c);
3068:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3069:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3070:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****             the HAL_I2C_SlaveTxCpltCallback could be implemented in the user file
3071:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****    */
3072:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
3073:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3074:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
3075:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Slave Rx Transfer completed callback.
3076:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3077:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3078:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval None
3079:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
3080:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** __weak void HAL_I2C_SlaveRxCpltCallback(I2C_HandleTypeDef *hi2c)
3081:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
3082:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3083:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   UNUSED(hi2c);
3084:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3085:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3086:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****             the HAL_I2C_SlaveRxCpltCallback could be implemented in the user file
3087:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****    */
3088:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
3089:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3090:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
3091:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Slave Address Match callback.
3092:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3093:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3094:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  TransferDirection: Master request Transfer Direction (Write/Read), value of @ref I2C_XF
3095:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  AddrMatchCode: Address Match Code
3096:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval None
3097:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
3098:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** __weak void HAL_I2C_AddrCallback(I2C_HandleTypeDef *hi2c, uint8_t TransferDirection, uint16_t AddrM
3099:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
3100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3101:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   UNUSED(hi2c);
3102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   UNUSED(TransferDirection);
3103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   UNUSED(AddrMatchCode);
3104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****             the HAL_I2C_AddrCallback() could be implemented in the user file
3107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****    */
3108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
3109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
3111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Listen Complete callback.
3112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
ARM GAS  /tmp/cchP46LN.s 			page 56


3113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3114:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval None
3115:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
3116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** __weak void HAL_I2C_ListenCpltCallback(I2C_HandleTypeDef *hi2c)
3117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
3118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   UNUSED(hi2c);
3120:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****             the HAL_I2C_ListenCpltCallback() could be implemented in the user file
3123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****    */
3124:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
3125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3126:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
3127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Memory Tx Transfer completed callback.
3128:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval None
3131:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
3132:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** __weak void HAL_I2C_MemTxCpltCallback(I2C_HandleTypeDef *hi2c)
3133:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
3134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   UNUSED(hi2c);
3136:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3138:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****             the HAL_I2C_MemTxCpltCallback could be implemented in the user file
3139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****    */
3140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
3141:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
3143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Memory Rx Transfer completed callback.
3144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3145:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval None
3147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
3148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** __weak void HAL_I2C_MemRxCpltCallback(I2C_HandleTypeDef *hi2c)
3149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
3150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3151:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   UNUSED(hi2c);
3152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****             the HAL_I2C_MemRxCpltCallback could be implemented in the user file
3155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****    */
3156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
3157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
3159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  I2C error callback.
3160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval None
3163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
3164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** __weak void HAL_I2C_ErrorCallback(I2C_HandleTypeDef *hi2c)
3165:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
3166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   UNUSED(hi2c);
3168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
ARM GAS  /tmp/cchP46LN.s 			page 57


3170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****             the HAL_I2C_ErrorCallback could be implemented in the user file
3171:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****    */
3172:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
3173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
3175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  I2C abort callback.
3176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval None
3179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
3180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** __weak void HAL_I2C_AbortCpltCallback(I2C_HandleTypeDef *hi2c)
3181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
3182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   UNUSED(hi2c);
3184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****             the HAL_I2C_AbortCpltCallback could be implemented in the user file
3187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****    */
3188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
3189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3190:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
3191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @}
3192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
3193:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions_Group3 Peripheral State, Mode and Error functions
3195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****  *  @brief   Peripheral State, Mode and Error functions
3196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****  *
3197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** @verbatim
3198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****  ===============================================================================
3199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****             ##### Peripheral State, Mode and Error functions #####
3200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****  ===============================================================================
3201:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     [..]
3202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     This subsection permit to get in run-time the status of the peripheral
3203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     and the data flow.
3204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** @endverbatim
3206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @{
3207:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
3208:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
3210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Return the I2C handle state.
3211:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL state
3214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
3215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** HAL_I2C_StateTypeDef HAL_I2C_GetState(I2C_HandleTypeDef *hi2c)
3216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
3217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Return I2C handle state */
3218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   return hi2c->State;
3219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
3220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
3222:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Returns the I2C Master, Slave, Memory or no mode.
3223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3224:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *         the configuration information for I2C module
3225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL mode
3226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
ARM GAS  /tmp/cchP46LN.s 			page 58


3227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** HAL_I2C_ModeTypeDef HAL_I2C_GetMode(I2C_HandleTypeDef *hi2c)
3228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
3229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   return hi2c->Mode;
3230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
3231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
3233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** * @brief  Return the I2C error code.
3234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *              the configuration information for the specified I2C.
3236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** * @retval I2C Error Code
3237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** */
3238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** uint32_t HAL_I2C_GetError(I2C_HandleTypeDef *hi2c)
3239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
3240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   return hi2c->ErrorCode;
3241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
3242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
3244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @}
3245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */  
3246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
3248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @}
3249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
3250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /** @addtogroup I2C_Private_Functions
3252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @{
3253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
3254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
3256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Master Mode with Interrupt.
3257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
3260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
3261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL status
3262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
3263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
3264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
3265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint16_t devaddress = 0U;
3266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Process Locked */
3268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
3269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_AF) != RESET) && ((ITSources & I2C_IT_NACKI) != RESET))
3271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
3272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Clear NACK Flag */
3273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
3274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Set corresponding Error Code */
3276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* No need to generate STOP, it is automatically done */
3277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Error callback will be send during stop flag treatment */
3278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
3279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Flush TX register */
3281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
3282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
3283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_RXNE) != RESET) && ((ITSources & I2C_IT_RXI) != RESET))
ARM GAS  /tmp/cchP46LN.s 			page 59


3284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
3285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Read data from RXDR */
3286:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
3287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferSize--;
3288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount--;
3289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
3290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_TXIS) != RESET) && ((ITSources & I2C_IT_TXI) != RESET))
3291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
3292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Write data to TXDR */
3293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->TXDR = (*hi2c->pBuffPtr++);
3294:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferSize--;
3295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount--;	
3296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
3297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_TCR) != RESET) && ((ITSources & I2C_IT_TCI) != RESET))
3298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
3299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((hi2c->XferSize == 0U) && (hi2c->XferCount != 0U))
3300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
3301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       devaddress = (hi2c->Instance->CR2 & I2C_CR2_SADD);
3302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       
3303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(hi2c->XferCount > MAX_NBYTE_SIZE)
3304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
3305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         hi2c->XferSize = MAX_NBYTE_SIZE;
3306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, devaddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
3307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
3308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       else
3309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
3310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         hi2c->XferSize = hi2c->XferCount;
3311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         if(hi2c->XferOptions != I2C_NO_OPTION_FRAME)
3312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         {
3313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, devaddress, hi2c->XferSize, hi2c->XferOptions, I2C_NO_STARTSTOP)
3314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         }
3315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         else
3316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         {
3317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, devaddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
3318:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         }
3319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
3320:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
3321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     else
3322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
3323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Call TxCpltCallback() if no stop mode is set */
3324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
3325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
3326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Call I2C Master Sequential complete process */
3327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         I2C_ITMasterSequentialCplt(hi2c);
3328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
3329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       else
3330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
3331:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Wrong size Status regarding TCR flag event */
3332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Call the corresponding callback to inform upper layer of End of Transfer */
3333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
3334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
3335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
3336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
3337:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_TC) != RESET) && ((ITSources & I2C_IT_TCI) != RESET))
3338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
3339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount == 0U)
3340:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
ARM GAS  /tmp/cchP46LN.s 			page 60


3341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
3342:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
3343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Generate a stop condition in case of no transfer option */
3344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         if(hi2c->XferOptions == I2C_NO_OPTION_FRAME)
3345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         {
3346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           /* Generate Stop */
3347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           hi2c->Instance->CR2 |= I2C_CR2_STOP;
3348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         }
3349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         else
3350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         {
3351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           /* Call I2C Master Sequential complete process */
3352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           I2C_ITMasterSequentialCplt(hi2c);
3353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         }
3354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
3355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
3356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     else
3357:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
3358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Wrong size Status regarding TC flag event */
3359:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
3360:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
3361:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
3362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
3363:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_STOPF) != RESET) && ((ITSources & I2C_IT_STOPI) != RESET))
3365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
3366:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Call I2C Master complete process */
3367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_ITMasterCplt(hi2c, ITFlags);
3368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
3369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Process Unlocked */
3371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
3372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   return HAL_OK;
3374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
3375:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
3377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Slave Mode with Interrupt.
3378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
3381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
3382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL status
3383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
3384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint3
3385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
3386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Process locked */
3387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
3388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   
3389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_AF) != RESET) && ((ITSources & I2C_IT_NACKI) != RESET))
3390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
3391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Check that I2C transfer finished */
3392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* if yes, normal use case, a NACK is sent by the MASTER when Transfer is finished */
3393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Mean XferCount == 0*/
3394:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* So clear Flag NACKF only */
3395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount == 0U)
3396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
3397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(((hi2c->XferOptions == I2C_FIRST_AND_LAST_FRAME) || (hi2c->XferOptions == I2C_LAST_FRAME))
ARM GAS  /tmp/cchP46LN.s 			page 61


3398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         (hi2c->State == HAL_I2C_STATE_LISTEN))
3399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
3400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Call I2C Listen complete process */
3401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         I2C_ITListenCplt(hi2c, ITFlags);
3402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
3403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       else if((hi2c->XferOptions != I2C_NO_OPTION_FRAME) && (hi2c->State == HAL_I2C_STATE_BUSY_TX_L
3404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
3405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Clear NACK Flag */
3406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
3407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3408:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Flush TX register */
3409:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         I2C_Flush_TXDR(hi2c);
3410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3411:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Last Byte is Transmitted */
3412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Call I2C Slave Sequential complete process */
3413:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         I2C_ITSlaveSequentialCplt(hi2c);
3414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
3415:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       else
3416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
3417:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Clear NACK Flag */
3418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
3419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
3420:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
3421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     else
3422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
3423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* if no, error use case, a Non-Acknowledge of last Data is generated by the MASTER*/
3424:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Clear NACK Flag */
3425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
3426:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Set ErrorCode corresponding to a Non-Acknowledge */
3428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
3429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
3430:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
3431:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_RXNE) != RESET) && ((ITSources & I2C_IT_RXI) != RESET))
3432:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
3433:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount > 0U)
3434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
3435:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Read data from RXDR */
3436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
3437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize--;
3438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferCount--;
3439:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
3440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((hi2c->XferCount == 0U) && \
3442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****        (hi2c->XferOptions != I2C_NO_OPTION_FRAME))
3443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
3444:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Call I2C Slave Sequential complete process */
3445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_ITSlaveSequentialCplt(hi2c);
3446:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****    }
3447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
3448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_ADDR) != RESET) && ((ITSources & I2C_IT_ADDRI) != RESET))
3449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
3450:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_ITAddrCplt(hi2c, ITFlags);
3451:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
3452:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_TXIS) != RESET) && ((ITSources & I2C_IT_TXI) != RESET))
3453:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
3454:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Write data to TXDR only if XferCount not reach "0" */
ARM GAS  /tmp/cchP46LN.s 			page 62


3455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* A TXIS flag can be set, during STOP treatment      */
3456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Check if all Datas have already been sent */
3457:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* If it is the case, this last write in TXDR is not sent, correspond to a dummy TXIS event */
3458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount > 0U)
3459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
3460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Write data to TXDR */
3461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Instance->TXDR = (*hi2c->pBuffPtr++);
3462:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferCount--;
3463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize--;
3464:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
3465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     else
3466:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
3467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if((hi2c->XferOptions == I2C_NEXT_FRAME) || (hi2c->XferOptions == I2C_FIRST_FRAME))
3468:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
3469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Last Byte is Transmitted */
3470:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Call I2C Slave Sequential complete process */
3471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         I2C_ITSlaveSequentialCplt(hi2c);
3472:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
3473:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
3474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
3475:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3476:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Check if STOPF is set */
3477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_STOPF) != RESET) && ((ITSources & I2C_IT_STOPI) != RESET))
3478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
3479:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Call I2C Slave complete process */
3480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_ITSlaveCplt(hi2c, ITFlags);
3481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
3482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3483:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Process Unlocked */
3484:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
3485:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   return HAL_OK;
3487:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
3488:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3489:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
3490:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Master Mode with DMA.
3491:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3492:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
3494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
3495:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL status
3496:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
3497:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uin
3498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
3499:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint16_t devaddress = 0U;
3500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint32_t xfermode = 0U;
3501:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3502:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Process Locked */
3503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
3504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3505:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_AF) != RESET) && ((ITSources & I2C_IT_NACKI) != RESET))
3506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
3507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Clear NACK Flag */
3508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
3509:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3510:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Set corresponding Error Code */
3511:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
ARM GAS  /tmp/cchP46LN.s 			page 63


3512:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     
3513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* No need to generate STOP, it is automatically done */
3514:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* But enable STOP interrupt, to treat it */
3515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Error callback will be send during stop flag treatment */
3516:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
3517:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3518:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Flush TX register */
3519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
3520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
3521:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_TCR) != RESET) && ((ITSources & I2C_IT_TCI) != RESET))
3522:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
3523:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Disable TC interrupt */
3524:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_TCI);
3525:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     
3526:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount != 0U)
3527:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
3528:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Recover Slave address */
3529:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       devaddress = (hi2c->Instance->CR2 & I2C_CR2_SADD);
3530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       
3531:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Prepare the new XferSize to transfer */
3532:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(hi2c->XferCount > MAX_NBYTE_SIZE)
3533:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
3534:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         hi2c->XferSize = MAX_NBYTE_SIZE;
3535:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         xfermode = I2C_RELOAD_MODE;
3536:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
3537:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       else
3538:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
3539:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         hi2c->XferSize = hi2c->XferCount;
3540:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         xfermode = I2C_AUTOEND_MODE;
3541:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
3542:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3543:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Set the new XferSize in Nbytes register */
3544:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, devaddress, hi2c->XferSize, xfermode, I2C_NO_STARTSTOP);
3545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3546:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Update XferCount value */
3547:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
3548:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3549:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Enable DMA Request */
3550:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(hi2c->State == HAL_I2C_STATE_BUSY_RX)
3551:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
3552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
3553:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
3554:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       else
3555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
3556:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
3557:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
3558:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
3559:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     else
3560:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
3561:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Wrong size Status regarding TCR flag event */
3562:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
3563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
3564:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
3565:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
3566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_STOPF) != RESET) && ((ITSources & I2C_IT_STOPI) != RESET))
3567:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
3568:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Call I2C Master complete process */
ARM GAS  /tmp/cchP46LN.s 			page 64


3569:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_ITMasterCplt(hi2c, ITFlags);
3570:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
3571:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3572:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Process Unlocked */
3573:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
3574:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   return HAL_OK;
3576:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
3577:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3578:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
3579:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Slave Mode with DMA.
3580:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3581:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3582:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
3583:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
3584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL status
3585:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
3586:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
3587:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
3588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Process locked */
3589:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
3590:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   
3591:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_AF) != RESET) && ((ITSources & I2C_IT_NACKI) != RESET))
3592:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
3593:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Check that I2C transfer finished */
3594:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* if yes, normal use case, a NACK is sent by the MASTER when Transfer is finished */
3595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Mean XferCount == 0 */
3596:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* So clear Flag NACKF only */
3597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_GET_DMA_REMAIN_DATA(hi2c) == 0U)
3598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
3599:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Clear NACK Flag */
3600:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
3601:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
3602:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     else
3603:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
3604:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* if no, error use case, a Non-Acknowledge of last Data is generated by the MASTER*/
3605:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Clear NACK Flag */
3606:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
3607:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       
3608:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Set ErrorCode corresponding to a Non-Acknowledge */
3609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
3610:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
3611:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
3612:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_ADDR) != RESET) && ((ITSources & I2C_IT_ADDRI) != RESET))
3613:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
3614:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Clear ADDR flag */
3615:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
3616:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
3617:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_STOPF) != RESET) && ((ITSources & I2C_IT_STOPI) != RESET))
3618:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
3619:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Call I2C Slave complete process */
3620:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_ITSlaveCplt(hi2c, ITFlags);
3621:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
3622:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3623:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Process Unlocked */
3624:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
3625:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
ARM GAS  /tmp/cchP46LN.s 			page 65


3626:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   return HAL_OK;
3627:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
3628:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3629:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
3630:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Master sends target device address followed by internal memory address for write reques
3631:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3632:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3633:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3634:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
3635:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
3636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
3637:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
3638:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Tickstart Tick start value
3639:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL status
3640:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
3641:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint1
3642:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
3643:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   I2C_TransferConfig(hi2c,DevAddress,MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
3644:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3645:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Wait until TXIS flag is set */
3646:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
3647:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
3648:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
3649:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
3650:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_ERROR;
3651:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
3652:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     else
3653:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
3654:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_TIMEOUT;
3655:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
3656:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
3657:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3658:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* If Memory address size is 8Bit */
3659:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(MemAddSize == I2C_MEMADD_SIZE_8BIT)
3660:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
3661:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Send Memory Address */
3662:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
3663:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
3664:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* If Memory address size is 16Bit */
3665:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else
3666:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
3667:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Send MSB of Memory Address */
3668:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
3669:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3670:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Wait until TXIS flag is set */
3671:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
3672:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
3673:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
3674:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
3675:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_ERROR;
3676:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
3677:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       else
3678:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
3679:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_TIMEOUT;
3680:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
3681:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
3682:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     
ARM GAS  /tmp/cchP46LN.s 			page 66


3683:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Send LSB of Memory Address */
3684:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
3685:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
3686:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3687:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Wait until TCR flag is set */
3688:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
3689:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
3690:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_TIMEOUT;
3691:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
3692:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3693:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** return HAL_OK;
3694:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
3695:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3696:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
3697:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Master sends target device address followed by internal memory address for read request
3698:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3699:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3700:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3701:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
3702:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
3703:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
3704:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
3705:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Tickstart Tick start value
3706:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL status
3707:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
3708:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16
3709:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
3710:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   I2C_TransferConfig(hi2c,DevAddress,MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
3711:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3712:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Wait until TXIS flag is set */
3713:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
3714:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
3715:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
3716:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
3717:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_ERROR;
3718:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
3719:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     else
3720:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
3721:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_TIMEOUT;
3722:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
3723:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
3724:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3725:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* If Memory address size is 8Bit */
3726:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(MemAddSize == I2C_MEMADD_SIZE_8BIT)
3727:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
3728:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Send Memory Address */
3729:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
3730:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
3731:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* If Memory address size is 16Bit */
3732:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else
3733:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
3734:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Send MSB of Memory Address */
3735:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
3736:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3737:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Wait until TXIS flag is set */
3738:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
3739:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
ARM GAS  /tmp/cchP46LN.s 			page 67


3740:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
3741:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
3742:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_ERROR;
3743:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
3744:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       else
3745:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
3746:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_TIMEOUT;
3747:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
3748:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
3749:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     
3750:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Send LSB of Memory Address */
3751:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
3752:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
3753:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3754:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Wait until TC flag is set */
3755:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
3756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
3757:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_TIMEOUT;
3758:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
3759:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   
3760:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   return HAL_OK;
3761:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
3762:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3763:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
3764:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  I2C Address complete process callback.
3765:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c I2C handle.
3766:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
3767:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval None
3768:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
3769:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static void I2C_ITAddrCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
3770:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
3771:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint8_t transferdirection = 0U;
3772:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint16_t slaveaddrcode = 0U;
3773:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint16_t ownadd1code = 0U;
3774:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint16_t ownadd2code = 0U;
3775:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3776:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3777:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   UNUSED(ITFlags);
3778:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3779:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* In case of Listen state, need to inform upper layer of address match code event */
3780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if((hi2c->State & HAL_I2C_STATE_LISTEN) == HAL_I2C_STATE_LISTEN)
3781:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
3782:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     transferdirection = I2C_GET_DIR(hi2c);
3783:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     slaveaddrcode     = I2C_GET_ADDR_MATCH(hi2c);
3784:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     ownadd1code       = I2C_GET_OWN_ADDRESS1(hi2c);
3785:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     ownadd2code       = I2C_GET_OWN_ADDRESS2(hi2c);
3786:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3787:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* If 10bits addressing mode is selected */
3788:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
3789:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
3790:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if((slaveaddrcode & SlaveAddr_MSK) == ((ownadd1code >> SlaveAddr_SHIFT) & SlaveAddr_MSK))
3791:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
3792:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         slaveaddrcode = ownadd1code;
3793:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         hi2c->AddrEventCount++;
3794:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         if(hi2c->AddrEventCount == 2U)
3795:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         {
3796:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           /* Reset Address Event counter */
ARM GAS  /tmp/cchP46LN.s 			page 68


3797:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           hi2c->AddrEventCount = 0U;
3798:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3799:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           /* Clear ADDR flag */
3800:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           __HAL_I2C_CLEAR_FLAG(hi2c,I2C_FLAG_ADDR);
3801:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3802:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           /* Process Unlocked */
3803:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           __HAL_UNLOCK(hi2c);
3804:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3805:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           /* Call Slave Addr callback */
3806:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
3807:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         }
3808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
3809:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       else
3810:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
3811:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         slaveaddrcode = ownadd2code;
3812:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3813:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Disable ADDR Interrupts */
3814:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
3815:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3816:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Process Unlocked */
3817:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3818:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3819:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Call Slave Addr callback */
3820:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
3821:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
3822:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
3823:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* else 7 bits addressing mode is selected */
3824:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     else
3825:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
3826:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Disable ADDR Interrupts */
3827:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
3828:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3829:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Process Unlocked */
3830:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3831:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3832:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Call Slave Addr callback */
3833:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
3834:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
3835:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
3836:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Else clear address flag only */
3837:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else
3838:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
3839:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Clear ADDR flag */
3840:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
3841:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3842:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Unlocked */
3843:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3844:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
3845:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
3846:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3847:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
3848:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  I2C Master sequential complete process.
3849:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c I2C handle.
3850:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval None
3851:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
3852:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static void I2C_ITMasterSequentialCplt(I2C_HandleTypeDef *hi2c)
3853:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
ARM GAS  /tmp/cchP46LN.s 			page 69


3854:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Reset I2C handle mode */
3855:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
3856:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3857:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* No Generate Stop, to permit restart mode */
3858:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* The stop will be done at the end of transfer, when I2C_AUTOEND_MODE enable */
3859:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
3860:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
3861:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_READY;
3862:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
3863:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
3864:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3865:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Disable Interrupts */
3866:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
3867:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3868:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Unlocked */
3869:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3870:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3871:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
3872:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     HAL_I2C_MasterTxCpltCallback(hi2c);
3873:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
3874:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* hi2c->State == HAL_I2C_STATE_BUSY_RX */
3875:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else
3876:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
3877:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_READY;
3878:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
3879:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
3880:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3881:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Disable Interrupts */
3882:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
3883:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3884:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Unlocked */
3885:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3886:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3887:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
3888:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     HAL_I2C_MasterRxCpltCallback(hi2c);
3889:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
3890:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
3891:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3892:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
3893:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  I2C Slave sequential complete process.
3894:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c I2C handle.
3895:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval None
3896:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
3897:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static void I2C_ITSlaveSequentialCplt(I2C_HandleTypeDef *hi2c)
3898:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
3899:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Reset I2C handle mode */
3900:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
3901:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3902:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
3903:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
3904:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Remove HAL_I2C_STATE_SLAVE_BUSY_TX, keep only HAL_I2C_STATE_LISTEN */
3905:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
3906:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
3907:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3908:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Disable Interrupts */
3909:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
3910:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
ARM GAS  /tmp/cchP46LN.s 			page 70


3911:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Unlocked */
3912:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3913:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3914:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Call the Tx complete callback to inform upper layer of the end of transmit process */
3915:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     HAL_I2C_SlaveTxCpltCallback(hi2c);
3916:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
3917:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3918:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
3919:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
3920:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Remove HAL_I2C_STATE_SLAVE_BUSY_RX, keep only HAL_I2C_STATE_LISTEN */
3921:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
3922:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
3923:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3924:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Disable Interrupts */
3925:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
3926:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3927:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Unlocked */
3928:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3929:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3930:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Call the Rx complete callback to inform upper layer of the end of receive process */
3931:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     HAL_I2C_SlaveRxCpltCallback(hi2c);
3932:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
3933:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
3934:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3935:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
3936:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  I2C Master complete process.
3937:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c I2C handle.
3938:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
3939:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval None
3940:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
3941:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static void I2C_ITMasterCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
3942:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
3943:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Clear STOP Flag */
3944:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
3945:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3946:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Clear Configuration Register 2 */
3947:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   I2C_RESET_CR2(hi2c);
3948:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3949:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Reset handle parameters */
3950:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
3951:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->XferISR       = NULL;
3952:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
3953:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3954:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if((ITFlags & I2C_FLAG_AF) != RESET)
3955:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
3956:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Clear NACK Flag */
3957:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
3958:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3959:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Set acknowledge error code */
3960:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
3961:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
3962:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3963:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Flush TX register */
3964:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   I2C_Flush_TXDR(hi2c);
3965:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3966:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Disable Interrupts */
3967:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT| I2C_XFER_RX_IT);
ARM GAS  /tmp/cchP46LN.s 			page 71


3968:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3969:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Call the corresponding callback to inform upper layer of End of Transfer */
3970:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if((hi2c->ErrorCode != HAL_I2C_ERROR_NONE) || (hi2c->State == HAL_I2C_STATE_ABORT))
3971:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
3972:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
3973:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_ITError(hi2c, hi2c->ErrorCode);
3974:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
3975:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* hi2c->State == HAL_I2C_STATE_BUSY_TX */
3976:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(hi2c->State == HAL_I2C_STATE_BUSY_TX)
3977:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
3978:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
3979:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3980:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if (hi2c->Mode == HAL_I2C_MODE_MEM)
3981:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
3982:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
3983:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3984:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Process Unlocked */
3985:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3986:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3987:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
3988:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       HAL_I2C_MemTxCpltCallback(hi2c);
3989:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
3990:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     else
3991:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
3992:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
3993:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3994:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Process Unlocked */
3995:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3996:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
3997:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
3998:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       HAL_I2C_MasterTxCpltCallback(hi2c);
3999:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
4000:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
4001:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* hi2c->State == HAL_I2C_STATE_BUSY_RX */
4002:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(hi2c->State == HAL_I2C_STATE_BUSY_RX)
4003:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
4004:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
4005:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4006:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if (hi2c->Mode == HAL_I2C_MODE_MEM)
4007:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
4008:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
4009:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4010:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Process Unlocked */
4011:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4012:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4013:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       HAL_I2C_MemRxCpltCallback(hi2c);
4014:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
4015:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     else
4016:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
4017:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
4018:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4019:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Process Unlocked */
4020:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4021:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4022:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       HAL_I2C_MasterRxCpltCallback(hi2c);
4023:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
4024:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
ARM GAS  /tmp/cchP46LN.s 			page 72


4025:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
4026:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4027:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
4028:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  I2C Slave complete process.
4029:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c I2C handle.
4030:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
4031:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval None
4032:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
4033:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static void I2C_ITSlaveCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
4034:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
4035:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Clear STOP Flag */
4036:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
4037:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4038:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Clear ADDR flag */
4039:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c,I2C_FLAG_ADDR);
4040:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4041:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Disable all interrupts */
4042:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_TX_IT | I2C_XFER_RX_IT);
4043:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4044:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Disable Address Acknowledge */
4045:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->Instance->CR2 |= I2C_CR2_NACK;
4046:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4047:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Clear Configuration Register 2 */
4048:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   I2C_RESET_CR2(hi2c);
4049:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4050:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Flush TX register */
4051:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   I2C_Flush_TXDR(hi2c);
4052:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4053:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* If a DMA is ongoing, Update handle size context */
4054:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN) ||
4055:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****      ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN))
4056:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
4057:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount = I2C_GET_DMA_REMAIN_DATA(hi2c);
4058:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
4059:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4060:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* All data are not transferred, so set error code accordingly */
4061:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->XferCount != 0U)
4062:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
4063:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Set ErrorCode corresponding to a Non-Acknowledge */
4064:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
4065:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
4066:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4067:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Store Last receive data if any */
4068:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_RXNE) != RESET))
4069:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
4070:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Read data from RXDR */
4071:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
4072:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4073:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((hi2c->XferSize > 0U))
4074:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
4075:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize--;
4076:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferCount--;
4077:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4078:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Set ErrorCode corresponding to a Non-Acknowledge */
4079:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
4080:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
4081:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
ARM GAS  /tmp/cchP46LN.s 			page 73


4082:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4083:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
4084:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
4085:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->XferISR = NULL;
4086:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4087:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
4088:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
4089:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
4090:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_ITError(hi2c, hi2c->ErrorCode);
4091:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4092:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Call the Listen Complete callback, to inform upper layer of the end of Listen usecase */
4093:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->State == HAL_I2C_STATE_LISTEN)
4094:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
4095:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Call I2C Listen complete process */
4096:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_ITListenCplt(hi2c, ITFlags);
4097:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
4098:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
4099:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(hi2c->XferOptions != I2C_NO_OPTION_FRAME)
4100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
4101:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
4102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
4103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Unlocked */
4105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Call the Listen Complete callback, to inform upper layer of the end of Listen usecase */
4108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     HAL_I2C_ListenCpltCallback(hi2c);
4109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
4110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Call the corresponding callback to inform upper layer of End of Transfer */
4111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(hi2c->State == HAL_I2C_STATE_BUSY_RX)
4112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
4113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
4114:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4115:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Unlocked */
4116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Call the Slave Rx Complete callback */
4119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     HAL_I2C_SlaveRxCpltCallback(hi2c);
4120:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
4121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else
4122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
4123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
4124:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Unlocked */
4126:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4128:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Call the Slave Tx Complete callback */
4129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     HAL_I2C_SlaveTxCpltCallback(hi2c);
4130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
4131:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
4132:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4133:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
4134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  I2C Listen complete process.
4135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c I2C handle.
4136:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
4137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval None
4138:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
ARM GAS  /tmp/cchP46LN.s 			page 74


4139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static void I2C_ITListenCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
4140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
4141:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Reset handle parameters */
4142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->XferOptions = I2C_NO_OPTION_FRAME;
4143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
4144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
4145:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
4146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->XferISR = NULL;
4147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Store Last receive data if any */
4149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_RXNE) != RESET))
4150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
4151:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Read data from RXDR */
4152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
4153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((hi2c->XferSize > 0U))
4155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
4156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize--;
4157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferCount--;
4158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Set ErrorCode corresponding to a Non-Acknowledge */
4160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
4161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
4162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
4163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Disable all Interrupts*/
4165:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT | I2C_XFER_TX_IT);
4166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Clear NACK Flag */
4168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Process Unlocked */
4171:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
4172:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Call the Listen Complete callback, to inform upper layer of the end of Listen usecase */
4174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   HAL_I2C_ListenCpltCallback(hi2c);
4175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
4176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
4178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  I2C interrupts error process.
4179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c I2C handle.
4180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  ErrorCode Error code to handle.
4181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval None
4182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
4183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static void I2C_ITError(I2C_HandleTypeDef *hi2c, uint32_t ErrorCode)
4184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
4185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Reset handle parameters */
4186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->Mode          = HAL_I2C_MODE_NONE;
4187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
4188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->XferCount     = 0U;
4189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4190:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Set new error code */
4191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->ErrorCode |= ErrorCode;
4192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4193:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Disable Interrupts */
4194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if((hi2c->State == HAL_I2C_STATE_LISTEN)         ||
4195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****      (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN) ||
ARM GAS  /tmp/cchP46LN.s 			page 75


4196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****      (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN))
4197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
4198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Disable all interrupts, except interrupts related to LISTEN state */
4199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_TX_IT);
4200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4201:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* keep HAL_I2C_STATE_LISTEN if set */
4202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
4203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
4204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR       = I2C_Slave_ISR_IT;
4205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
4206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else
4207:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
4208:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Disable all interrupts */
4209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT | I2C_XFER_TX_IT);
4210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     
4211:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* If state is an abort treatment on goind, don't change state */
4212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* This change will be do later */
4213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->State != HAL_I2C_STATE_ABORT)
4214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
4215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Set HAL_I2C_STATE_READY */
4216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->State         = HAL_I2C_STATE_READY;
4217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
4218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
4219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
4220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
4221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4222:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Abort DMA TX transfer if any */
4223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN)
4224:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
4225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
4226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Set the I2C DMA Abort callback :
4228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****        will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
4229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
4230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Unlocked */
4232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Abort DMA TX */
4235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
4236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
4237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Call Directly XferAbortCallback function in case of error */
4238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
4239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
4240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
4241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Abort DMA RX transfer if any */
4242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN)
4243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
4244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
4245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Set the I2C DMA Abort callback :
4247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****        will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
4248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
4249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Unlocked */
4251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
ARM GAS  /tmp/cchP46LN.s 			page 76


4253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Abort DMA RX */
4254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
4255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
4256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Call Directly hi2c->hdmarx->XferAbortCallback function in case of error */
4257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
4258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
4259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
4260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(hi2c->State == HAL_I2C_STATE_ABORT)
4261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
4262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
4263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     
4264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Unlocked */
4265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
4268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     HAL_I2C_AbortCpltCallback(hi2c);
4269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
4270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else
4271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
4272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Unlocked */
4273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
4276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     HAL_I2C_ErrorCallback(hi2c);
4277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
4278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
4279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
4281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  I2C Tx data register flush process.
4282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c I2C handle.
4283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval None
4284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
4285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
4286:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
  25              		.loc 1 4286 0
  26              		.cfi_startproc
  27              	.LVL0:
4287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* If a pending TXIS flag is set */
4288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Write a dummy data in TXDR to clear it */
4289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
  28              		.loc 1 4289 0
  29 0000 0368     		ldr	r3, [r0]
  30 0002 9A69     		ldr	r2, [r3, #24]
  31 0004 9107     		lsl	r1, r2, #30
  32 0006 01D5     		bpl	.L2
4290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
4291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****      hi2c->Instance->TXDR = 0x00U;
  33              		.loc 1 4291 0
  34 0008 0022     		mov	r2, #0
  35 000a 9A62     		str	r2, [r3, #40]
  36              	.L2:
4292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
4293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4294:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Flush TX register if not empty */
4295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
  37              		.loc 1 4295 0
  38 000c 0368     		ldr	r3, [r0]
ARM GAS  /tmp/cchP46LN.s 			page 77


  39 000e 9A69     		ldr	r2, [r3, #24]
  40 0010 D107     		lsl	r1, r2, #31
  41 0012 03D4     		bmi	.L1
4296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
4297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
  42              		.loc 1 4297 0
  43 0014 9969     		ldr	r1, [r3, #24]
  44 0016 0122     		mov	r2, #1
  45 0018 0A43     		orr	r2, r1
  46 001a 9A61     		str	r2, [r3, #24]
  47              	.L1:
4298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
4299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
  48              		.loc 1 4299 0
  49              		@ sp needed
  50 001c 7047     		bx	lr
  51              		.cfi_endproc
  52              	.LFE94:
  54 001e C046     		.section	.text.I2C_DMASlaveTransmitCplt,"ax",%progbits
  55              		.align	2
  56              		.code	16
  57              		.thumb_func
  59              	I2C_DMASlaveTransmitCplt:
  60              	.LFB96:
4300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
4302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  DMA I2C master transmit process complete callback.
4303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hdma DMA handle
4304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval None
4305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
4306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static void I2C_DMAMasterTransmitCplt(DMA_HandleTypeDef *hdma)
4307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
4308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   I2C_HandleTypeDef* hi2c = (I2C_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
4309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Disable DMA Request */
4311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
4312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* If last transfer, enable STOP interrupt */
4314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->XferCount == 0U)
4315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
4316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Enable STOP interrupt */
4317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
4318:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
4319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* else prepare a new DMA transfer and enable TCReload interrupt */
4320:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else
4321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
4322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Update Buffer pointer */
4323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr += hi2c->XferSize;
4324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Set the XferSize to transfer */
4326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
4327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
4328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
4329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
4330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     else
4331:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
4332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
ARM GAS  /tmp/cchP46LN.s 			page 78


4333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
4334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Enable the DMA channel */
4336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)hi2c->pBuffPtr, (uint32_t)&hi2c->Instance->TXDR, hi2c-
4337:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Enable TC interrupts */
4339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RELOAD_IT);
4340:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
4341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
4342:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
4344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  DMA I2C slave transmit process complete callback.
4345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hdma DMA handle
4346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval None
4347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
4348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static void I2C_DMASlaveTransmitCplt(DMA_HandleTypeDef *hdma)
4349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
  61              		.loc 1 4349 0
  62              		.cfi_startproc
  63              	.LVL1:
4350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   UNUSED(hdma);
4352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* No specific action, Master fully manage the generation of STOP condition */
4354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Mean that this generation can arrive at any time, at the end or during DMA process */
4355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* So STOP condition should be manage through Interrupt treatment */
4356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
  64              		.loc 1 4356 0
  65              		@ sp needed
  66 0000 7047     		bx	lr
  67              		.cfi_endproc
  68              	.LFE96:
  70 0002 C046     		.section	.text.I2C_DMASlaveReceiveCplt,"ax",%progbits
  71              		.align	2
  72              		.code	16
  73              		.thumb_func
  75              	I2C_DMASlaveReceiveCplt:
  76              	.LFB98:
4357:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
4359:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief DMA I2C master receive process complete callback.
4360:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hdma DMA handle
4361:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval None
4362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
4363:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static void I2C_DMAMasterReceiveCplt(DMA_HandleTypeDef *hdma)
4364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
4365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   I2C_HandleTypeDef* hi2c = (I2C_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
4366:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Disable DMA Request */
4368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
4369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* If last transfer, enable STOP interrupt */
4371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->XferCount == 0U)
4372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
4373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Enable STOP interrupt */
4374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
4375:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
ARM GAS  /tmp/cchP46LN.s 			page 79


4376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* else prepare a new DMA transfer and enable TCReload interrupt */
4377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else
4378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
4379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Update Buffer pointer */
4380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr += hi2c->XferSize;
4381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Set the XferSize to transfer */
4383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
4384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
4385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
4386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
4387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     else
4388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
4389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
4390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
4391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Enable the DMA channel */
4393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)hi2c->pBuffPtr, hi2c-
4394:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Enable TC interrupts */
4396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RELOAD_IT);
4397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
4398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
4399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
4401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  DMA I2C slave receive process complete callback.
4402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hdma DMA handle
4403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval None
4404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
4405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static void I2C_DMASlaveReceiveCplt(DMA_HandleTypeDef *hdma)
4406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
  77              		.loc 1 4406 0
  78              		.cfi_startproc
  79              	.LVL2:
4407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4408:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   UNUSED(hdma);
4409:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* No specific action, Master fully manage the generation of STOP condition */
4411:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Mean that this generation can arrive at any time, at the end or during DMA process */
4412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* So STOP condition should be manage through Interrupt treatment */
4413:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
  80              		.loc 1 4413 0
  81              		@ sp needed
  82 0000 7047     		bx	lr
  83              		.cfi_endproc
  84              	.LFE98:
  86 0002 C046     		.section	.text.I2C_TransferConfig,"ax",%progbits
  87              		.align	2
  88              		.code	16
  89              		.thumb_func
  91              	I2C_TransferConfig:
  92              	.LFB106:
4414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4415:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
4416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  DMA I2C communication error callback.
4417:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param hdma DMA handle
4418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval None
ARM GAS  /tmp/cchP46LN.s 			page 80


4419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
4420:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static void I2C_DMAError(DMA_HandleTypeDef *hdma)
4421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
4422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   I2C_HandleTypeDef* hi2c = ( I2C_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
4423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4424:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Disable Acknowledge */
4425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->Instance->CR2 |= I2C_CR2_NACK;
4426:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Call the corresponding callback to inform upper layer of End of Transfer */
4428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   I2C_ITError(hi2c, HAL_I2C_ERROR_DMA);
4429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
4430:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4431:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
4432:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief DMA I2C communication abort callback
4433:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *        (To be called at end of DMA Abort procedure).
4434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param hdma: DMA handle.
4435:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval None
4436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
4437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static void I2C_DMAAbort(DMA_HandleTypeDef *hdma)
4438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
4439:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   I2C_HandleTypeDef* hi2c = ( I2C_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
4440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Disable Acknowledge */
4442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->Instance->CR2 |= I2C_CR2_NACK;
4443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4444:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Reset AbortCpltCallback */
4445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->hdmatx->XferAbortCallback = NULL;
4446:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->hdmarx->XferAbortCallback = NULL;
4447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Check if come from abort from user */
4449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_ABORT)
4450:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
4451:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
4452:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     
4453:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
4454:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     HAL_I2C_AbortCpltCallback(hi2c);
4455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
4456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else
4457:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
4458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
4459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     HAL_I2C_ErrorCallback(hi2c);
4460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
4461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
4462:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
4464:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout.
4465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4466:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Flag Specifies the I2C flag to check.
4468:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Status The new Flag status (SET or RESET).
4469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
4470:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Tickstart Tick start value
4471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL status
4472:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
4473:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagSta
4474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
4475:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   while(__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
ARM GAS  /tmp/cchP46LN.s 			page 81


4476:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
4477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Check for the Timeout */
4478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(Timeout != HAL_MAX_DELAY)
4479:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
4480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if((Timeout == 0U)||((HAL_GetTick() - Tickstart ) > Timeout))
4481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
4482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         hi2c->State= HAL_I2C_STATE_READY;
4483:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
4484:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4485:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Process Unlocked */
4486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
4487:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_TIMEOUT;
4488:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
4489:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
4490:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
4491:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   return HAL_OK;
4492:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
4493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
4495:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for specific usage of TXIS flag.
4496:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4497:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
4499:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Tickstart Tick start value
4500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL status
4501:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
4502:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
4503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
4504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   while(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
4505:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
4506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Check if a NACK is detected */
4507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
4508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
4509:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_ERROR;
4510:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
4511:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4512:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Check for the Timeout */
4513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(Timeout != HAL_MAX_DELAY)
4514:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
4515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if((Timeout == 0U)||((HAL_GetTick() - Tickstart) > Timeout))
4516:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
4517:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
4518:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         hi2c->State= HAL_I2C_STATE_READY;
4519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
4520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4521:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         /* Process Unlocked */
4522:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
4523:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4524:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_TIMEOUT;
4525:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
4526:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
4527:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
4528:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   return HAL_OK;
4529:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
4530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4531:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
4532:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for specific usage of STOP flag.
ARM GAS  /tmp/cchP46LN.s 			page 82


4533:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4534:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4535:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
4536:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Tickstart Tick start value
4537:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL status
4538:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
4539:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnSTOPFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
4540:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
4541:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   while(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
4542:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
4543:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Check if a NACK is detected */
4544:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
4545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
4546:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_ERROR;
4547:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
4548:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4549:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Check for the Timeout */
4550:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((Timeout == 0U)||((HAL_GetTick() - Tickstart) > Timeout))
4551:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
4552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
4553:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->State= HAL_I2C_STATE_READY;
4554:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
4555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4556:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Process Unlocked */
4557:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4558:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4559:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_TIMEOUT;
4560:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
4561:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
4562:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   return HAL_OK;
4563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
4564:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4565:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
4566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for specific usage of RXNE flag.
4567:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4568:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4569:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
4570:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Tickstart Tick start value
4571:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL status
4572:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
4573:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
4574:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
4575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   while(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
4576:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
4577:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Check if a NACK is detected */
4578:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
4579:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
4580:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_ERROR;
4581:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
4582:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4583:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Check if a STOPF is detected */
4584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
4585:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
4586:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Clear STOP Flag */
4587:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
4588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4589:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Clear Configuration Register 2 */
ARM GAS  /tmp/cchP46LN.s 			page 83


4590:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_RESET_CR2(hi2c);
4591:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4592:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
4593:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->State= HAL_I2C_STATE_READY;
4594:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
4595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4596:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Process Unlocked */
4597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4599:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_ERROR;
4600:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
4601:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4602:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Check for the Timeout */
4603:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((Timeout == 0U)||((HAL_GetTick() - Tickstart) > Timeout))
4604:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
4605:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
4606:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->State= HAL_I2C_STATE_READY;
4607:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4608:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Process Unlocked */
4609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4610:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4611:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_TIMEOUT;
4612:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
4613:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
4614:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   return HAL_OK;
4615:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
4616:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4617:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
4618:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  This function handles Acknowledge failed detection during an I2C Communication.
4619:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4620:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4621:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Timeout Timeout duration
4622:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Tickstart Tick start value
4623:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL status
4624:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
4625:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_
4626:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
4627:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
4628:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
4629:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Wait until STOP Flag is reset */
4630:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* AutoEnd should be initiate after AF */
4631:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     while(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
4632:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
4633:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Check for the Timeout */
4634:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(Timeout != HAL_MAX_DELAY)
4635:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       {
4636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if((Timeout == 0U)||((HAL_GetTick() - Tickstart) > Timeout))
4637:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         {
4638:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           hi2c->State= HAL_I2C_STATE_READY;
4639:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           hi2c->Mode = HAL_I2C_MODE_NONE;
4640:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4641:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           /* Process Unlocked */
4642:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           __HAL_UNLOCK(hi2c);
4643:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           return HAL_TIMEOUT;
4644:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         }
4645:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       }
4646:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
ARM GAS  /tmp/cchP46LN.s 			page 84


4647:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4648:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Clear NACKF Flag */
4649:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4650:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4651:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Clear STOP Flag */
4652:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
4653:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4654:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Flush TX register */
4655:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
4656:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4657:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
4658:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
4659:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4660:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_AF;
4661:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State= HAL_I2C_STATE_READY;
4662:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
4663:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4664:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Process Unlocked */
4665:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4666:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4667:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_ERROR;
4668:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
4669:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   return HAL_OK;
4670:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
4671:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4672:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
4673:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Handles I2Cx communication when starting transfer or during transfer (TC or TCR flag ar
4674:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c I2C handle.
4675:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  DevAddress Specifies the slave address to be programmed.
4676:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Size Specifies the number of bytes to be programmed.
4677:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *   This parameter must be a value between 0 and 255.
4678:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Mode New state of the I2C START condition generation.
4679:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *   This parameter can be one of the following values:
4680:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *     @arg @ref I2C_RELOAD_MODE Enable Reload mode .
4681:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *     @arg @ref I2C_AUTOEND_MODE Enable Automatic end mode.
4682:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *     @arg @ref I2C_SOFTEND_MODE Enable Software end mode.
4683:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  Request New state of the I2C START condition generation.
4684:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *   This parameter can be one of the following values:
4685:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *     @arg @ref I2C_NO_STARTSTOP Don't Generate stop and start condition.
4686:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *     @arg @ref I2C_GENERATE_STOP Generate stop condition (Size should be set to 0).
4687:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *     @arg @ref I2C_GENERATE_START_READ Generate Restart for read request.
4688:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
4689:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval None
4690:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
4691:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c,  uint16_t DevAddress, uint8_t Size, uint32_
4692:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
  93              		.loc 1 4692 0
  94              		.cfi_startproc
  95              	.LVL3:
  96 0000 30B5     		push	{r4, r5, lr}
  97              	.LCFI0:
  98              		.cfi_def_cfa_offset 12
  99              		.cfi_offset 4, -12
 100              		.cfi_offset 5, -8
 101              		.cfi_offset 14, -4
 102              	.LVL4:
4693:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint32_t tmpreg = 0U;
ARM GAS  /tmp/cchP46LN.s 			page 85


4694:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4695:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Check the parameters */
4696:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
4697:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   assert_param(IS_TRANSFER_MODE(Mode));
4698:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   assert_param(IS_TRANSFER_REQUEST(Request));
4699:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4700:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Get the CR2 register value */
4701:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   tmpreg = hi2c->Instance->CR2;
 103              		.loc 1 4701 0
 104 0002 0068     		ldr	r0, [r0]
 105              	.LVL5:
 106 0004 4568     		ldr	r5, [r0, #4]
 107              	.LVL6:
4702:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4703:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* clear tmpreg specific bits */
4704:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   tmpreg &= (uint32_t)~((uint32_t)(I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND
 108              		.loc 1 4704 0
 109 0006 064C     		ldr	r4, .L7
 110 0008 2C40     		and	r4, r5
 111              	.LVL7:
4705:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4706:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* update tmpreg */
4707:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   tmpreg |= (uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | (((uint32_t)Size << 16 ) & I2C_CR2_N
 112              		.loc 1 4707 0
 113 000a 8905     		lsl	r1, r1, #22
 114              	.LVL8:
 115 000c 890D     		lsr	r1, r1, #22
 116 000e 1204     		lsl	r2, r2, #16
 117              	.LVL9:
 118 0010 0A43     		orr	r2, r1
 119 0012 1343     		orr	r3, r2
 120              	.LVL10:
 121 0014 039A     		ldr	r2, [sp, #12]
 122 0016 1343     		orr	r3, r2
 123 0018 2343     		orr	r3, r4
 124              	.LVL11:
4708:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****             (uint32_t)Mode | (uint32_t)Request);
4709:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4710:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* update CR2 register */
4711:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->Instance->CR2 = tmpreg;
 125              		.loc 1 4711 0
 126 001a 4360     		str	r3, [r0, #4]
4712:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 127              		.loc 1 4712 0
 128              		@ sp needed
 129 001c 30BD     		pop	{r4, r5, pc}
 130              	.L8:
 131 001e C046     		.align	2
 132              	.L7:
 133 0020 009800FC 		.word	-67069952
 134              		.cfi_endproc
 135              	.LFE106:
 137              		.section	.text.I2C_Enable_IRQ,"ax",%progbits
 138              		.align	2
 139              		.code	16
 140              		.thumb_func
 142              	I2C_Enable_IRQ:
ARM GAS  /tmp/cchP46LN.s 			page 86


 143              	.LFB107:
4713:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4714:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
4715:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Manage the enabling of Interrupts.
4716:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4717:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4718:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  InterruptRequest Value of @ref I2C_Interrupt_configuration_definition.
4719:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL status
4720:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
4721:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Enable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest)
4722:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 144              		.loc 1 4722 0
 145              		.cfi_startproc
 146              	.LVL12:
4723:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
4724:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4725:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if((hi2c->XferISR == I2C_Master_ISR_DMA) || \
 147              		.loc 1 4725 0
 148 0000 436B     		ldr	r3, [r0, #52]
 149 0002 1A4A     		ldr	r2, .L21
 150 0004 9342     		cmp	r3, r2
 151 0006 02D0     		beq	.L10
 152              		.loc 1 4725 0 is_stmt 0 discriminator 1
 153 0008 194A     		ldr	r2, .L21+4
 154 000a 9342     		cmp	r3, r2
 155 000c 15D1     		bne	.L11
 156              	.L10:
4726:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****      (hi2c->XferISR == I2C_Slave_ISR_DMA))
4727:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
4728:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((InterruptRequest & I2C_XFER_LISTEN_IT) == I2C_XFER_LISTEN_IT)
 157              		.loc 1 4728 0 is_stmt 1
 158 000e 4A07     		lsl	r2, r1, #29
 159 0010 01D4     		bmi	.L19
4723:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
 160              		.loc 1 4723 0
 161 0012 0023     		mov	r3, #0
 162 0014 00E0     		b	.L12
 163              	.L19:
4729:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
4730:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Enable ERR, STOP, NACK and ADDR interrupts */
4731:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       tmpisr |= I2C_IT_ADDRI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
 164              		.loc 1 4731 0
 165 0016 B823     		mov	r3, #184
 166              	.L12:
 167              	.LVL13:
4732:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
4733:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4734:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((InterruptRequest & I2C_XFER_ERROR_IT) == I2C_XFER_ERROR_IT)
 168              		.loc 1 4734 0
 169 0018 1122     		mov	r2, #17
 170 001a 0A40     		and	r2, r1
 171 001c 112A     		cmp	r2, #17
 172 001e 01D1     		bne	.L13
4735:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
4736:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Enable ERR and NACK interrupts */
4737:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       tmpisr |= I2C_IT_ERRI | I2C_IT_NACKI;
 173              		.loc 1 4737 0
ARM GAS  /tmp/cchP46LN.s 			page 87


 174 0020 9022     		mov	r2, #144
 175 0022 1343     		orr	r3, r2
 176              	.LVL14:
 177              	.L13:
4738:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
4739:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4740:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((InterruptRequest & I2C_XFER_CPLT_IT) == I2C_XFER_CPLT_IT)
 178              		.loc 1 4740 0
 179 0024 1222     		mov	r2, #18
 180 0026 1140     		and	r1, r2
 181              	.LVL15:
 182 0028 1229     		cmp	r1, #18
 183 002a 01D1     		bne	.L14
4741:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
4742:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Enable STOP interrupts */
4743:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI;
 184              		.loc 1 4743 0
 185 002c 2022     		mov	r2, #32
 186 002e 1343     		orr	r3, r2
 187              	.LVL16:
 188              	.L14:
4744:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
4745:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     
4746:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((InterruptRequest & I2C_XFER_RELOAD_IT) == I2C_XFER_RELOAD_IT)
 189              		.loc 1 4746 0
 190 0030 1229     		cmp	r1, #18
 191 0032 15D1     		bne	.L15
4747:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
4748:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Enable TC interrupts */
4749:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       tmpisr |= I2C_IT_TCI;
 192              		.loc 1 4749 0
 193 0034 4022     		mov	r2, #64
 194 0036 1343     		orr	r3, r2
 195              	.LVL17:
 196 0038 12E0     		b	.L15
 197              	.LVL18:
 198              	.L11:
4750:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
4751:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
4752:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else
4753:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
4754:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((InterruptRequest & I2C_XFER_LISTEN_IT) == I2C_XFER_LISTEN_IT)
 199              		.loc 1 4754 0
 200 003a 4B07     		lsl	r3, r1, #29
 201 003c 01D4     		bmi	.L20
4723:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
 202              		.loc 1 4723 0
 203 003e 0023     		mov	r3, #0
 204 0040 00E0     		b	.L16
 205              	.L20:
4755:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
4756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Enable ERR, STOP, NACK, and ADDR interrupts */
4757:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       tmpisr |= I2C_IT_ADDRI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
 206              		.loc 1 4757 0
 207 0042 B823     		mov	r3, #184
 208              	.L16:
 209              	.LVL19:
ARM GAS  /tmp/cchP46LN.s 			page 88


4758:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
4759:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4760:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((InterruptRequest & I2C_XFER_TX_IT) == I2C_XFER_TX_IT)
 210              		.loc 1 4760 0
 211 0044 CA07     		lsl	r2, r1, #31
 212 0046 01D5     		bpl	.L17
4761:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
4762:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK and RXI interrupts */
4763:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       tmpisr |= I2C_IT_ERRI | I2C_IT_TCI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_TXI;
 213              		.loc 1 4763 0
 214 0048 F222     		mov	r2, #242
 215 004a 1343     		orr	r3, r2
 216              	.LVL20:
 217              	.L17:
4764:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
4765:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4766:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((InterruptRequest & I2C_XFER_RX_IT) == I2C_XFER_RX_IT)
 218              		.loc 1 4766 0
 219 004c 8A07     		lsl	r2, r1, #30
 220 004e 01D5     		bpl	.L18
4767:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
4768:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK and TXI interrupts */
4769:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       tmpisr |= I2C_IT_ERRI | I2C_IT_TCI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_RXI;
 221              		.loc 1 4769 0
 222 0050 F422     		mov	r2, #244
 223 0052 1343     		orr	r3, r2
 224              	.LVL21:
 225              	.L18:
4770:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
4771:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4772:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((InterruptRequest & I2C_XFER_CPLT_IT) == I2C_XFER_CPLT_IT)
 226              		.loc 1 4772 0
 227 0054 1222     		mov	r2, #18
 228 0056 1140     		and	r1, r2
 229              	.LVL22:
 230 0058 1229     		cmp	r1, #18
 231 005a 01D1     		bne	.L15
4773:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
4774:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Enable STOP interrupts */
4775:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI;
 232              		.loc 1 4775 0
 233 005c 2022     		mov	r2, #32
 234 005e 1343     		orr	r3, r2
 235              	.LVL23:
 236              	.L15:
4776:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
4777:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
4778:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   
4779:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Enable interrupts only at the end */
4780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* to avoid the risk of I2C interrupt handle execution before */
4781:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* all interrupts requested done */
4782:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_I2C_ENABLE_IT(hi2c, tmpisr);
 237              		.loc 1 4782 0
 238 0060 0268     		ldr	r2, [r0]
 239 0062 1168     		ldr	r1, [r2]
 240 0064 0B43     		orr	r3, r1
 241              	.LVL24:
ARM GAS  /tmp/cchP46LN.s 			page 89


 242 0066 1360     		str	r3, [r2]
4783:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4784:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   return HAL_OK;
4785:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 243              		.loc 1 4785 0
 244 0068 0020     		mov	r0, #0
 245              	.LVL25:
 246              		@ sp needed
 247 006a 7047     		bx	lr
 248              	.L22:
 249              		.align	2
 250              	.L21:
 251 006c 00000000 		.word	I2C_Master_ISR_DMA
 252 0070 00000000 		.word	I2C_Slave_ISR_DMA
 253              		.cfi_endproc
 254              	.LFE107:
 256              		.section	.text.I2C_Disable_IRQ,"ax",%progbits
 257              		.align	2
 258              		.code	16
 259              		.thumb_func
 261              	I2C_Disable_IRQ:
 262              	.LFB108:
4786:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4787:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** /**
4788:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @brief  Manage the disabling of Interrupts.
4789:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4790:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4791:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @param  InterruptRequest Value of @ref I2C_Interrupt_configuration_definition.
4792:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   * @retval HAL status
4793:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   */
4794:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Disable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest)
4795:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 263              		.loc 1 4795 0
 264              		.cfi_startproc
 265              	.LVL26:
 266 0000 30B5     		push	{r4, r5, lr}
 267              	.LCFI1:
 268              		.cfi_def_cfa_offset 12
 269              		.cfi_offset 4, -12
 270              		.cfi_offset 5, -8
 271              		.cfi_offset 14, -4
 272              	.LVL27:
4796:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
4797:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4798:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if((InterruptRequest & I2C_XFER_TX_IT) == I2C_XFER_TX_IT)
 273              		.loc 1 4798 0
 274 0002 CA07     		lsl	r2, r1, #31
 275 0004 07D5     		bpl	.L30
 276              	.LVL28:
4799:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
4800:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Disable TC and TXI interrupts */
4801:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     tmpisr |= I2C_IT_TCI | I2C_IT_TXI;
4802:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4803:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((hi2c->State & HAL_I2C_STATE_LISTEN) != HAL_I2C_STATE_LISTEN)
 277              		.loc 1 4803 0
 278 0006 4123     		mov	r3, #65
 279 0008 C25C     		ldrb	r2, [r0, r3]
ARM GAS  /tmp/cchP46LN.s 			page 90


 280 000a 2823     		mov	r3, #40
 281 000c 1340     		and	r3, r2
 282 000e 282B     		cmp	r3, #40
 283 0010 03D1     		bne	.L31
4801:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     tmpisr |= I2C_IT_TCI | I2C_IT_TXI;
 284              		.loc 1 4801 0
 285 0012 4223     		mov	r3, #66
 286 0014 02E0     		b	.L24
 287              	.LVL29:
 288              	.L30:
4796:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
 289              		.loc 1 4796 0
 290 0016 0023     		mov	r3, #0
 291 0018 00E0     		b	.L24
 292              	.LVL30:
 293              	.L31:
4804:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
4805:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Disable NACK and STOP interrupts */
4806:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
 294              		.loc 1 4806 0
 295 001a F223     		mov	r3, #242
 296              	.LVL31:
 297              	.L24:
4807:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
4808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
4809:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4810:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if((InterruptRequest & I2C_XFER_RX_IT) == I2C_XFER_RX_IT)
 298              		.loc 1 4810 0
 299 001c 8A07     		lsl	r2, r1, #30
 300 001e 0CD5     		bpl	.L25
4811:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
4812:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Disable TC and RXI interrupts */
4813:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     tmpisr |= I2C_IT_TCI | I2C_IT_RXI;
 301              		.loc 1 4813 0
 302 0020 4422     		mov	r2, #68
 303 0022 1D1C     		mov	r5, r3
 304 0024 1543     		orr	r5, r2
 305              	.LVL32:
4814:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4815:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((hi2c->State & HAL_I2C_STATE_LISTEN) != HAL_I2C_STATE_LISTEN)
 306              		.loc 1 4815 0
 307 0026 4122     		mov	r2, #65
 308 0028 845C     		ldrb	r4, [r0, r2]
 309 002a 2822     		mov	r2, #40
 310 002c 2240     		and	r2, r4
 311 002e 282A     		cmp	r2, #40
 312 0030 02D0     		beq	.L32
4816:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     {
4817:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       /* Disable NACK and STOP interrupts */
4818:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
 313              		.loc 1 4818 0
 314 0032 F422     		mov	r2, #244
 315 0034 1343     		orr	r3, r2
 316              	.LVL33:
 317 0036 00E0     		b	.L25
 318              	.LVL34:
 319              	.L32:
ARM GAS  /tmp/cchP46LN.s 			page 91


4813:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     tmpisr |= I2C_IT_TCI | I2C_IT_RXI;
 320              		.loc 1 4813 0
 321 0038 2B1C     		mov	r3, r5
 322              	.LVL35:
 323              	.L25:
4819:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }
4820:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
4821:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4822:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if((InterruptRequest & I2C_XFER_LISTEN_IT) == I2C_XFER_LISTEN_IT)
 324              		.loc 1 4822 0
 325 003a 4A07     		lsl	r2, r1, #29
 326 003c 01D5     		bpl	.L26
4823:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
4824:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Disable ADDR, NACK and STOP interrupts */
4825:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     tmpisr |= I2C_IT_ADDRI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
 327              		.loc 1 4825 0
 328 003e B822     		mov	r2, #184
 329 0040 1343     		orr	r3, r2
 330              	.LVL36:
 331              	.L26:
4826:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
4827:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4828:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if((InterruptRequest & I2C_XFER_ERROR_IT) == I2C_XFER_ERROR_IT)
 332              		.loc 1 4828 0
 333 0042 1122     		mov	r2, #17
 334 0044 0A40     		and	r2, r1
 335 0046 112A     		cmp	r2, #17
 336 0048 01D1     		bne	.L27
4829:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
4830:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Enable ERR and NACK interrupts */
4831:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     tmpisr |= I2C_IT_ERRI | I2C_IT_NACKI;
 337              		.loc 1 4831 0
 338 004a 9022     		mov	r2, #144
 339 004c 1343     		orr	r3, r2
 340              	.LVL37:
 341              	.L27:
4832:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
4833:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4834:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if((InterruptRequest & I2C_XFER_CPLT_IT) == I2C_XFER_CPLT_IT)
 342              		.loc 1 4834 0
 343 004e 1222     		mov	r2, #18
 344 0050 1140     		and	r1, r2
 345              	.LVL38:
 346 0052 1229     		cmp	r1, #18
 347 0054 01D1     		bne	.L28
4835:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
4836:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Enable STOP interrupts */
4837:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     tmpisr |= I2C_IT_STOPI;
 348              		.loc 1 4837 0
 349 0056 2022     		mov	r2, #32
 350 0058 1343     		orr	r3, r2
 351              	.LVL39:
 352              	.L28:
4838:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
4839:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   
4840:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if((InterruptRequest & I2C_XFER_RELOAD_IT) == I2C_XFER_RELOAD_IT)
 353              		.loc 1 4840 0
ARM GAS  /tmp/cchP46LN.s 			page 92


 354 005a 1229     		cmp	r1, #18
 355 005c 01D1     		bne	.L29
4841:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   {
4842:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     /* Enable TC interrupts */
4843:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     tmpisr |= I2C_IT_TCI;
 356              		.loc 1 4843 0
 357 005e 4022     		mov	r2, #64
 358 0060 1343     		orr	r3, r2
 359              	.LVL40:
 360              	.L29:
4844:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   }
4845:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4846:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* Disable interrupts only at the end */
4847:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* to avoid a breaking situation like at "t" time */
4848:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   /* all disable interrupts request are not done */
4849:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_I2C_DISABLE_IT(hi2c, tmpisr);
 361              		.loc 1 4849 0
 362 0062 0268     		ldr	r2, [r0]
 363 0064 1168     		ldr	r1, [r2]
 364 0066 9943     		bic	r1, r3
 365 0068 1160     		str	r1, [r2]
4850:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 
4851:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   return HAL_OK;
4852:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 366              		.loc 1 4852 0
 367 006a 0020     		mov	r0, #0
 368              	.LVL41:
 369              		@ sp needed
 370 006c 30BD     		pop	{r4, r5, pc}
 371              		.cfi_endproc
 372              	.LFE108:
 374 006e C046     		.section	.text.I2C_IsAcknowledgeFailed,"ax",%progbits
 375              		.align	2
 376              		.code	16
 377              		.thumb_func
 379              	I2C_IsAcknowledgeFailed:
 380              	.LFB105:
4626:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 381              		.loc 1 4626 0
 382              		.cfi_startproc
 383              	.LVL42:
 384 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 385              	.LCFI2:
 386              		.cfi_def_cfa_offset 20
 387              		.cfi_offset 4, -20
 388              		.cfi_offset 5, -16
 389              		.cfi_offset 6, -12
 390              		.cfi_offset 7, -8
 391              		.cfi_offset 14, -4
 392 0002 4746     		mov	r7, r8
 393 0004 80B4     		push	{r7}
 394              	.LCFI3:
 395              		.cfi_def_cfa_offset 24
 396              		.cfi_offset 8, -24
 397 0006 051C     		mov	r5, r0
 398 0008 0E1C     		mov	r6, r1
 399 000a 9046     		mov	r8, r2
ARM GAS  /tmp/cchP46LN.s 			page 93


4627:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 400              		.loc 1 4627 0
 401 000c 0368     		ldr	r3, [r0]
 402 000e 9B69     		ldr	r3, [r3, #24]
 403 0010 DA06     		lsl	r2, r3, #27
 404 0012 15D4     		bmi	.L39
 405              	.LVL43:
4669:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   return HAL_OK;
 406              		.loc 1 4669 0
 407 0014 0020     		mov	r0, #0
 408              	.LVL44:
 409 0016 2FE0     		b	.L35
 410              	.LVL45:
 411              	.L38:
4634:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(Timeout != HAL_MAX_DELAY)
 412              		.loc 1 4634 0
 413 0018 731C     		add	r3, r6, #1
 414 001a 12D0     		beq	.L40
4636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if((Timeout == 0U)||((HAL_GetTick() - Tickstart) > Timeout))
 415              		.loc 1 4636 0
 416 001c 002E     		cmp	r6, #0
 417 001e 05D0     		beq	.L37
4636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if((Timeout == 0U)||((HAL_GetTick() - Tickstart) > Timeout))
 418              		.loc 1 4636 0 is_stmt 0 discriminator 1
 419 0020 FFF7FEFF 		bl	HAL_GetTick
 420              	.LVL46:
 421 0024 4246     		mov	r2, r8
 422 0026 801A     		sub	r0, r0, r2
 423 0028 B042     		cmp	r0, r6
 424 002a 0AD9     		bls	.L40
 425              	.L37:
4638:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           hi2c->State= HAL_I2C_STATE_READY;
 426              		.loc 1 4638 0 is_stmt 1
 427 002c 2022     		mov	r2, #32
 428 002e 4123     		mov	r3, #65
 429 0030 EA54     		strb	r2, [r5, r3]
4639:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           hi2c->Mode = HAL_I2C_MODE_NONE;
 430              		.loc 1 4639 0
 431 0032 0023     		mov	r3, #0
 432 0034 4222     		mov	r2, #66
 433 0036 AB54     		strb	r3, [r5, r2]
4642:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           __HAL_UNLOCK(hi2c);
 434              		.loc 1 4642 0
 435 0038 4022     		mov	r2, #64
 436 003a AB54     		strb	r3, [r5, r2]
4643:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           return HAL_TIMEOUT;
 437              		.loc 1 4643 0
 438 003c 0320     		mov	r0, #3
 439 003e 1BE0     		b	.L35
 440              	.LVL47:
 441              	.L39:
4631:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     while(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 442              		.loc 1 4631 0 discriminator 1
 443 0040 2027     		mov	r7, #32
 444              	.LVL48:
 445              	.L40:
 446 0042 2B68     		ldr	r3, [r5]
ARM GAS  /tmp/cchP46LN.s 			page 94


 447 0044 9C69     		ldr	r4, [r3, #24]
 448 0046 2742     		tst	r7, r4
 449 0048 E6D0     		beq	.L38
4649:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 450              		.loc 1 4649 0
 451 004a 1022     		mov	r2, #16
 452 004c DA61     		str	r2, [r3, #28]
4652:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 453              		.loc 1 4652 0
 454 004e 2B68     		ldr	r3, [r5]
 455 0050 2024     		mov	r4, #32
 456 0052 DC61     		str	r4, [r3, #28]
4655:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
 457              		.loc 1 4655 0
 458 0054 281C     		mov	r0, r5
 459 0056 FFF7FEFF 		bl	I2C_Flush_TXDR
 460              	.LVL49:
4658:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
 461              		.loc 1 4658 0
 462 005a 2B68     		ldr	r3, [r5]
 463 005c 5968     		ldr	r1, [r3, #4]
 464 005e 084A     		ldr	r2, .L41
 465 0060 0A40     		and	r2, r1
 466 0062 5A60     		str	r2, [r3, #4]
4660:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_AF;
 467              		.loc 1 4660 0
 468 0064 0423     		mov	r3, #4
 469 0066 6B64     		str	r3, [r5, #68]
4661:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State= HAL_I2C_STATE_READY;
 470              		.loc 1 4661 0
 471 0068 4123     		mov	r3, #65
 472 006a EC54     		strb	r4, [r5, r3]
4662:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
 473              		.loc 1 4662 0
 474 006c 0023     		mov	r3, #0
 475 006e 4222     		mov	r2, #66
 476 0070 AB54     		strb	r3, [r5, r2]
4665:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 477              		.loc 1 4665 0
 478 0072 4022     		mov	r2, #64
 479 0074 AB54     		strb	r3, [r5, r2]
4667:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_ERROR;
 480              		.loc 1 4667 0
 481 0076 0120     		mov	r0, #1
 482              	.L35:
4670:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 483              		.loc 1 4670 0
 484              		@ sp needed
 485              	.LVL50:
 486              	.LVL51:
 487              	.LVL52:
 488 0078 04BC     		pop	{r2}
 489 007a 9046     		mov	r8, r2
 490 007c F0BD     		pop	{r4, r5, r6, r7, pc}
 491              	.L42:
 492 007e C046     		.align	2
 493              	.L41:
ARM GAS  /tmp/cchP46LN.s 			page 95


 494 0080 00E800FE 		.word	-33495040
 495              		.cfi_endproc
 496              	.LFE105:
 498              		.section	.text.I2C_WaitOnTXISFlagUntilTimeout,"ax",%progbits
 499              		.align	2
 500              		.code	16
 501              		.thumb_func
 503              	I2C_WaitOnTXISFlagUntilTimeout:
 504              	.LFB102:
4503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 505              		.loc 1 4503 0
 506              		.cfi_startproc
 507              	.LVL53:
 508 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 509              	.LCFI4:
 510              		.cfi_def_cfa_offset 24
 511              		.cfi_offset 3, -24
 512              		.cfi_offset 4, -20
 513              		.cfi_offset 5, -16
 514              		.cfi_offset 6, -12
 515              		.cfi_offset 7, -8
 516              		.cfi_offset 14, -4
 517 0002 041C     		mov	r4, r0
 518 0004 0D1C     		mov	r5, r1
 519 0006 171C     		mov	r7, r2
4504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   while(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 520              		.loc 1 4504 0
 521 0008 0226     		mov	r6, #2
 522 000a 1CE0     		b	.L50
 523              	.LVL54:
 524              	.L48:
4507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
 525              		.loc 1 4507 0
 526 000c 201C     		mov	r0, r4
 527 000e 291C     		mov	r1, r5
 528 0010 3A1C     		mov	r2, r7
 529 0012 FFF7FEFF 		bl	I2C_IsAcknowledgeFailed
 530              	.LVL55:
 531 0016 0028     		cmp	r0, #0
 532 0018 1BD1     		bne	.L49
4513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(Timeout != HAL_MAX_DELAY)
 533              		.loc 1 4513 0
 534 001a 6B1C     		add	r3, r5, #1
 535 001c 13D0     		beq	.L50
4515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if((Timeout == 0U)||((HAL_GetTick() - Tickstart) > Timeout))
 536              		.loc 1 4515 0
 537 001e 002D     		cmp	r5, #0
 538 0020 04D0     		beq	.L47
4515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if((Timeout == 0U)||((HAL_GetTick() - Tickstart) > Timeout))
 539              		.loc 1 4515 0 is_stmt 0 discriminator 1
 540 0022 FFF7FEFF 		bl	HAL_GetTick
 541              	.LVL56:
 542 0026 C01B     		sub	r0, r0, r7
 543 0028 A842     		cmp	r0, r5
 544 002a 0CD9     		bls	.L50
 545              	.L47:
4517:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
ARM GAS  /tmp/cchP46LN.s 			page 96


 546              		.loc 1 4517 0 is_stmt 1
 547 002c 626C     		ldr	r2, [r4, #68]
 548 002e 2023     		mov	r3, #32
 549 0030 1A43     		orr	r2, r3
 550 0032 6264     		str	r2, [r4, #68]
4518:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         hi2c->State= HAL_I2C_STATE_READY;
 551              		.loc 1 4518 0
 552 0034 4122     		mov	r2, #65
 553 0036 A354     		strb	r3, [r4, r2]
4519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
 554              		.loc 1 4519 0
 555 0038 0023     		mov	r3, #0
 556 003a 4222     		mov	r2, #66
 557 003c A354     		strb	r3, [r4, r2]
4522:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 558              		.loc 1 4522 0
 559 003e 4022     		mov	r2, #64
 560 0040 A354     		strb	r3, [r4, r2]
4524:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_TIMEOUT;
 561              		.loc 1 4524 0
 562 0042 0320     		mov	r0, #3
 563 0044 06E0     		b	.L45
 564              	.L50:
4504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   while(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 565              		.loc 1 4504 0 discriminator 1
 566 0046 2368     		ldr	r3, [r4]
 567 0048 9B69     		ldr	r3, [r3, #24]
 568 004a 1E42     		tst	r6, r3
 569 004c DED0     		beq	.L48
4528:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   return HAL_OK;
 570              		.loc 1 4528 0
 571 004e 0020     		mov	r0, #0
 572 0050 00E0     		b	.L45
 573              	.L49:
4509:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_ERROR;
 574              		.loc 1 4509 0
 575 0052 0120     		mov	r0, #1
 576              	.L45:
4529:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 577              		.loc 1 4529 0
 578              		@ sp needed
 579              	.LVL57:
 580              	.LVL58:
 581              	.LVL59:
 582 0054 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 583              		.cfi_endproc
 584              	.LFE102:
 586 0056 C046     		.section	.text.I2C_WaitOnFlagUntilTimeout,"ax",%progbits
 587              		.align	2
 588              		.code	16
 589              		.thumb_func
 591              	I2C_WaitOnFlagUntilTimeout:
 592              	.LFB101:
4474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 593              		.loc 1 4474 0
 594              		.cfi_startproc
 595              	.LVL60:
ARM GAS  /tmp/cchP46LN.s 			page 97


 596 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 597              	.LCFI5:
 598              		.cfi_def_cfa_offset 24
 599              		.cfi_offset 3, -24
 600              		.cfi_offset 4, -20
 601              		.cfi_offset 5, -16
 602              		.cfi_offset 6, -12
 603              		.cfi_offset 7, -8
 604              		.cfi_offset 14, -4
 605 0002 061C     		mov	r6, r0
 606 0004 0C1C     		mov	r4, r1
 607 0006 171C     		mov	r7, r2
 608 0008 1D1C     		mov	r5, r3
4475:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   while(__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 609              		.loc 1 4475 0
 610 000a 13E0     		b	.L57
 611              	.LVL61:
 612              	.L56:
4478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(Timeout != HAL_MAX_DELAY)
 613              		.loc 1 4478 0
 614 000c 6B1C     		add	r3, r5, #1
 615 000e 11D0     		beq	.L57
4480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if((Timeout == 0U)||((HAL_GetTick() - Tickstart ) > Timeout))
 616              		.loc 1 4480 0
 617 0010 002D     		cmp	r5, #0
 618 0012 05D0     		beq	.L54
4480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if((Timeout == 0U)||((HAL_GetTick() - Tickstart ) > Timeout))
 619              		.loc 1 4480 0 is_stmt 0 discriminator 1
 620 0014 FFF7FEFF 		bl	HAL_GetTick
 621              	.LVL62:
 622 0018 069B     		ldr	r3, [sp, #24]
 623 001a C01A     		sub	r0, r0, r3
 624 001c A842     		cmp	r0, r5
 625 001e 09D9     		bls	.L57
 626              	.L54:
4482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         hi2c->State= HAL_I2C_STATE_READY;
 627              		.loc 1 4482 0 is_stmt 1
 628 0020 2022     		mov	r2, #32
 629 0022 4123     		mov	r3, #65
 630 0024 F254     		strb	r2, [r6, r3]
4483:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
 631              		.loc 1 4483 0
 632 0026 0023     		mov	r3, #0
 633 0028 4222     		mov	r2, #66
 634 002a B354     		strb	r3, [r6, r2]
4486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 635              		.loc 1 4486 0
 636 002c 4022     		mov	r2, #64
 637 002e B354     		strb	r3, [r6, r2]
4487:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_TIMEOUT;
 638              		.loc 1 4487 0
 639 0030 0320     		mov	r0, #3
 640 0032 08E0     		b	.L55
 641              	.L57:
4475:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   while(__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 642              		.loc 1 4475 0 discriminator 1
 643 0034 3168     		ldr	r1, [r6]
ARM GAS  /tmp/cchP46LN.s 			page 98


 644 0036 8969     		ldr	r1, [r1, #24]
 645 0038 2140     		and	r1, r4
 646 003a 091B     		sub	r1, r1, r4
 647 003c 4B42     		neg	r3, r1
 648 003e 5941     		adc	r1, r1, r3
 649 0040 B942     		cmp	r1, r7
 650 0042 E3D0     		beq	.L56
4491:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   return HAL_OK;
 651              		.loc 1 4491 0
 652 0044 0020     		mov	r0, #0
 653              	.L55:
4492:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 654              		.loc 1 4492 0
 655              		@ sp needed
 656              	.LVL63:
 657              	.LVL64:
 658              	.LVL65:
 659 0046 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 660              		.cfi_endproc
 661              	.LFE101:
 663              		.section	.text.I2C_RequestMemoryWrite,"ax",%progbits
 664              		.align	2
 665              		.code	16
 666              		.thumb_func
 668              	I2C_RequestMemoryWrite:
 669              	.LFB85:
3642:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 670              		.loc 1 3642 0
 671              		.cfi_startproc
 672              	.LVL66:
 673 0000 70B5     		push	{r4, r5, r6, lr}
 674              	.LCFI6:
 675              		.cfi_def_cfa_offset 16
 676              		.cfi_offset 4, -16
 677              		.cfi_offset 5, -12
 678              		.cfi_offset 6, -8
 679              		.cfi_offset 14, -4
 680 0002 82B0     		sub	sp, sp, #8
 681              	.LCFI7:
 682              		.cfi_def_cfa_offset 24
 683 0004 041C     		mov	r4, r0
 684 0006 161C     		mov	r6, r2
 685 0008 1D1C     		mov	r5, r3
3643:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   I2C_TransferConfig(hi2c,DevAddress,MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 686              		.loc 1 3643 0
 687 000a DAB2     		uxtb	r2, r3
 688              	.LVL67:
 689 000c 8020     		mov	r0, #128
 690              	.LVL68:
 691 000e 8001     		lsl	r0, r0, #6
 692 0010 0090     		str	r0, [sp]
 693 0012 201C     		mov	r0, r4
 694 0014 8023     		mov	r3, #128
 695              	.LVL69:
 696 0016 5B04     		lsl	r3, r3, #17
 697 0018 FFF7FEFF 		bl	I2C_TransferConfig
 698              	.LVL70:
ARM GAS  /tmp/cchP46LN.s 			page 99


3646:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 699              		.loc 1 3646 0
 700 001c 201C     		mov	r0, r4
 701 001e 0699     		ldr	r1, [sp, #24]
 702 0020 079A     		ldr	r2, [sp, #28]
 703 0022 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 704              	.LVL71:
 705 0026 0028     		cmp	r0, #0
 706 0028 04D0     		beq	.L59
3648:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 707              		.loc 1 3648 0
 708 002a 636C     		ldr	r3, [r4, #68]
 709 002c 042B     		cmp	r3, #4
 710 002e 25D1     		bne	.L64
3650:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_ERROR;
 711              		.loc 1 3650 0
 712 0030 0120     		mov	r0, #1
 713 0032 26E0     		b	.L60
 714              	.L59:
3659:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(MemAddSize == I2C_MEMADD_SIZE_8BIT)
 715              		.loc 1 3659 0
 716 0034 012D     		cmp	r5, #1
 717 0036 03D1     		bne	.L61
3662:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 718              		.loc 1 3662 0
 719 0038 2368     		ldr	r3, [r4]
 720 003a F6B2     		uxtb	r6, r6
 721 003c 9E62     		str	r6, [r3, #40]
 722 003e 11E0     		b	.L62
 723              	.L61:
3668:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 724              		.loc 1 3668 0
 725 0040 2368     		ldr	r3, [r4]
 726 0042 320A     		lsr	r2, r6, #8
 727 0044 9A62     		str	r2, [r3, #40]
3671:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 728              		.loc 1 3671 0
 729 0046 201C     		mov	r0, r4
 730 0048 0699     		ldr	r1, [sp, #24]
 731 004a 079A     		ldr	r2, [sp, #28]
 732 004c FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 733              	.LVL72:
 734 0050 0028     		cmp	r0, #0
 735 0052 04D0     		beq	.L63
3673:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 736              		.loc 1 3673 0
 737 0054 636C     		ldr	r3, [r4, #68]
 738 0056 042B     		cmp	r3, #4
 739 0058 12D1     		bne	.L65
3675:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_ERROR;
 740              		.loc 1 3675 0
 741 005a 0120     		mov	r0, #1
 742 005c 11E0     		b	.L60
 743              	.L63:
3684:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 744              		.loc 1 3684 0
 745 005e 2368     		ldr	r3, [r4]
ARM GAS  /tmp/cchP46LN.s 			page 100


 746 0060 F6B2     		uxtb	r6, r6
 747 0062 9E62     		str	r6, [r3, #40]
 748              	.L62:
3688:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 749              		.loc 1 3688 0
 750 0064 079B     		ldr	r3, [sp, #28]
 751 0066 0093     		str	r3, [sp]
 752 0068 201C     		mov	r0, r4
 753 006a 8021     		mov	r1, #128
 754 006c 0022     		mov	r2, #0
 755 006e 069B     		ldr	r3, [sp, #24]
 756 0070 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 757              	.LVL73:
 758 0074 0028     		cmp	r0, #0
 759 0076 04D0     		beq	.L60
3690:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_TIMEOUT;
 760              		.loc 1 3690 0
 761 0078 0320     		mov	r0, #3
 762 007a 02E0     		b	.L60
 763              	.L64:
3654:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_TIMEOUT;
 764              		.loc 1 3654 0
 765 007c 0320     		mov	r0, #3
 766 007e 00E0     		b	.L60
 767              	.L65:
3679:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_TIMEOUT;
 768              		.loc 1 3679 0
 769 0080 0320     		mov	r0, #3
 770              	.L60:
3694:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 771              		.loc 1 3694 0
 772 0082 02B0     		add	sp, sp, #8
 773              		@ sp needed
 774              	.LVL74:
 775 0084 70BD     		pop	{r4, r5, r6, pc}
 776              		.cfi_endproc
 777              	.LFE85:
 779 0086 C046     		.section	.text.I2C_RequestMemoryRead,"ax",%progbits
 780              		.align	2
 781              		.code	16
 782              		.thumb_func
 784              	I2C_RequestMemoryRead:
 785              	.LFB86:
3709:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 786              		.loc 1 3709 0
 787              		.cfi_startproc
 788              	.LVL75:
 789 0000 70B5     		push	{r4, r5, r6, lr}
 790              	.LCFI8:
 791              		.cfi_def_cfa_offset 16
 792              		.cfi_offset 4, -16
 793              		.cfi_offset 5, -12
 794              		.cfi_offset 6, -8
 795              		.cfi_offset 14, -4
 796 0002 82B0     		sub	sp, sp, #8
 797              	.LCFI9:
 798              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/cchP46LN.s 			page 101


 799 0004 041C     		mov	r4, r0
 800 0006 161C     		mov	r6, r2
 801 0008 1D1C     		mov	r5, r3
3710:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   I2C_TransferConfig(hi2c,DevAddress,MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 802              		.loc 1 3710 0
 803 000a DAB2     		uxtb	r2, r3
 804              	.LVL76:
 805 000c 8020     		mov	r0, #128
 806              	.LVL77:
 807 000e 8001     		lsl	r0, r0, #6
 808 0010 0090     		str	r0, [sp]
 809 0012 201C     		mov	r0, r4
 810 0014 0023     		mov	r3, #0
 811              	.LVL78:
 812 0016 FFF7FEFF 		bl	I2C_TransferConfig
 813              	.LVL79:
3713:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 814              		.loc 1 3713 0
 815 001a 201C     		mov	r0, r4
 816 001c 0699     		ldr	r1, [sp, #24]
 817 001e 079A     		ldr	r2, [sp, #28]
 818 0020 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 819              	.LVL80:
 820 0024 0028     		cmp	r0, #0
 821 0026 04D0     		beq	.L67
3715:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 822              		.loc 1 3715 0
 823 0028 636C     		ldr	r3, [r4, #68]
 824 002a 042B     		cmp	r3, #4
 825 002c 25D1     		bne	.L72
3717:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_ERROR;
 826              		.loc 1 3717 0
 827 002e 0120     		mov	r0, #1
 828 0030 26E0     		b	.L68
 829              	.L67:
3726:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(MemAddSize == I2C_MEMADD_SIZE_8BIT)
 830              		.loc 1 3726 0
 831 0032 012D     		cmp	r5, #1
 832 0034 03D1     		bne	.L69
3729:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 833              		.loc 1 3729 0
 834 0036 2368     		ldr	r3, [r4]
 835 0038 F6B2     		uxtb	r6, r6
 836 003a 9E62     		str	r6, [r3, #40]
 837 003c 11E0     		b	.L70
 838              	.L69:
3735:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 839              		.loc 1 3735 0
 840 003e 2368     		ldr	r3, [r4]
 841 0040 320A     		lsr	r2, r6, #8
 842 0042 9A62     		str	r2, [r3, #40]
3738:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 843              		.loc 1 3738 0
 844 0044 201C     		mov	r0, r4
 845 0046 0699     		ldr	r1, [sp, #24]
 846 0048 079A     		ldr	r2, [sp, #28]
 847 004a FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
ARM GAS  /tmp/cchP46LN.s 			page 102


 848              	.LVL81:
 849 004e 0028     		cmp	r0, #0
 850 0050 04D0     		beq	.L71
3740:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 851              		.loc 1 3740 0
 852 0052 636C     		ldr	r3, [r4, #68]
 853 0054 042B     		cmp	r3, #4
 854 0056 12D1     		bne	.L73
3742:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_ERROR;
 855              		.loc 1 3742 0
 856 0058 0120     		mov	r0, #1
 857 005a 11E0     		b	.L68
 858              	.L71:
3751:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 859              		.loc 1 3751 0
 860 005c 2368     		ldr	r3, [r4]
 861 005e F6B2     		uxtb	r6, r6
 862 0060 9E62     		str	r6, [r3, #40]
 863              	.L70:
3755:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 864              		.loc 1 3755 0
 865 0062 079B     		ldr	r3, [sp, #28]
 866 0064 0093     		str	r3, [sp]
 867 0066 201C     		mov	r0, r4
 868 0068 4021     		mov	r1, #64
 869 006a 0022     		mov	r2, #0
 870 006c 069B     		ldr	r3, [sp, #24]
 871 006e FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 872              	.LVL82:
 873 0072 0028     		cmp	r0, #0
 874 0074 04D0     		beq	.L68
3757:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_TIMEOUT;
 875              		.loc 1 3757 0
 876 0076 0320     		mov	r0, #3
 877 0078 02E0     		b	.L68
 878              	.L72:
3721:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_TIMEOUT;
 879              		.loc 1 3721 0
 880 007a 0320     		mov	r0, #3
 881 007c 00E0     		b	.L68
 882              	.L73:
3746:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_TIMEOUT;
 883              		.loc 1 3746 0
 884 007e 0320     		mov	r0, #3
 885              	.L68:
3761:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 886              		.loc 1 3761 0
 887 0080 02B0     		add	sp, sp, #8
 888              		@ sp needed
 889              	.LVL83:
 890 0082 70BD     		pop	{r4, r5, r6, pc}
 891              		.cfi_endproc
 892              	.LFE86:
 894              		.section	.text.I2C_WaitOnSTOPFlagUntilTimeout,"ax",%progbits
 895              		.align	2
 896              		.code	16
 897              		.thumb_func
ARM GAS  /tmp/cchP46LN.s 			page 103


 899              	I2C_WaitOnSTOPFlagUntilTimeout:
 900              	.LFB103:
4540:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 901              		.loc 1 4540 0
 902              		.cfi_startproc
 903              	.LVL84:
 904 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 905              	.LCFI10:
 906              		.cfi_def_cfa_offset 24
 907              		.cfi_offset 3, -24
 908              		.cfi_offset 4, -20
 909              		.cfi_offset 5, -16
 910              		.cfi_offset 6, -12
 911              		.cfi_offset 7, -8
 912              		.cfi_offset 14, -4
 913 0002 051C     		mov	r5, r0
 914 0004 0C1C     		mov	r4, r1
 915 0006 161C     		mov	r6, r2
4541:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   while(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 916              		.loc 1 4541 0
 917 0008 2027     		mov	r7, #32
 918 000a 1AE0     		b	.L75
 919              	.LVL85:
 920              	.L78:
4544:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
 921              		.loc 1 4544 0
 922 000c 281C     		mov	r0, r5
 923 000e 211C     		mov	r1, r4
 924 0010 321C     		mov	r2, r6
 925 0012 FFF7FEFF 		bl	I2C_IsAcknowledgeFailed
 926              	.LVL86:
 927 0016 0028     		cmp	r0, #0
 928 0018 19D1     		bne	.L79
4550:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((Timeout == 0U)||((HAL_GetTick() - Tickstart) > Timeout))
 929              		.loc 1 4550 0
 930 001a 002C     		cmp	r4, #0
 931 001c 04D0     		beq	.L77
4550:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((Timeout == 0U)||((HAL_GetTick() - Tickstart) > Timeout))
 932              		.loc 1 4550 0 is_stmt 0 discriminator 1
 933 001e FFF7FEFF 		bl	HAL_GetTick
 934              	.LVL87:
 935 0022 801B     		sub	r0, r0, r6
 936 0024 A042     		cmp	r0, r4
 937 0026 0CD9     		bls	.L75
 938              	.L77:
4552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 939              		.loc 1 4552 0 is_stmt 1
 940 0028 6A6C     		ldr	r2, [r5, #68]
 941 002a 2023     		mov	r3, #32
 942 002c 1A43     		orr	r2, r3
 943 002e 6A64     		str	r2, [r5, #68]
4553:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->State= HAL_I2C_STATE_READY;
 944              		.loc 1 4553 0
 945 0030 4122     		mov	r2, #65
 946 0032 AB54     		strb	r3, [r5, r2]
4554:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
 947              		.loc 1 4554 0
ARM GAS  /tmp/cchP46LN.s 			page 104


 948 0034 0023     		mov	r3, #0
 949 0036 4222     		mov	r2, #66
 950 0038 AB54     		strb	r3, [r5, r2]
4557:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
 951              		.loc 1 4557 0
 952 003a 4022     		mov	r2, #64
 953 003c AB54     		strb	r3, [r5, r2]
4559:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_TIMEOUT;
 954              		.loc 1 4559 0
 955 003e 0320     		mov	r0, #3
 956 0040 06E0     		b	.L76
 957              	.L75:
4541:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   while(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 958              		.loc 1 4541 0 discriminator 1
 959 0042 2B68     		ldr	r3, [r5]
 960 0044 9B69     		ldr	r3, [r3, #24]
 961 0046 1F42     		tst	r7, r3
 962 0048 E0D0     		beq	.L78
4562:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   return HAL_OK;
 963              		.loc 1 4562 0
 964 004a 0020     		mov	r0, #0
 965 004c 00E0     		b	.L76
 966              	.L79:
4546:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_ERROR;
 967              		.loc 1 4546 0
 968 004e 0120     		mov	r0, #1
 969              	.L76:
4563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 970              		.loc 1 4563 0
 971              		@ sp needed
 972              	.LVL88:
 973              	.LVL89:
 974              	.LVL90:
 975 0050 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 976              		.cfi_endproc
 977              	.LFE103:
 979 0052 C046     		.section	.text.I2C_WaitOnRXNEFlagUntilTimeout,"ax",%progbits
 980              		.align	2
 981              		.code	16
 982              		.thumb_func
 984              	I2C_WaitOnRXNEFlagUntilTimeout:
 985              	.LFB104:
4574:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 986              		.loc 1 4574 0
 987              		.cfi_startproc
 988              	.LVL91:
 989 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 990              	.LCFI11:
 991              		.cfi_def_cfa_offset 20
 992              		.cfi_offset 4, -20
 993              		.cfi_offset 5, -16
 994              		.cfi_offset 6, -12
 995              		.cfi_offset 7, -8
 996              		.cfi_offset 14, -4
 997 0002 4746     		mov	r7, r8
 998 0004 80B4     		push	{r7}
 999              	.LCFI12:
ARM GAS  /tmp/cchP46LN.s 			page 105


 1000              		.cfi_def_cfa_offset 24
 1001              		.cfi_offset 8, -24
 1002 0006 041C     		mov	r4, r0
 1003 0008 0D1C     		mov	r5, r1
 1004 000a 161C     		mov	r6, r2
4575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   while(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 1005              		.loc 1 4575 0
 1006 000c 0427     		mov	r7, #4
4584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 1007              		.loc 1 4584 0
 1008 000e 2021     		mov	r1, #32
 1009              	.LVL92:
 1010 0010 8846     		mov	r8, r1
4575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   while(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 1011              		.loc 1 4575 0
 1012 0012 2EE0     		b	.L82
 1013              	.LVL93:
 1014              	.L86:
4578:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
 1015              		.loc 1 4578 0
 1016 0014 201C     		mov	r0, r4
 1017 0016 291C     		mov	r1, r5
 1018 0018 321C     		mov	r2, r6
 1019 001a FFF7FEFF 		bl	I2C_IsAcknowledgeFailed
 1020              	.LVL94:
 1021 001e 0028     		cmp	r0, #0
 1022 0020 2DD1     		bne	.L87
4584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 1023              		.loc 1 4584 0
 1024 0022 2368     		ldr	r3, [r4]
 1025 0024 9A69     		ldr	r2, [r3, #24]
 1026 0026 4146     		mov	r1, r8
 1027 0028 1142     		tst	r1, r2
 1028 002a 10D0     		beq	.L84
4587:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 1029              		.loc 1 4587 0
 1030 002c 2022     		mov	r2, #32
 1031 002e DA61     		str	r2, [r3, #28]
4590:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_RESET_CR2(hi2c);
 1032              		.loc 1 4590 0
 1033 0030 2368     		ldr	r3, [r4]
 1034 0032 5868     		ldr	r0, [r3, #4]
 1035 0034 1449     		ldr	r1, .L89
 1036 0036 0140     		and	r1, r0
 1037 0038 5960     		str	r1, [r3, #4]
4592:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 1038              		.loc 1 4592 0
 1039 003a 0023     		mov	r3, #0
 1040 003c 6364     		str	r3, [r4, #68]
4593:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->State= HAL_I2C_STATE_READY;
 1041              		.loc 1 4593 0
 1042 003e 4121     		mov	r1, #65
 1043 0040 6254     		strb	r2, [r4, r1]
4594:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
 1044              		.loc 1 4594 0
 1045 0042 4222     		mov	r2, #66
 1046 0044 A354     		strb	r3, [r4, r2]
ARM GAS  /tmp/cchP46LN.s 			page 106


4597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
 1047              		.loc 1 4597 0
 1048 0046 4022     		mov	r2, #64
 1049 0048 A354     		strb	r3, [r4, r2]
4599:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_ERROR;
 1050              		.loc 1 4599 0
 1051 004a 0120     		mov	r0, #1
 1052 004c 18E0     		b	.L83
 1053              	.L84:
4603:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((Timeout == 0U)||((HAL_GetTick() - Tickstart) > Timeout))
 1054              		.loc 1 4603 0
 1055 004e 002D     		cmp	r5, #0
 1056 0050 04D0     		beq	.L85
4603:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((Timeout == 0U)||((HAL_GetTick() - Tickstart) > Timeout))
 1057              		.loc 1 4603 0 is_stmt 0 discriminator 1
 1058 0052 FFF7FEFF 		bl	HAL_GetTick
 1059              	.LVL95:
 1060 0056 801B     		sub	r0, r0, r6
 1061 0058 A842     		cmp	r0, r5
 1062 005a 0AD9     		bls	.L82
 1063              	.L85:
4605:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 1064              		.loc 1 4605 0 is_stmt 1
 1065 005c 626C     		ldr	r2, [r4, #68]
 1066 005e 2023     		mov	r3, #32
 1067 0060 1A43     		orr	r2, r3
 1068 0062 6264     		str	r2, [r4, #68]
4606:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->State= HAL_I2C_STATE_READY;
 1069              		.loc 1 4606 0
 1070 0064 4122     		mov	r2, #65
 1071 0066 A354     		strb	r3, [r4, r2]
4609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
 1072              		.loc 1 4609 0
 1073 0068 0022     		mov	r2, #0
 1074 006a 4023     		mov	r3, #64
 1075 006c E254     		strb	r2, [r4, r3]
4611:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_TIMEOUT;
 1076              		.loc 1 4611 0
 1077 006e 0320     		mov	r0, #3
 1078 0070 06E0     		b	.L83
 1079              	.L82:
4575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   while(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 1080              		.loc 1 4575 0 discriminator 1
 1081 0072 2368     		ldr	r3, [r4]
 1082 0074 9B69     		ldr	r3, [r3, #24]
 1083 0076 1F42     		tst	r7, r3
 1084 0078 CCD0     		beq	.L86
4614:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   return HAL_OK;
 1085              		.loc 1 4614 0
 1086 007a 0020     		mov	r0, #0
 1087 007c 00E0     		b	.L83
 1088              	.L87:
4580:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_ERROR;
 1089              		.loc 1 4580 0
 1090 007e 0120     		mov	r0, #1
 1091              	.L83:
4615:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
ARM GAS  /tmp/cchP46LN.s 			page 107


 1092              		.loc 1 4615 0
 1093              		@ sp needed
 1094              	.LVL96:
 1095              	.LVL97:
 1096              	.LVL98:
 1097 0080 04BC     		pop	{r2}
 1098 0082 9046     		mov	r8, r2
 1099 0084 F0BD     		pop	{r4, r5, r6, r7, pc}
 1100              	.L90:
 1101 0086 C046     		.align	2
 1102              	.L89:
 1103 0088 00E800FE 		.word	-33495040
 1104              		.cfi_endproc
 1105              	.LFE104:
 1107              		.section	.text.I2C_DMAMasterTransmitCplt,"ax",%progbits
 1108              		.align	2
 1109              		.code	16
 1110              		.thumb_func
 1112              	I2C_DMAMasterTransmitCplt:
 1113              	.LFB95:
4307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 1114              		.loc 1 4307 0
 1115              		.cfi_startproc
 1116              	.LVL99:
 1117 0000 10B5     		push	{r4, lr}
 1118              	.LCFI13:
 1119              		.cfi_def_cfa_offset 8
 1120              		.cfi_offset 4, -8
 1121              		.cfi_offset 14, -4
4308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   I2C_HandleTypeDef* hi2c = (I2C_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 1122              		.loc 1 4308 0
 1123 0002 846A     		ldr	r4, [r0, #40]
 1124              	.LVL100:
4311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
 1125              		.loc 1 4311 0
 1126 0004 2368     		ldr	r3, [r4]
 1127 0006 1968     		ldr	r1, [r3]
 1128 0008 114A     		ldr	r2, .L96
 1129 000a 0A40     		and	r2, r1
 1130 000c 1A60     		str	r2, [r3]
4314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->XferCount == 0U)
 1131              		.loc 1 4314 0
 1132 000e 638D     		ldrh	r3, [r4, #42]
 1133 0010 9BB2     		uxth	r3, r3
 1134 0012 002B     		cmp	r3, #0
 1135 0014 04D1     		bne	.L92
4317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
 1136              		.loc 1 4317 0
 1137 0016 201C     		mov	r0, r4
 1138              	.LVL101:
 1139 0018 1221     		mov	r1, #18
 1140 001a FFF7FEFF 		bl	I2C_Enable_IRQ
 1141              	.LVL102:
 1142 001e 16E0     		b	.L91
 1143              	.LVL103:
 1144              	.L92:
4323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr += hi2c->XferSize;
ARM GAS  /tmp/cchP46LN.s 			page 108


 1145              		.loc 1 4323 0
 1146 0020 218D     		ldrh	r1, [r4, #40]
 1147 0022 606A     		ldr	r0, [r4, #36]
 1148              	.LVL104:
 1149 0024 4118     		add	r1, r0, r1
 1150 0026 6162     		str	r1, [r4, #36]
4326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
 1151              		.loc 1 4326 0
 1152 0028 638D     		ldrh	r3, [r4, #42]
 1153 002a 9BB2     		uxth	r3, r3
 1154 002c FF2B     		cmp	r3, #255
 1155 002e 02D9     		bls	.L94
4328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 1156              		.loc 1 4328 0
 1157 0030 FF23     		mov	r3, #255
 1158 0032 2385     		strh	r3, [r4, #40]
 1159 0034 01E0     		b	.L95
 1160              	.L94:
4332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 1161              		.loc 1 4332 0
 1162 0036 638D     		ldrh	r3, [r4, #42]
 1163 0038 2385     		strh	r3, [r4, #40]
 1164              	.L95:
4336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)hi2c->pBuffPtr, (uint32_t)&hi2c->Instance->TXDR, hi2c-
 1165              		.loc 1 4336 0
 1166 003a 2268     		ldr	r2, [r4]
 1167 003c 2832     		add	r2, r2, #40
 1168 003e 238D     		ldrh	r3, [r4, #40]
 1169 0040 A06B     		ldr	r0, [r4, #56]
 1170 0042 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1171              	.LVL105:
4339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RELOAD_IT);
 1172              		.loc 1 4339 0
 1173 0046 201C     		mov	r0, r4
 1174 0048 1221     		mov	r1, #18
 1175 004a FFF7FEFF 		bl	I2C_Enable_IRQ
 1176              	.LVL106:
 1177              	.L91:
4341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 1178              		.loc 1 4341 0
 1179              		@ sp needed
 1180              	.LVL107:
 1181 004e 10BD     		pop	{r4, pc}
 1182              	.L97:
 1183              		.align	2
 1184              	.L96:
 1185 0050 FFBFFFFF 		.word	-16385
 1186              		.cfi_endproc
 1187              	.LFE95:
 1189              		.section	.text.I2C_DMAMasterReceiveCplt,"ax",%progbits
 1190              		.align	2
 1191              		.code	16
 1192              		.thumb_func
 1194              	I2C_DMAMasterReceiveCplt:
 1195              	.LFB97:
4364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 1196              		.loc 1 4364 0
ARM GAS  /tmp/cchP46LN.s 			page 109


 1197              		.cfi_startproc
 1198              	.LVL108:
 1199 0000 10B5     		push	{r4, lr}
 1200              	.LCFI14:
 1201              		.cfi_def_cfa_offset 8
 1202              		.cfi_offset 4, -8
 1203              		.cfi_offset 14, -4
4365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   I2C_HandleTypeDef* hi2c = (I2C_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 1204              		.loc 1 4365 0
 1205 0002 846A     		ldr	r4, [r0, #40]
 1206              	.LVL109:
4368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
 1207              		.loc 1 4368 0
 1208 0004 2368     		ldr	r3, [r4]
 1209 0006 1968     		ldr	r1, [r3]
 1210 0008 114A     		ldr	r2, .L103
 1211 000a 0A40     		and	r2, r1
 1212 000c 1A60     		str	r2, [r3]
4371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->XferCount == 0U)
 1213              		.loc 1 4371 0
 1214 000e 638D     		ldrh	r3, [r4, #42]
 1215 0010 9BB2     		uxth	r3, r3
 1216 0012 002B     		cmp	r3, #0
 1217 0014 04D1     		bne	.L99
4374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
 1218              		.loc 1 4374 0
 1219 0016 201C     		mov	r0, r4
 1220              	.LVL110:
 1221 0018 1221     		mov	r1, #18
 1222 001a FFF7FEFF 		bl	I2C_Enable_IRQ
 1223              	.LVL111:
 1224 001e 16E0     		b	.L98
 1225              	.LVL112:
 1226              	.L99:
4380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr += hi2c->XferSize;
 1227              		.loc 1 4380 0
 1228 0020 228D     		ldrh	r2, [r4, #40]
 1229 0022 606A     		ldr	r0, [r4, #36]
 1230              	.LVL113:
 1231 0024 8218     		add	r2, r0, r2
 1232 0026 6262     		str	r2, [r4, #36]
4383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
 1233              		.loc 1 4383 0
 1234 0028 638D     		ldrh	r3, [r4, #42]
 1235 002a 9BB2     		uxth	r3, r3
 1236 002c FF2B     		cmp	r3, #255
 1237 002e 02D9     		bls	.L101
4385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 1238              		.loc 1 4385 0
 1239 0030 FF23     		mov	r3, #255
 1240 0032 2385     		strh	r3, [r4, #40]
 1241 0034 01E0     		b	.L102
 1242              	.L101:
4389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 1243              		.loc 1 4389 0
 1244 0036 638D     		ldrh	r3, [r4, #42]
 1245 0038 2385     		strh	r3, [r4, #40]
ARM GAS  /tmp/cchP46LN.s 			page 110


 1246              	.L102:
4393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)hi2c->pBuffPtr, hi2c-
 1247              		.loc 1 4393 0
 1248 003a 2168     		ldr	r1, [r4]
 1249 003c 2431     		add	r1, r1, #36
 1250 003e 238D     		ldrh	r3, [r4, #40]
 1251 0040 E06B     		ldr	r0, [r4, #60]
 1252 0042 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1253              	.LVL114:
4396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RELOAD_IT);
 1254              		.loc 1 4396 0
 1255 0046 201C     		mov	r0, r4
 1256 0048 1221     		mov	r1, #18
 1257 004a FFF7FEFF 		bl	I2C_Enable_IRQ
 1258              	.LVL115:
 1259              	.L98:
4398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 1260              		.loc 1 4398 0
 1261              		@ sp needed
 1262              	.LVL116:
 1263 004e 10BD     		pop	{r4, pc}
 1264              	.L104:
 1265              		.align	2
 1266              	.L103:
 1267 0050 FF7FFFFF 		.word	-32769
 1268              		.cfi_endproc
 1269              	.LFE97:
 1271              		.section	.text.HAL_I2C_MspInit,"ax",%progbits
 1272              		.align	2
 1273              		.weak	HAL_I2C_MspInit
 1274              		.code	16
 1275              		.thumb_func
 1277              	HAL_I2C_MspInit:
 1278              	.LFB38:
 530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 1279              		.loc 1 530 0
 1280              		.cfi_startproc
 1281              	.LVL117:
 537:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 1282              		.loc 1 537 0
 1283              		@ sp needed
 1284 0000 7047     		bx	lr
 1285              		.cfi_endproc
 1286              	.LFE38:
 1288 0002 C046     		.section	.text.HAL_I2C_Init,"ax",%progbits
 1289              		.align	2
 1290              		.global	HAL_I2C_Init
 1291              		.code	16
 1292              		.thumb_func
 1294              	HAL_I2C_Init:
 1295              	.LFB36:
 407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 1296              		.loc 1 407 0
 1297              		.cfi_startproc
 1298              	.LVL118:
 1299 0000 10B5     		push	{r4, lr}
 1300              	.LCFI15:
ARM GAS  /tmp/cchP46LN.s 			page 111


 1301              		.cfi_def_cfa_offset 8
 1302              		.cfi_offset 4, -8
 1303              		.cfi_offset 14, -4
 1304 0002 041E     		sub	r4, r0, #0
 409:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c == NULL)
 1305              		.loc 1 409 0
 1306 0004 57D0     		beq	.L112
 424:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_RESET)
 1307              		.loc 1 424 0
 1308 0006 4123     		mov	r3, #65
 1309 0008 C35C     		ldrb	r3, [r0, r3]
 1310 000a 002B     		cmp	r3, #0
 1311 000c 04D1     		bne	.L108
 427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Lock = HAL_UNLOCKED;
 1312              		.loc 1 427 0
 1313 000e 0022     		mov	r2, #0
 1314 0010 4023     		mov	r3, #64
 1315 0012 C254     		strb	r2, [r0, r3]
 430:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     HAL_I2C_MspInit(hi2c);
 1316              		.loc 1 430 0
 1317 0014 FFF7FEFF 		bl	HAL_I2C_MspInit
 1318              	.LVL119:
 1319              	.L108:
 433:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_BUSY;
 1320              		.loc 1 433 0
 1321 0018 2422     		mov	r2, #36
 1322 001a 4123     		mov	r3, #65
 1323 001c E254     		strb	r2, [r4, r3]
 436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_I2C_DISABLE(hi2c);
 1324              		.loc 1 436 0
 1325 001e 2368     		ldr	r3, [r4]
 1326 0020 1A68     		ldr	r2, [r3]
 1327 0022 0121     		mov	r1, #1
 1328 0024 8A43     		bic	r2, r1
 1329 0026 1A60     		str	r2, [r3]
 440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 1330              		.loc 1 440 0
 1331 0028 2368     		ldr	r3, [r4]
 1332 002a 244A     		ldr	r2, .L113
 1333 002c 6068     		ldr	r0, [r4, #4]
 1334 002e 0240     		and	r2, r0
 1335 0030 1A61     		str	r2, [r3, #16]
 444:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 1336              		.loc 1 444 0
 1337 0032 2368     		ldr	r3, [r4]
 1338 0034 9968     		ldr	r1, [r3, #8]
 1339 0036 224A     		ldr	r2, .L113+4
 1340 0038 0A40     		and	r2, r1
 1341 003a 9A60     		str	r2, [r3, #8]
 447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 1342              		.loc 1 447 0
 1343 003c E168     		ldr	r1, [r4, #12]
 1344 003e 0129     		cmp	r1, #1
 1345 0040 06D1     		bne	.L109
 449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 1346              		.loc 1 449 0
 1347 0042 2368     		ldr	r3, [r4]
ARM GAS  /tmp/cchP46LN.s 			page 112


 1348 0044 8022     		mov	r2, #128
 1349 0046 1202     		lsl	r2, r2, #8
 1350 0048 A068     		ldr	r0, [r4, #8]
 1351 004a 0243     		orr	r2, r0
 1352 004c 9A60     		str	r2, [r3, #8]
 1353 004e 05E0     		b	.L110
 1354              	.L109:
 453:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 1355              		.loc 1 453 0
 1356 0050 2368     		ldr	r3, [r4]
 1357 0052 8422     		mov	r2, #132
 1358 0054 1202     		lsl	r2, r2, #8
 1359 0056 A168     		ldr	r1, [r4, #8]
 1360 0058 0A43     		orr	r2, r1
 1361 005a 9A60     		str	r2, [r3, #8]
 1362              	.L110:
 458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 1363              		.loc 1 458 0
 1364 005c E268     		ldr	r2, [r4, #12]
 1365 005e 022A     		cmp	r2, #2
 1366 0060 03D1     		bne	.L111
 460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->CR2 = (I2C_CR2_ADD10);
 1367              		.loc 1 460 0
 1368 0062 2368     		ldr	r3, [r4]
 1369 0064 8022     		mov	r2, #128
 1370 0066 1201     		lsl	r2, r2, #4
 1371 0068 5A60     		str	r2, [r3, #4]
 1372              	.L111:
 463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 1373              		.loc 1 463 0
 1374 006a 2368     		ldr	r3, [r4]
 1375 006c 5A68     		ldr	r2, [r3, #4]
 1376 006e 1549     		ldr	r1, .L113+8
 1377 0070 0A43     		orr	r2, r1
 1378 0072 5A60     		str	r2, [r3, #4]
 467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 1379              		.loc 1 467 0
 1380 0074 2368     		ldr	r3, [r4]
 1381 0076 D968     		ldr	r1, [r3, #12]
 1382 0078 114A     		ldr	r2, .L113+4
 1383 007a 0A40     		and	r2, r1
 1384 007c DA60     		str	r2, [r3, #12]
 470:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddr
 1385              		.loc 1 470 0
 1386 007e 2368     		ldr	r3, [r4]
 1387 0080 2169     		ldr	r1, [r4, #16]
 1388 0082 6069     		ldr	r0, [r4, #20]
 1389 0084 0143     		orr	r1, r0
 1390 0086 A069     		ldr	r0, [r4, #24]
 1391 0088 0202     		lsl	r2, r0, #8
 1392 008a 0A43     		orr	r2, r1
 1393 008c DA60     		str	r2, [r3, #12]
 474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 1394              		.loc 1 474 0
 1395 008e 2368     		ldr	r3, [r4]
 1396 0090 E269     		ldr	r2, [r4, #28]
 1397 0092 216A     		ldr	r1, [r4, #32]
ARM GAS  /tmp/cchP46LN.s 			page 113


 1398 0094 0A43     		orr	r2, r1
 1399 0096 1A60     		str	r2, [r3]
 477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_I2C_ENABLE(hi2c);
 1400              		.loc 1 477 0
 1401 0098 2368     		ldr	r3, [r4]
 1402 009a 1968     		ldr	r1, [r3]
 1403 009c 0122     		mov	r2, #1
 1404 009e 0A43     		orr	r2, r1
 1405 00a0 1A60     		str	r2, [r3]
 479:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 1406              		.loc 1 479 0
 1407 00a2 0023     		mov	r3, #0
 1408 00a4 6364     		str	r3, [r4, #68]
 480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
 1409              		.loc 1 480 0
 1410 00a6 2021     		mov	r1, #32
 1411 00a8 4122     		mov	r2, #65
 1412 00aa A154     		strb	r1, [r4, r2]
 481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 1413              		.loc 1 481 0
 1414 00ac 2363     		str	r3, [r4, #48]
 482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 1415              		.loc 1 482 0
 1416 00ae 4222     		mov	r2, #66
 1417 00b0 A354     		strb	r3, [r4, r2]
 484:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   return HAL_OK;
 1418              		.loc 1 484 0
 1419 00b2 0020     		mov	r0, #0
 1420 00b4 00E0     		b	.L107
 1421              	.LVL120:
 1422              	.L112:
 411:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_ERROR;
 1423              		.loc 1 411 0
 1424 00b6 0120     		mov	r0, #1
 1425              	.LVL121:
 1426              	.L107:
 485:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 1427              		.loc 1 485 0
 1428              		@ sp needed
 1429              	.LVL122:
 1430 00b8 10BD     		pop	{r4, pc}
 1431              	.L114:
 1432 00ba C046     		.align	2
 1433              	.L113:
 1434 00bc FFFFFFF0 		.word	-251658241
 1435 00c0 FF7FFFFF 		.word	-32769
 1436 00c4 00800002 		.word	33587200
 1437              		.cfi_endproc
 1438              	.LFE36:
 1440              		.section	.text.HAL_I2C_MspDeInit,"ax",%progbits
 1441              		.align	2
 1442              		.weak	HAL_I2C_MspDeInit
 1443              		.code	16
 1444              		.thumb_func
 1446              	HAL_I2C_MspDeInit:
 1447              	.LFB39:
 546:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
ARM GAS  /tmp/cchP46LN.s 			page 114


 1448              		.loc 1 546 0
 1449              		.cfi_startproc
 1450              	.LVL123:
 553:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 1451              		.loc 1 553 0
 1452              		@ sp needed
 1453 0000 7047     		bx	lr
 1454              		.cfi_endproc
 1455              	.LFE39:
 1457 0002 C046     		.section	.text.HAL_I2C_DeInit,"ax",%progbits
 1458              		.align	2
 1459              		.global	HAL_I2C_DeInit
 1460              		.code	16
 1461              		.thumb_func
 1463              	HAL_I2C_DeInit:
 1464              	.LFB37:
 494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 1465              		.loc 1 494 0
 1466              		.cfi_startproc
 1467              	.LVL124:
 1468 0000 38B5     		push	{r3, r4, r5, lr}
 1469              	.LCFI16:
 1470              		.cfi_def_cfa_offset 16
 1471              		.cfi_offset 3, -16
 1472              		.cfi_offset 4, -12
 1473              		.cfi_offset 5, -8
 1474              		.cfi_offset 14, -4
 1475 0002 041E     		sub	r4, r0, #0
 496:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c == NULL)
 1476              		.loc 1 496 0
 1477 0004 13D0     		beq	.L118
 504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_BUSY;
 1478              		.loc 1 504 0
 1479 0006 4125     		mov	r5, #65
 1480 0008 2423     		mov	r3, #36
 1481 000a 4355     		strb	r3, [r0, r5]
 507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_I2C_DISABLE(hi2c);
 1482              		.loc 1 507 0
 1483 000c 0368     		ldr	r3, [r0]
 1484 000e 1A68     		ldr	r2, [r3]
 1485 0010 0121     		mov	r1, #1
 1486 0012 8A43     		bic	r2, r1
 1487 0014 1A60     		str	r2, [r3]
 510:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   HAL_I2C_MspDeInit(hi2c);
 1488              		.loc 1 510 0
 1489 0016 FFF7FEFF 		bl	HAL_I2C_MspDeInit
 1490              	.LVL125:
 512:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 1491              		.loc 1 512 0
 1492 001a 0023     		mov	r3, #0
 1493 001c 6364     		str	r3, [r4, #68]
 513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_RESET;
 1494              		.loc 1 513 0
 1495 001e 6355     		strb	r3, [r4, r5]
 514:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 1496              		.loc 1 514 0
 1497 0020 2363     		str	r3, [r4, #48]
ARM GAS  /tmp/cchP46LN.s 			page 115


 515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 1498              		.loc 1 515 0
 1499 0022 4222     		mov	r2, #66
 1500 0024 A354     		strb	r3, [r4, r2]
 518:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 1501              		.loc 1 518 0
 1502 0026 4022     		mov	r2, #64
 1503 0028 A354     		strb	r3, [r4, r2]
 520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   return HAL_OK;
 1504              		.loc 1 520 0
 1505 002a 0020     		mov	r0, #0
 1506 002c 00E0     		b	.L117
 1507              	.LVL126:
 1508              	.L118:
 498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_ERROR;
 1509              		.loc 1 498 0
 1510 002e 0120     		mov	r0, #1
 1511              	.LVL127:
 1512              	.L117:
 521:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 1513              		.loc 1 521 0
 1514              		@ sp needed
 1515              	.LVL128:
 1516 0030 38BD     		pop	{r3, r4, r5, pc}
 1517              		.cfi_endproc
 1518              	.LFE37:
 1520 0032 C046     		.section	.text.HAL_I2C_Master_Transmit,"ax",%progbits
 1521              		.align	2
 1522              		.global	HAL_I2C_Master_Transmit
 1523              		.code	16
 1524              		.thumb_func
 1526              	HAL_I2C_Master_Transmit:
 1527              	.LFB40:
 630:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 1528              		.loc 1 630 0
 1529              		.cfi_startproc
 1530              	.LVL129:
 1531 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1532              	.LCFI17:
 1533              		.cfi_def_cfa_offset 20
 1534              		.cfi_offset 4, -20
 1535              		.cfi_offset 5, -16
 1536              		.cfi_offset 6, -12
 1537              		.cfi_offset 7, -8
 1538              		.cfi_offset 14, -4
 1539 0002 4F46     		mov	r7, r9
 1540 0004 4646     		mov	r6, r8
 1541 0006 C0B4     		push	{r6, r7}
 1542              	.LCFI18:
 1543              		.cfi_def_cfa_offset 28
 1544              		.cfi_offset 8, -28
 1545              		.cfi_offset 9, -24
 1546 0008 83B0     		sub	sp, sp, #12
 1547              	.LCFI19:
 1548              		.cfi_def_cfa_offset 40
 1549 000a 041C     		mov	r4, r0
 1550 000c 0D1C     		mov	r5, r1
ARM GAS  /tmp/cchP46LN.s 			page 116


 1551 000e 171C     		mov	r7, r2
 1552 0010 1E1C     		mov	r6, r3
 1553              	.LVL130:
 633:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 1554              		.loc 1 633 0
 1555 0012 4120     		mov	r0, #65
 1556              	.LVL131:
 1557 0014 205C     		ldrb	r0, [r4, r0]
 1558 0016 2028     		cmp	r0, #32
 1559 0018 00D0     		beq	.LCB1597
 1560 001a A9E0     		b	.L129	@long jump
 1561              	.LCB1597:
 636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 1562              		.loc 1 636 0
 1563 001c 4023     		mov	r3, #64
 1564              	.LVL132:
 1565 001e E35C     		ldrb	r3, [r4, r3]
 1566 0020 012B     		cmp	r3, #1
 1567 0022 00D1     		bne	.LCB1602
 1568 0024 A6E0     		b	.L130	@long jump
 1569              	.LCB1602:
 636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 1570              		.loc 1 636 0 is_stmt 0 discriminator 2
 1571 0026 0122     		mov	r2, #1
 1572              	.LVL133:
 1573 0028 4023     		mov	r3, #64
 1574 002a E254     		strb	r2, [r4, r3]
 639:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     tickstart = HAL_GetTick();
 1575              		.loc 1 639 0 is_stmt 1 discriminator 2
 1576 002c FFF7FEFF 		bl	HAL_GetTick
 1577              	.LVL134:
 1578 0030 8046     		mov	r8, r0
 1579              	.LVL135:
 641:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 1580              		.loc 1 641 0 discriminator 2
 1581 0032 0090     		str	r0, [sp]
 1582 0034 201C     		mov	r0, r4
 1583              	.LVL136:
 1584 0036 8021     		mov	r1, #128
 1585 0038 0902     		lsl	r1, r1, #8
 1586 003a 0122     		mov	r2, #1
 1587 003c 1923     		mov	r3, #25
 1588 003e FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1589              	.LVL137:
 1590 0042 0028     		cmp	r0, #0
 1591 0044 00D0     		beq	.LCB1622
 1592 0046 97E0     		b	.L131	@long jump
 1593              	.LCB1622:
 646:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 1594              		.loc 1 646 0
 1595 0048 2122     		mov	r2, #33
 1596 004a 4123     		mov	r3, #65
 1597 004c E254     		strb	r2, [r4, r3]
 647:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 1598              		.loc 1 647 0
 1599 004e 1022     		mov	r2, #16
 1600 0050 4223     		mov	r3, #66
ARM GAS  /tmp/cchP46LN.s 			page 117


 1601 0052 E254     		strb	r2, [r4, r3]
 648:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 1602              		.loc 1 648 0
 1603 0054 0023     		mov	r3, #0
 1604 0056 6364     		str	r3, [r4, #68]
 651:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
 1605              		.loc 1 651 0
 1606 0058 6762     		str	r7, [r4, #36]
 652:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount = Size;
 1607              		.loc 1 652 0
 1608 005a 6685     		strh	r6, [r4, #42]
 653:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 1609              		.loc 1 653 0
 1610 005c 6363     		str	r3, [r4, #52]
 657:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
 1611              		.loc 1 657 0
 1612 005e 638D     		ldrh	r3, [r4, #42]
 1613 0060 9BB2     		uxth	r3, r3
 1614 0062 FF2B     		cmp	r3, #255
 1615 0064 0CD9     		bls	.L121
 659:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 1616              		.loc 1 659 0
 1617 0066 FF23     		mov	r3, #255
 1618 0068 2385     		strh	r3, [r4, #40]
 660:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRIT
 1619              		.loc 1 660 0
 1620 006a 8023     		mov	r3, #128
 1621 006c 9B01     		lsl	r3, r3, #6
 1622 006e 0093     		str	r3, [sp]
 1623 0070 201C     		mov	r0, r4
 1624 0072 291C     		mov	r1, r5
 1625 0074 FF22     		mov	r2, #255
 1626 0076 8023     		mov	r3, #128
 1627 0078 5B04     		lsl	r3, r3, #17
 1628 007a FFF7FEFF 		bl	I2C_TransferConfig
 1629              	.LVL138:
 1630 007e 51E0     		b	.L136
 1631              	.L121:
 664:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 1632              		.loc 1 664 0
 1633 0080 628D     		ldrh	r2, [r4, #42]
 1634 0082 92B2     		uxth	r2, r2
 1635 0084 2285     		strh	r2, [r4, #40]
 665:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_WRI
 1636              		.loc 1 665 0
 1637 0086 D2B2     		uxtb	r2, r2
 1638 0088 8023     		mov	r3, #128
 1639 008a 9B01     		lsl	r3, r3, #6
 1640 008c 0093     		str	r3, [sp]
 1641 008e 201C     		mov	r0, r4
 1642 0090 291C     		mov	r1, r5
 1643 0092 8023     		mov	r3, #128
 1644 0094 9B04     		lsl	r3, r3, #18
 1645 0096 FFF7FEFF 		bl	I2C_TransferConfig
 1646              	.LVL139:
 1647 009a 43E0     		b	.L136
 1648              	.LVL140:
ARM GAS  /tmp/cchP46LN.s 			page 118


 1649              	.L127:
 671:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 1650              		.loc 1 671 0
 1651 009c 201C     		mov	r0, r4
 1652 009e 0A99     		ldr	r1, [sp, #40]
 1653 00a0 4246     		mov	r2, r8
 1654 00a2 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 1655              	.LVL141:
 1656 00a6 0028     		cmp	r0, #0
 1657 00a8 04D0     		beq	.L124
 673:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 1658              		.loc 1 673 0
 1659 00aa 636C     		ldr	r3, [r4, #68]
 1660 00ac 042B     		cmp	r3, #4
 1661 00ae 65D1     		bne	.L132
 675:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           return HAL_ERROR;
 1662              		.loc 1 675 0
 1663 00b0 0120     		mov	r0, #1
 1664 00b2 68E0     		b	.L120
 1665              	.L124:
 683:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Instance->TXDR = (*hi2c->pBuffPtr++);
 1666              		.loc 1 683 0
 1667 00b4 2368     		ldr	r3, [r4]
 1668 00b6 616A     		ldr	r1, [r4, #36]
 1669 00b8 4A1C     		add	r2, r1, #1
 1670 00ba 6262     		str	r2, [r4, #36]
 1671 00bc 0A78     		ldrb	r2, [r1]
 1672 00be 9A62     		str	r2, [r3, #40]
 684:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferCount--;
 1673              		.loc 1 684 0
 1674 00c0 638D     		ldrh	r3, [r4, #42]
 1675 00c2 013B     		sub	r3, r3, #1
 1676 00c4 9BB2     		uxth	r3, r3
 1677 00c6 6385     		strh	r3, [r4, #42]
 685:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize--;
 1678              		.loc 1 685 0
 1679 00c8 218D     		ldrh	r1, [r4, #40]
 1680 00ca 0139     		sub	r1, r1, #1
 1681 00cc 89B2     		uxth	r1, r1
 1682 00ce 2185     		strh	r1, [r4, #40]
 687:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if((hi2c->XferSize == 0U) && (hi2c->XferCount!=0U))
 1683              		.loc 1 687 0
 1684 00d0 0029     		cmp	r1, #0
 1685 00d2 2DD1     		bne	.L135
 687:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if((hi2c->XferSize == 0U) && (hi2c->XferCount!=0U))
 1686              		.loc 1 687 0 is_stmt 0 discriminator 1
 1687 00d4 638D     		ldrh	r3, [r4, #42]
 1688 00d6 9BB2     		uxth	r3, r3
 1689 00d8 002B     		cmp	r3, #0
 1690 00da 29D0     		beq	.L135
 690:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 1691              		.loc 1 690 0 is_stmt 1
 1692 00dc 4346     		mov	r3, r8
 1693 00de 0093     		str	r3, [sp]
 1694 00e0 201C     		mov	r0, r4
 1695 00e2 8021     		mov	r1, #128
 1696 00e4 0022     		mov	r2, #0
ARM GAS  /tmp/cchP46LN.s 			page 119


 1697 00e6 0A9B     		ldr	r3, [sp, #40]
 1698 00e8 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1699              	.LVL142:
 1700 00ec 0028     		cmp	r0, #0
 1701 00ee 47D1     		bne	.L133
 695:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         if(hi2c->XferCount > MAX_NBYTE_SIZE)
 1702              		.loc 1 695 0
 1703 00f0 638D     		ldrh	r3, [r4, #42]
 1704 00f2 9BB2     		uxth	r3, r3
 1705 00f4 FF2B     		cmp	r3, #255
 1706 00f6 09D9     		bls	.L126
 697:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
 1707              		.loc 1 697 0
 1708 00f8 2685     		strh	r6, [r4, #40]
 698:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 1709              		.loc 1 698 0
 1710 00fa 0023     		mov	r3, #0
 1711 00fc 0093     		str	r3, [sp]
 1712 00fe 201C     		mov	r0, r4
 1713 0100 291C     		mov	r1, r5
 1714 0102 321C     		mov	r2, r6
 1715 0104 3B1C     		mov	r3, r7
 1716 0106 FFF7FEFF 		bl	I2C_TransferConfig
 1717              	.LVL143:
 1718 010a 11E0     		b	.L135
 1719              	.L126:
 702:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
 1720              		.loc 1 702 0
 1721 010c 628D     		ldrh	r2, [r4, #42]
 1722 010e 92B2     		uxth	r2, r2
 1723 0110 2285     		strh	r2, [r4, #40]
 703:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 1724              		.loc 1 703 0
 1725 0112 D2B2     		uxtb	r2, r2
 1726 0114 0023     		mov	r3, #0
 1727 0116 0093     		str	r3, [sp]
 1728 0118 201C     		mov	r0, r4
 1729 011a 291C     		mov	r1, r5
 1730 011c 4B46     		mov	r3, r9
 1731 011e FFF7FEFF 		bl	I2C_TransferConfig
 1732              	.LVL144:
 1733 0122 05E0     		b	.L135
 1734              	.LVL145:
 1735              	.L136:
 703:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 1736              		.loc 1 703 0 is_stmt 0 discriminator 1
 1737 0124 8023     		mov	r3, #128
 1738 0126 9B04     		lsl	r3, r3, #18
 1739 0128 9946     		mov	r9, r3
 697:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
 1740              		.loc 1 697 0 is_stmt 1 discriminator 1
 1741 012a FF26     		mov	r6, #255
 698:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 1742              		.loc 1 698 0 discriminator 1
 1743 012c 8027     		mov	r7, #128
 1744              	.LVL146:
 1745 012e 7F04     		lsl	r7, r7, #17
ARM GAS  /tmp/cchP46LN.s 			page 120


 1746              	.L135:
 668:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     while(hi2c->XferCount > 0U)
 1747              		.loc 1 668 0 discriminator 1
 1748 0130 638D     		ldrh	r3, [r4, #42]
 1749 0132 9BB2     		uxth	r3, r3
 1750 0134 002B     		cmp	r3, #0
 1751 0136 B1D1     		bne	.L127
 710:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 1752              		.loc 1 710 0
 1753 0138 201C     		mov	r0, r4
 1754 013a 0A99     		ldr	r1, [sp, #40]
 1755 013c 4246     		mov	r2, r8
 1756 013e FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 1757              	.LVL147:
 1758 0142 0028     		cmp	r0, #0
 1759 0144 04D0     		beq	.L128
 712:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 1760              		.loc 1 712 0
 1761 0146 636C     		ldr	r3, [r4, #68]
 1762 0148 042B     		cmp	r3, #4
 1763 014a 1BD1     		bne	.L134
 714:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_ERROR;
 1764              		.loc 1 714 0
 1765 014c 0120     		mov	r0, #1
 1766 014e 1AE0     		b	.L120
 1767              	.L128:
 723:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 1768              		.loc 1 723 0
 1769 0150 2268     		ldr	r2, [r4]
 1770 0152 2023     		mov	r3, #32
 1771 0154 D361     		str	r3, [r2, #28]
 726:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
 1772              		.loc 1 726 0
 1773 0156 2268     		ldr	r2, [r4]
 1774 0158 5568     		ldr	r5, [r2, #4]
 1775 015a 0D49     		ldr	r1, .L137
 1776 015c 2940     		and	r1, r5
 1777 015e 5160     		str	r1, [r2, #4]
 728:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 1778              		.loc 1 728 0
 1779 0160 4122     		mov	r2, #65
 1780 0162 A354     		strb	r3, [r4, r2]
 729:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 1781              		.loc 1 729 0
 1782 0164 0023     		mov	r3, #0
 1783 0166 4222     		mov	r2, #66
 1784 0168 A354     		strb	r3, [r4, r2]
 732:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 1785              		.loc 1 732 0
 1786 016a 4022     		mov	r2, #64
 1787 016c A354     		strb	r3, [r4, r2]
 734:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
 1788              		.loc 1 734 0
 1789 016e 0AE0     		b	.L120
 1790              	.LVL148:
 1791              	.L129:
 738:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
ARM GAS  /tmp/cchP46LN.s 			page 121


 1792              		.loc 1 738 0
 1793 0170 0220     		mov	r0, #2
 1794 0172 08E0     		b	.L120
 1795              	.LVL149:
 1796              	.L130:
 636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 1797              		.loc 1 636 0
 1798 0174 0220     		mov	r0, #2
 1799 0176 06E0     		b	.L120
 1800              	.LVL150:
 1801              	.L131:
 643:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_TIMEOUT;
 1802              		.loc 1 643 0
 1803 0178 0320     		mov	r0, #3
 1804 017a 04E0     		b	.L120
 1805              	.LVL151:
 1806              	.L132:
 679:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           return HAL_TIMEOUT;
 1807              		.loc 1 679 0
 1808 017c 0320     		mov	r0, #3
 1809 017e 02E0     		b	.L120
 1810              	.L133:
 692:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           return HAL_TIMEOUT;
 1811              		.loc 1 692 0
 1812 0180 0320     		mov	r0, #3
 1813 0182 00E0     		b	.L120
 1814              	.L134:
 718:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_TIMEOUT;
 1815              		.loc 1 718 0
 1816 0184 0320     		mov	r0, #3
 1817              	.LVL152:
 1818              	.L120:
 740:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 1819              		.loc 1 740 0
 1820 0186 03B0     		add	sp, sp, #12
 1821              		@ sp needed
 1822              	.LVL153:
 1823 0188 0CBC     		pop	{r2, r3}
 1824 018a 9046     		mov	r8, r2
 1825 018c 9946     		mov	r9, r3
 1826 018e F0BD     		pop	{r4, r5, r6, r7, pc}
 1827              	.L138:
 1828              		.align	2
 1829              	.L137:
 1830 0190 00E800FE 		.word	-33495040
 1831              		.cfi_endproc
 1832              	.LFE40:
 1834              		.section	.text.HAL_I2C_Master_Receive,"ax",%progbits
 1835              		.align	2
 1836              		.global	HAL_I2C_Master_Receive
 1837              		.code	16
 1838              		.thumb_func
 1840              	HAL_I2C_Master_Receive:
 1841              	.LFB41:
 754:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 1842              		.loc 1 754 0
 1843              		.cfi_startproc
ARM GAS  /tmp/cchP46LN.s 			page 122


 1844              	.LVL154:
 1845 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1846              	.LCFI20:
 1847              		.cfi_def_cfa_offset 20
 1848              		.cfi_offset 4, -20
 1849              		.cfi_offset 5, -16
 1850              		.cfi_offset 6, -12
 1851              		.cfi_offset 7, -8
 1852              		.cfi_offset 14, -4
 1853 0002 4F46     		mov	r7, r9
 1854 0004 4646     		mov	r6, r8
 1855 0006 C0B4     		push	{r6, r7}
 1856              	.LCFI21:
 1857              		.cfi_def_cfa_offset 28
 1858              		.cfi_offset 8, -28
 1859              		.cfi_offset 9, -24
 1860 0008 83B0     		sub	sp, sp, #12
 1861              	.LCFI22:
 1862              		.cfi_def_cfa_offset 40
 1863 000a 041C     		mov	r4, r0
 1864 000c 0D1C     		mov	r5, r1
 1865 000e 171C     		mov	r7, r2
 1866 0010 1E1C     		mov	r6, r3
 1867              	.LVL155:
 757:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 1868              		.loc 1 757 0
 1869 0012 4120     		mov	r0, #65
 1870              	.LVL156:
 1871 0014 205C     		ldrb	r0, [r4, r0]
 1872 0016 2028     		cmp	r0, #32
 1873 0018 00D0     		beq	.LCB1913
 1874 001a A9E0     		b	.L149	@long jump
 1875              	.LCB1913:
 760:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 1876              		.loc 1 760 0
 1877 001c 4023     		mov	r3, #64
 1878              	.LVL157:
 1879 001e E35C     		ldrb	r3, [r4, r3]
 1880 0020 012B     		cmp	r3, #1
 1881 0022 00D1     		bne	.LCB1918
 1882 0024 A6E0     		b	.L150	@long jump
 1883              	.LCB1918:
 760:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 1884              		.loc 1 760 0 is_stmt 0 discriminator 2
 1885 0026 0122     		mov	r2, #1
 1886              	.LVL158:
 1887 0028 4023     		mov	r3, #64
 1888 002a E254     		strb	r2, [r4, r3]
 763:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     tickstart = HAL_GetTick();
 1889              		.loc 1 763 0 is_stmt 1 discriminator 2
 1890 002c FFF7FEFF 		bl	HAL_GetTick
 1891              	.LVL159:
 1892 0030 8046     		mov	r8, r0
 1893              	.LVL160:
 765:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 1894              		.loc 1 765 0 discriminator 2
 1895 0032 0090     		str	r0, [sp]
ARM GAS  /tmp/cchP46LN.s 			page 123


 1896 0034 201C     		mov	r0, r4
 1897              	.LVL161:
 1898 0036 8021     		mov	r1, #128
 1899 0038 0902     		lsl	r1, r1, #8
 1900 003a 0122     		mov	r2, #1
 1901 003c 1923     		mov	r3, #25
 1902 003e FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1903              	.LVL162:
 1904 0042 0028     		cmp	r0, #0
 1905 0044 00D0     		beq	.LCB1938
 1906 0046 97E0     		b	.L151	@long jump
 1907              	.LCB1938:
 770:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 1908              		.loc 1 770 0
 1909 0048 2222     		mov	r2, #34
 1910 004a 4123     		mov	r3, #65
 1911 004c E254     		strb	r2, [r4, r3]
 771:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 1912              		.loc 1 771 0
 1913 004e 1022     		mov	r2, #16
 1914 0050 4223     		mov	r3, #66
 1915 0052 E254     		strb	r2, [r4, r3]
 772:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 1916              		.loc 1 772 0
 1917 0054 0023     		mov	r3, #0
 1918 0056 6364     		str	r3, [r4, #68]
 775:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
 1919              		.loc 1 775 0
 1920 0058 6762     		str	r7, [r4, #36]
 776:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount = Size;
 1921              		.loc 1 776 0
 1922 005a 6685     		strh	r6, [r4, #42]
 777:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 1923              		.loc 1 777 0
 1924 005c 6363     		str	r3, [r4, #52]
 781:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
 1925              		.loc 1 781 0
 1926 005e 638D     		ldrh	r3, [r4, #42]
 1927 0060 9BB2     		uxth	r3, r3
 1928 0062 FF2B     		cmp	r3, #255
 1929 0064 0CD9     		bls	.L141
 783:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 1930              		.loc 1 783 0
 1931 0066 FF23     		mov	r3, #255
 1932 0068 2385     		strh	r3, [r4, #40]
 784:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_START_READ
 1933              		.loc 1 784 0
 1934 006a 9023     		mov	r3, #144
 1935 006c 9B01     		lsl	r3, r3, #6
 1936 006e 0093     		str	r3, [sp]
 1937 0070 201C     		mov	r0, r4
 1938 0072 291C     		mov	r1, r5
 1939 0074 FF22     		mov	r2, #255
 1940 0076 8023     		mov	r3, #128
 1941 0078 5B04     		lsl	r3, r3, #17
 1942 007a FFF7FEFF 		bl	I2C_TransferConfig
 1943              	.LVL163:
ARM GAS  /tmp/cchP46LN.s 			page 124


 1944 007e 51E0     		b	.L156
 1945              	.L141:
 788:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 1946              		.loc 1 788 0
 1947 0080 628D     		ldrh	r2, [r4, #42]
 1948 0082 92B2     		uxth	r2, r2
 1949 0084 2285     		strh	r2, [r4, #40]
 789:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_REA
 1950              		.loc 1 789 0
 1951 0086 D2B2     		uxtb	r2, r2
 1952 0088 9023     		mov	r3, #144
 1953 008a 9B01     		lsl	r3, r3, #6
 1954 008c 0093     		str	r3, [sp]
 1955 008e 201C     		mov	r0, r4
 1956 0090 291C     		mov	r1, r5
 1957 0092 8023     		mov	r3, #128
 1958 0094 9B04     		lsl	r3, r3, #18
 1959 0096 FFF7FEFF 		bl	I2C_TransferConfig
 1960              	.LVL164:
 1961 009a 43E0     		b	.L156
 1962              	.LVL165:
 1963              	.L147:
 795:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 1964              		.loc 1 795 0
 1965 009c 201C     		mov	r0, r4
 1966 009e 0A99     		ldr	r1, [sp, #40]
 1967 00a0 4246     		mov	r2, r8
 1968 00a2 FFF7FEFF 		bl	I2C_WaitOnRXNEFlagUntilTimeout
 1969              	.LVL166:
 1970 00a6 0028     		cmp	r0, #0
 1971 00a8 04D0     		beq	.L144
 797:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 1972              		.loc 1 797 0
 1973 00aa 636C     		ldr	r3, [r4, #68]
 1974 00ac 042B     		cmp	r3, #4
 1975 00ae 65D1     		bne	.L152
 799:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           return HAL_ERROR;
 1976              		.loc 1 799 0
 1977 00b0 0120     		mov	r0, #1
 1978 00b2 68E0     		b	.L140
 1979              	.L144:
 808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
 1980              		.loc 1 808 0
 1981 00b4 616A     		ldr	r1, [r4, #36]
 1982 00b6 4B1C     		add	r3, r1, #1
 1983 00b8 6362     		str	r3, [r4, #36]
 1984 00ba 2368     		ldr	r3, [r4]
 1985 00bc 5B6A     		ldr	r3, [r3, #36]
 1986 00be 0B70     		strb	r3, [r1]
 809:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize--;
 1987              		.loc 1 809 0
 1988 00c0 218D     		ldrh	r1, [r4, #40]
 1989 00c2 0139     		sub	r1, r1, #1
 1990 00c4 89B2     		uxth	r1, r1
 1991 00c6 2185     		strh	r1, [r4, #40]
 810:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferCount--;
 1992              		.loc 1 810 0
ARM GAS  /tmp/cchP46LN.s 			page 125


 1993 00c8 638D     		ldrh	r3, [r4, #42]
 1994 00ca 013B     		sub	r3, r3, #1
 1995 00cc 9BB2     		uxth	r3, r3
 1996 00ce 6385     		strh	r3, [r4, #42]
 812:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if((hi2c->XferSize == 0U) && (hi2c->XferCount != 0U))
 1997              		.loc 1 812 0
 1998 00d0 0029     		cmp	r1, #0
 1999 00d2 2DD1     		bne	.L155
 812:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if((hi2c->XferSize == 0U) && (hi2c->XferCount != 0U))
 2000              		.loc 1 812 0 is_stmt 0 discriminator 1
 2001 00d4 638D     		ldrh	r3, [r4, #42]
 2002 00d6 9BB2     		uxth	r3, r3
 2003 00d8 002B     		cmp	r3, #0
 2004 00da 29D0     		beq	.L155
 815:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 2005              		.loc 1 815 0 is_stmt 1
 2006 00dc 4346     		mov	r3, r8
 2007 00de 0093     		str	r3, [sp]
 2008 00e0 201C     		mov	r0, r4
 2009 00e2 8021     		mov	r1, #128
 2010 00e4 0022     		mov	r2, #0
 2011 00e6 0A9B     		ldr	r3, [sp, #40]
 2012 00e8 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2013              	.LVL167:
 2014 00ec 0028     		cmp	r0, #0
 2015 00ee 47D1     		bne	.L153
 820:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         if(hi2c->XferCount > MAX_NBYTE_SIZE)
 2016              		.loc 1 820 0
 2017 00f0 638D     		ldrh	r3, [r4, #42]
 2018 00f2 9BB2     		uxth	r3, r3
 2019 00f4 FF2B     		cmp	r3, #255
 2020 00f6 09D9     		bls	.L146
 822:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
 2021              		.loc 1 822 0
 2022 00f8 2685     		strh	r6, [r4, #40]
 823:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 2023              		.loc 1 823 0
 2024 00fa 0023     		mov	r3, #0
 2025 00fc 0093     		str	r3, [sp]
 2026 00fe 201C     		mov	r0, r4
 2027 0100 291C     		mov	r1, r5
 2028 0102 321C     		mov	r2, r6
 2029 0104 3B1C     		mov	r3, r7
 2030 0106 FFF7FEFF 		bl	I2C_TransferConfig
 2031              	.LVL168:
 2032 010a 11E0     		b	.L155
 2033              	.L146:
 827:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
 2034              		.loc 1 827 0
 2035 010c 628D     		ldrh	r2, [r4, #42]
 2036 010e 92B2     		uxth	r2, r2
 2037 0110 2285     		strh	r2, [r4, #40]
 828:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 2038              		.loc 1 828 0
 2039 0112 D2B2     		uxtb	r2, r2
 2040 0114 0023     		mov	r3, #0
 2041 0116 0093     		str	r3, [sp]
ARM GAS  /tmp/cchP46LN.s 			page 126


 2042 0118 201C     		mov	r0, r4
 2043 011a 291C     		mov	r1, r5
 2044 011c 4B46     		mov	r3, r9
 2045 011e FFF7FEFF 		bl	I2C_TransferConfig
 2046              	.LVL169:
 2047 0122 05E0     		b	.L155
 2048              	.LVL170:
 2049              	.L156:
 828:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 2050              		.loc 1 828 0 is_stmt 0 discriminator 1
 2051 0124 8023     		mov	r3, #128
 2052 0126 9B04     		lsl	r3, r3, #18
 2053 0128 9946     		mov	r9, r3
 822:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
 2054              		.loc 1 822 0 is_stmt 1 discriminator 1
 2055 012a FF26     		mov	r6, #255
 823:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 2056              		.loc 1 823 0 discriminator 1
 2057 012c 8027     		mov	r7, #128
 2058              	.LVL171:
 2059 012e 7F04     		lsl	r7, r7, #17
 2060              	.L155:
 792:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     while(hi2c->XferCount > 0U)
 2061              		.loc 1 792 0 discriminator 1
 2062 0130 638D     		ldrh	r3, [r4, #42]
 2063 0132 9BB2     		uxth	r3, r3
 2064 0134 002B     		cmp	r3, #0
 2065 0136 B1D1     		bne	.L147
 835:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 2066              		.loc 1 835 0
 2067 0138 201C     		mov	r0, r4
 2068 013a 0A99     		ldr	r1, [sp, #40]
 2069 013c 4246     		mov	r2, r8
 2070 013e FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 2071              	.LVL172:
 2072 0142 0028     		cmp	r0, #0
 2073 0144 04D0     		beq	.L148
 837:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 2074              		.loc 1 837 0
 2075 0146 636C     		ldr	r3, [r4, #68]
 2076 0148 042B     		cmp	r3, #4
 2077 014a 1BD1     		bne	.L154
 839:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_ERROR;
 2078              		.loc 1 839 0
 2079 014c 0120     		mov	r0, #1
 2080 014e 1AE0     		b	.L140
 2081              	.L148:
 848:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 2082              		.loc 1 848 0
 2083 0150 2268     		ldr	r2, [r4]
 2084 0152 2023     		mov	r3, #32
 2085 0154 D361     		str	r3, [r2, #28]
 851:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
 2086              		.loc 1 851 0
 2087 0156 2268     		ldr	r2, [r4]
 2088 0158 5568     		ldr	r5, [r2, #4]
 2089 015a 0D49     		ldr	r1, .L157
ARM GAS  /tmp/cchP46LN.s 			page 127


 2090 015c 2940     		and	r1, r5
 2091 015e 5160     		str	r1, [r2, #4]
 853:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 2092              		.loc 1 853 0
 2093 0160 4122     		mov	r2, #65
 2094 0162 A354     		strb	r3, [r4, r2]
 854:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 2095              		.loc 1 854 0
 2096 0164 0023     		mov	r3, #0
 2097 0166 4222     		mov	r2, #66
 2098 0168 A354     		strb	r3, [r4, r2]
 857:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 2099              		.loc 1 857 0
 2100 016a 4022     		mov	r2, #64
 2101 016c A354     		strb	r3, [r4, r2]
 859:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
 2102              		.loc 1 859 0
 2103 016e 0AE0     		b	.L140
 2104              	.LVL173:
 2105              	.L149:
 863:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
 2106              		.loc 1 863 0
 2107 0170 0220     		mov	r0, #2
 2108 0172 08E0     		b	.L140
 2109              	.LVL174:
 2110              	.L150:
 760:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 2111              		.loc 1 760 0
 2112 0174 0220     		mov	r0, #2
 2113 0176 06E0     		b	.L140
 2114              	.LVL175:
 2115              	.L151:
 767:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_TIMEOUT;
 2116              		.loc 1 767 0
 2117 0178 0320     		mov	r0, #3
 2118 017a 04E0     		b	.L140
 2119              	.LVL176:
 2120              	.L152:
 803:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           return HAL_TIMEOUT;
 2121              		.loc 1 803 0
 2122 017c 0320     		mov	r0, #3
 2123 017e 02E0     		b	.L140
 2124              	.L153:
 817:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           return HAL_TIMEOUT;
 2125              		.loc 1 817 0
 2126 0180 0320     		mov	r0, #3
 2127 0182 00E0     		b	.L140
 2128              	.L154:
 843:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_TIMEOUT;
 2129              		.loc 1 843 0
 2130 0184 0320     		mov	r0, #3
 2131              	.LVL177:
 2132              	.L140:
 865:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 2133              		.loc 1 865 0
 2134 0186 03B0     		add	sp, sp, #12
 2135              		@ sp needed
ARM GAS  /tmp/cchP46LN.s 			page 128


 2136              	.LVL178:
 2137 0188 0CBC     		pop	{r2, r3}
 2138 018a 9046     		mov	r8, r2
 2139 018c 9946     		mov	r9, r3
 2140 018e F0BD     		pop	{r4, r5, r6, r7, pc}
 2141              	.L158:
 2142              		.align	2
 2143              	.L157:
 2144 0190 00E800FE 		.word	-33495040
 2145              		.cfi_endproc
 2146              	.LFE41:
 2148              		.section	.text.HAL_I2C_Slave_Transmit,"ax",%progbits
 2149              		.align	2
 2150              		.global	HAL_I2C_Slave_Transmit
 2151              		.code	16
 2152              		.thumb_func
 2154              	HAL_I2C_Slave_Transmit:
 2155              	.LFB42:
 877:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 2156              		.loc 1 877 0
 2157              		.cfi_startproc
 2158              	.LVL179:
 2159 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2160              	.LCFI23:
 2161              		.cfi_def_cfa_offset 20
 2162              		.cfi_offset 4, -20
 2163              		.cfi_offset 5, -16
 2164              		.cfi_offset 6, -12
 2165              		.cfi_offset 7, -8
 2166              		.cfi_offset 14, -4
 2167 0002 4746     		mov	r7, r8
 2168 0004 80B4     		push	{r7}
 2169              	.LCFI24:
 2170              		.cfi_def_cfa_offset 24
 2171              		.cfi_offset 8, -24
 2172 0006 82B0     		sub	sp, sp, #8
 2173              	.LCFI25:
 2174              		.cfi_def_cfa_offset 32
 2175 0008 041C     		mov	r4, r0
 2176 000a 0D1C     		mov	r5, r1
 2177 000c 161C     		mov	r6, r2
 2178 000e 1F1C     		mov	r7, r3
 2179              	.LVL180:
 880:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 2180              		.loc 1 880 0
 2181 0010 4120     		mov	r0, #65
 2182              	.LVL181:
 2183 0012 205C     		ldrb	r0, [r4, r0]
 2184 0014 2028     		cmp	r0, #32
 2185 0016 00D0     		beq	.LCB2225
 2186 0018 B6E0     		b	.L169	@long jump
 2187              	.LCB2225:
 882:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 2188              		.loc 1 882 0
 2189 001a 0029     		cmp	r1, #0
 2190 001c 00D1     		bne	.LCB2227
 2191 001e B5E0     		b	.L170	@long jump
ARM GAS  /tmp/cchP46LN.s 			page 129


 2192              	.LCB2227:
 882:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 2193              		.loc 1 882 0 is_stmt 0 discriminator 1
 2194 0020 002A     		cmp	r2, #0
 2195 0022 00D1     		bne	.LCB2229
 2196 0024 B4E0     		b	.L171	@long jump
 2197              	.LCB2229:
 887:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 2198              		.loc 1 887 0 is_stmt 1
 2199 0026 4023     		mov	r3, #64
 2200              	.LVL182:
 2201 0028 E35C     		ldrb	r3, [r4, r3]
 2202 002a 012B     		cmp	r3, #1
 2203 002c 00D1     		bne	.LCB2234
 2204 002e B1E0     		b	.L172	@long jump
 2205              	.LCB2234:
 887:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 2206              		.loc 1 887 0 is_stmt 0 discriminator 2
 2207 0030 0122     		mov	r2, #1
 2208              	.LVL183:
 2209 0032 4023     		mov	r3, #64
 2210 0034 E254     		strb	r2, [r4, r3]
 890:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     tickstart = HAL_GetTick();
 2211              		.loc 1 890 0 is_stmt 1 discriminator 2
 2212 0036 FFF7FEFF 		bl	HAL_GetTick
 2213              	.LVL184:
 2214 003a 8046     		mov	r8, r0
 2215              	.LVL185:
 892:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 2216              		.loc 1 892 0 discriminator 2
 2217 003c 2122     		mov	r2, #33
 2218 003e 4123     		mov	r3, #65
 2219 0040 E254     		strb	r2, [r4, r3]
 893:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 2220              		.loc 1 893 0 discriminator 2
 2221 0042 2022     		mov	r2, #32
 2222 0044 4223     		mov	r3, #66
 2223 0046 E254     		strb	r2, [r4, r3]
 894:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 2224              		.loc 1 894 0 discriminator 2
 2225 0048 0023     		mov	r3, #0
 2226 004a 6364     		str	r3, [r4, #68]
 897:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
 2227              		.loc 1 897 0 discriminator 2
 2228 004c 6562     		str	r5, [r4, #36]
 898:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount = Size;
 2229              		.loc 1 898 0 discriminator 2
 2230 004e 6685     		strh	r6, [r4, #42]
 899:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 2231              		.loc 1 899 0 discriminator 2
 2232 0050 6363     		str	r3, [r4, #52]
 902:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
 2233              		.loc 1 902 0 discriminator 2
 2234 0052 2368     		ldr	r3, [r4]
 2235 0054 5968     		ldr	r1, [r3, #4]
 2236 0056 544A     		ldr	r2, .L176
 2237 0058 0A40     		and	r2, r1
ARM GAS  /tmp/cchP46LN.s 			page 130


 2238 005a 5A60     		str	r2, [r3, #4]
 905:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
 2239              		.loc 1 905 0 discriminator 2
 2240 005c 0090     		str	r0, [sp]
 2241 005e 201C     		mov	r0, r4
 2242              	.LVL186:
 2243 0060 0821     		mov	r1, #8
 2244 0062 0022     		mov	r2, #0
 2245 0064 3B1C     		mov	r3, r7
 2246 0066 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2247              	.LVL187:
 2248 006a 0028     		cmp	r0, #0
 2249 006c 07D0     		beq	.L161
 908:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
 2250              		.loc 1 908 0
 2251 006e 2368     		ldr	r3, [r4]
 2252 0070 5968     		ldr	r1, [r3, #4]
 2253 0072 8022     		mov	r2, #128
 2254 0074 1202     		lsl	r2, r2, #8
 2255 0076 0A43     		orr	r2, r1
 2256 0078 5A60     		str	r2, [r3, #4]
 909:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_TIMEOUT;
 2257              		.loc 1 909 0
 2258 007a 0320     		mov	r0, #3
 2259 007c 8FE0     		b	.L160
 2260              	.L161:
 913:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c,I2C_FLAG_ADDR);
 2261              		.loc 1 913 0
 2262 007e 2368     		ldr	r3, [r4]
 2263 0080 0822     		mov	r2, #8
 2264 0082 DA61     		str	r2, [r3, #28]
 916:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 2265              		.loc 1 916 0
 2266 0084 E368     		ldr	r3, [r4, #12]
 2267 0086 022B     		cmp	r3, #2
 2268 0088 14D1     		bne	.L162
 919:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
 2269              		.loc 1 919 0
 2270 008a 4346     		mov	r3, r8
 2271 008c 0093     		str	r3, [sp]
 2272 008e 201C     		mov	r0, r4
 2273 0090 0821     		mov	r1, #8
 2274 0092 0022     		mov	r2, #0
 2275 0094 3B1C     		mov	r3, r7
 2276 0096 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2277              	.LVL188:
 2278 009a 0028     		cmp	r0, #0
 2279 009c 07D0     		beq	.L163
 922:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
 2280              		.loc 1 922 0
 2281 009e 2368     		ldr	r3, [r4]
 2282 00a0 5968     		ldr	r1, [r3, #4]
 2283 00a2 8022     		mov	r2, #128
 2284 00a4 1202     		lsl	r2, r2, #8
 2285 00a6 0A43     		orr	r2, r1
 2286 00a8 5A60     		str	r2, [r3, #4]
 923:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_TIMEOUT;
ARM GAS  /tmp/cchP46LN.s 			page 131


 2287              		.loc 1 923 0
 2288 00aa 0320     		mov	r0, #3
 2289 00ac 77E0     		b	.L160
 2290              	.L163:
 927:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c,I2C_FLAG_ADDR);
 2291              		.loc 1 927 0
 2292 00ae 2368     		ldr	r3, [r4]
 2293 00b0 0822     		mov	r2, #8
 2294 00b2 DA61     		str	r2, [r3, #28]
 2295              	.L162:
 931:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_DIR, RESET, Timeout, tickstart) != HAL_OK)
 2296              		.loc 1 931 0
 2297 00b4 4346     		mov	r3, r8
 2298 00b6 0093     		str	r3, [sp]
 2299 00b8 201C     		mov	r0, r4
 2300 00ba 8021     		mov	r1, #128
 2301 00bc 4902     		lsl	r1, r1, #9
 2302 00be 0022     		mov	r2, #0
 2303 00c0 3B1C     		mov	r3, r7
 2304 00c2 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2305              	.LVL189:
 2306 00c6 0028     		cmp	r0, #0
 2307 00c8 23D0     		beq	.L175
 934:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
 2308              		.loc 1 934 0
 2309 00ca 2368     		ldr	r3, [r4]
 2310 00cc 5968     		ldr	r1, [r3, #4]
 2311 00ce 8022     		mov	r2, #128
 2312 00d0 1202     		lsl	r2, r2, #8
 2313 00d2 0A43     		orr	r2, r1
 2314 00d4 5A60     		str	r2, [r3, #4]
 935:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_TIMEOUT;
 2315              		.loc 1 935 0
 2316 00d6 0320     		mov	r0, #3
 2317 00d8 61E0     		b	.L160
 2318              	.L166:
 941:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 2319              		.loc 1 941 0
 2320 00da 201C     		mov	r0, r4
 2321 00dc 391C     		mov	r1, r7
 2322 00de 4246     		mov	r2, r8
 2323 00e0 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 2324              	.LVL190:
 2325 00e4 0028     		cmp	r0, #0
 2326 00e6 0AD0     		beq	.L165
 944:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
 2327              		.loc 1 944 0
 2328 00e8 2368     		ldr	r3, [r4]
 2329 00ea 5968     		ldr	r1, [r3, #4]
 2330 00ec 8022     		mov	r2, #128
 2331 00ee 1202     		lsl	r2, r2, #8
 2332 00f0 0A43     		orr	r2, r1
 2333 00f2 5A60     		str	r2, [r3, #4]
 946:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 2334              		.loc 1 946 0
 2335 00f4 636C     		ldr	r3, [r4, #68]
 2336 00f6 042B     		cmp	r3, #4
ARM GAS  /tmp/cchP46LN.s 			page 132


 2337 00f8 4ED1     		bne	.L173
 948:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           return HAL_ERROR;
 2338              		.loc 1 948 0
 2339 00fa 0120     		mov	r0, #1
 2340 00fc 4FE0     		b	.L160
 2341              	.L165:
 957:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Instance->TXDR = (*hi2c->pBuffPtr++);
 2342              		.loc 1 957 0
 2343 00fe 2268     		ldr	r2, [r4]
 2344 0100 636A     		ldr	r3, [r4, #36]
 2345 0102 591C     		add	r1, r3, #1
 2346 0104 6162     		str	r1, [r4, #36]
 2347 0106 1B78     		ldrb	r3, [r3]
 2348 0108 9362     		str	r3, [r2, #40]
 958:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferCount--;
 2349              		.loc 1 958 0
 2350 010a 638D     		ldrh	r3, [r4, #42]
 2351 010c 013B     		sub	r3, r3, #1
 2352 010e 9BB2     		uxth	r3, r3
 2353 0110 6385     		strh	r3, [r4, #42]
 2354              	.L175:
 938:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     while(hi2c->XferCount > 0U)
 2355              		.loc 1 938 0 discriminator 1
 2356 0112 638D     		ldrh	r3, [r4, #42]
 2357 0114 9BB2     		uxth	r3, r3
 2358 0116 002B     		cmp	r3, #0
 2359 0118 DFD1     		bne	.L166
 962:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 2360              		.loc 1 962 0
 2361 011a 201C     		mov	r0, r4
 2362 011c 391C     		mov	r1, r7
 2363 011e 4246     		mov	r2, r8
 2364 0120 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 2365              	.LVL191:
 2366 0124 0028     		cmp	r0, #0
 2367 0126 0AD0     		beq	.L167
 965:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
 2368              		.loc 1 965 0
 2369 0128 2368     		ldr	r3, [r4]
 2370 012a 5968     		ldr	r1, [r3, #4]
 2371 012c 8022     		mov	r2, #128
 2372 012e 1202     		lsl	r2, r2, #8
 2373 0130 0A43     		orr	r2, r1
 2374 0132 5A60     		str	r2, [r3, #4]
 967:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 2375              		.loc 1 967 0
 2376 0134 636C     		ldr	r3, [r4, #68]
 2377 0136 042B     		cmp	r3, #4
 2378 0138 30D1     		bne	.L174
 971:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** 	hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 2379              		.loc 1 971 0
 2380 013a 0023     		mov	r3, #0
 2381 013c 6364     		str	r3, [r4, #68]
 2382              	.L167:
 980:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c,I2C_FLAG_STOPF);
 2383              		.loc 1 980 0
 2384 013e 2368     		ldr	r3, [r4]
ARM GAS  /tmp/cchP46LN.s 			page 133


 2385 0140 2022     		mov	r2, #32
 2386 0142 DA61     		str	r2, [r3, #28]
 983:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, Timeout, tickstart) != HAL_OK)
 2387              		.loc 1 983 0
 2388 0144 4346     		mov	r3, r8
 2389 0146 0093     		str	r3, [sp]
 2390 0148 201C     		mov	r0, r4
 2391 014a 8021     		mov	r1, #128
 2392 014c 0902     		lsl	r1, r1, #8
 2393 014e 0122     		mov	r2, #1
 2394 0150 3B1C     		mov	r3, r7
 2395 0152 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2396              	.LVL192:
 2397 0156 0028     		cmp	r0, #0
 2398 0158 07D0     		beq	.L168
 986:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
 2399              		.loc 1 986 0
 2400 015a 2368     		ldr	r3, [r4]
 2401 015c 5968     		ldr	r1, [r3, #4]
 2402 015e 8022     		mov	r2, #128
 2403 0160 1202     		lsl	r2, r2, #8
 2404 0162 0A43     		orr	r2, r1
 2405 0164 5A60     		str	r2, [r3, #4]
 987:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_TIMEOUT;
 2406              		.loc 1 987 0
 2407 0166 0320     		mov	r0, #3
 2408 0168 19E0     		b	.L160
 2409              	.L168:
 991:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->CR2 |= I2C_CR2_NACK;
 2410              		.loc 1 991 0
 2411 016a 2368     		ldr	r3, [r4]
 2412 016c 5968     		ldr	r1, [r3, #4]
 2413 016e 8022     		mov	r2, #128
 2414 0170 1202     		lsl	r2, r2, #8
 2415 0172 0A43     		orr	r2, r1
 2416 0174 5A60     		str	r2, [r3, #4]
 993:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 2417              		.loc 1 993 0
 2418 0176 2022     		mov	r2, #32
 2419 0178 4123     		mov	r3, #65
 2420 017a E254     		strb	r2, [r4, r3]
 994:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 2421              		.loc 1 994 0
 2422 017c 0023     		mov	r3, #0
 2423 017e 4222     		mov	r2, #66
 2424 0180 A354     		strb	r3, [r4, r2]
 997:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 2425              		.loc 1 997 0
 2426 0182 4022     		mov	r2, #64
 2427 0184 A354     		strb	r3, [r4, r2]
 999:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
 2428              		.loc 1 999 0
 2429 0186 0AE0     		b	.L160
 2430              	.LVL193:
 2431              	.L169:
1003:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
 2432              		.loc 1 1003 0
ARM GAS  /tmp/cchP46LN.s 			page 134


 2433 0188 0220     		mov	r0, #2
 2434 018a 08E0     		b	.L160
 2435              	.L170:
 884:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return  HAL_ERROR;
 2436              		.loc 1 884 0
 2437 018c 0120     		mov	r0, #1
 2438 018e 06E0     		b	.L160
 2439              	.L171:
 2440 0190 0120     		mov	r0, #1
 2441 0192 04E0     		b	.L160
 2442              	.LVL194:
 2443              	.L172:
 887:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 2444              		.loc 1 887 0
 2445 0194 0220     		mov	r0, #2
 2446 0196 02E0     		b	.L160
 2447              	.LVL195:
 2448              	.L173:
 952:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           return HAL_TIMEOUT;
 2449              		.loc 1 952 0
 2450 0198 0320     		mov	r0, #3
 2451 019a 00E0     		b	.L160
 2452              	.L174:
 975:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_TIMEOUT;
 2453              		.loc 1 975 0
 2454 019c 0320     		mov	r0, #3
 2455              	.LVL196:
 2456              	.L160:
1005:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 2457              		.loc 1 1005 0
 2458 019e 02B0     		add	sp, sp, #8
 2459              		@ sp needed
 2460              	.LVL197:
 2461              	.LVL198:
 2462              	.LVL199:
 2463 01a0 04BC     		pop	{r2}
 2464 01a2 9046     		mov	r8, r2
 2465 01a4 F0BD     		pop	{r4, r5, r6, r7, pc}
 2466              	.L177:
 2467 01a6 C046     		.align	2
 2468              	.L176:
 2469 01a8 FF7FFFFF 		.word	-32769
 2470              		.cfi_endproc
 2471              	.LFE42:
 2473              		.section	.text.HAL_I2C_Slave_Receive,"ax",%progbits
 2474              		.align	2
 2475              		.global	HAL_I2C_Slave_Receive
 2476              		.code	16
 2477              		.thumb_func
 2479              	HAL_I2C_Slave_Receive:
 2480              	.LFB43:
1017:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 2481              		.loc 1 1017 0
 2482              		.cfi_startproc
 2483              	.LVL200:
 2484 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2485              	.LCFI26:
ARM GAS  /tmp/cchP46LN.s 			page 135


 2486              		.cfi_def_cfa_offset 20
 2487              		.cfi_offset 4, -20
 2488              		.cfi_offset 5, -16
 2489              		.cfi_offset 6, -12
 2490              		.cfi_offset 7, -8
 2491              		.cfi_offset 14, -4
 2492 0002 4746     		mov	r7, r8
 2493 0004 80B4     		push	{r7}
 2494              	.LCFI27:
 2495              		.cfi_def_cfa_offset 24
 2496              		.cfi_offset 8, -24
 2497 0006 82B0     		sub	sp, sp, #8
 2498              	.LCFI28:
 2499              		.cfi_def_cfa_offset 32
 2500 0008 041C     		mov	r4, r0
 2501 000a 0D1C     		mov	r5, r1
 2502 000c 161C     		mov	r6, r2
 2503 000e 1F1C     		mov	r7, r3
 2504              	.LVL201:
1020:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 2505              		.loc 1 1020 0
 2506 0010 4120     		mov	r0, #65
 2507              	.LVL202:
 2508 0012 205C     		ldrb	r0, [r4, r0]
 2509 0014 2028     		cmp	r0, #32
 2510 0016 00D0     		beq	.LCB2544
 2511 0018 ABE0     		b	.L187	@long jump
 2512              	.LCB2544:
1022:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 2513              		.loc 1 1022 0
 2514 001a 0029     		cmp	r1, #0
 2515 001c 00D1     		bne	.LCB2546
 2516 001e AAE0     		b	.L188	@long jump
 2517              	.LCB2546:
1022:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 2518              		.loc 1 1022 0 is_stmt 0 discriminator 1
 2519 0020 002A     		cmp	r2, #0
 2520 0022 00D1     		bne	.LCB2548
 2521 0024 A9E0     		b	.L189	@long jump
 2522              	.LCB2548:
1027:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 2523              		.loc 1 1027 0 is_stmt 1
 2524 0026 4023     		mov	r3, #64
 2525              	.LVL203:
 2526 0028 E35C     		ldrb	r3, [r4, r3]
 2527 002a 012B     		cmp	r3, #1
 2528 002c 00D1     		bne	.LCB2553
 2529 002e A6E0     		b	.L190	@long jump
 2530              	.LCB2553:
1027:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 2531              		.loc 1 1027 0 is_stmt 0 discriminator 2
 2532 0030 0122     		mov	r2, #1
 2533              	.LVL204:
 2534 0032 4023     		mov	r3, #64
 2535 0034 E254     		strb	r2, [r4, r3]
1030:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     tickstart = HAL_GetTick();
 2536              		.loc 1 1030 0 is_stmt 1 discriminator 2
ARM GAS  /tmp/cchP46LN.s 			page 136


 2537 0036 FFF7FEFF 		bl	HAL_GetTick
 2538              	.LVL205:
 2539 003a 8046     		mov	r8, r0
 2540              	.LVL206:
1032:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 2541              		.loc 1 1032 0 discriminator 2
 2542 003c 2222     		mov	r2, #34
 2543 003e 4123     		mov	r3, #65
 2544 0040 E254     		strb	r2, [r4, r3]
1033:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 2545              		.loc 1 1033 0 discriminator 2
 2546 0042 2022     		mov	r2, #32
 2547 0044 4223     		mov	r3, #66
 2548 0046 E254     		strb	r2, [r4, r3]
1034:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 2549              		.loc 1 1034 0 discriminator 2
 2550 0048 0023     		mov	r3, #0
 2551 004a 6364     		str	r3, [r4, #68]
1037:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
 2552              		.loc 1 1037 0 discriminator 2
 2553 004c 6562     		str	r5, [r4, #36]
1038:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount = Size;
 2554              		.loc 1 1038 0 discriminator 2
 2555 004e 6685     		strh	r6, [r4, #42]
1039:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 2556              		.loc 1 1039 0 discriminator 2
 2557 0050 6363     		str	r3, [r4, #52]
1042:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
 2558              		.loc 1 1042 0 discriminator 2
 2559 0052 2368     		ldr	r3, [r4]
 2560 0054 5968     		ldr	r1, [r3, #4]
 2561 0056 4E4A     		ldr	r2, .L194
 2562 0058 0A40     		and	r2, r1
 2563 005a 5A60     		str	r2, [r3, #4]
1045:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
 2564              		.loc 1 1045 0 discriminator 2
 2565 005c 0090     		str	r0, [sp]
 2566 005e 201C     		mov	r0, r4
 2567              	.LVL207:
 2568 0060 0821     		mov	r1, #8
 2569 0062 0022     		mov	r2, #0
 2570 0064 3B1C     		mov	r3, r7
 2571 0066 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2572              	.LVL208:
 2573 006a 0028     		cmp	r0, #0
 2574 006c 07D0     		beq	.L180
1048:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
 2575              		.loc 1 1048 0
 2576 006e 2368     		ldr	r3, [r4]
 2577 0070 5968     		ldr	r1, [r3, #4]
 2578 0072 8022     		mov	r2, #128
 2579 0074 1202     		lsl	r2, r2, #8
 2580 0076 0A43     		orr	r2, r1
 2581 0078 5A60     		str	r2, [r3, #4]
1049:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_TIMEOUT;
 2582              		.loc 1 1049 0
 2583 007a 0320     		mov	r0, #3
ARM GAS  /tmp/cchP46LN.s 			page 137


 2584 007c 84E0     		b	.L179
 2585              	.L180:
1053:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c,I2C_FLAG_ADDR);
 2586              		.loc 1 1053 0
 2587 007e 2368     		ldr	r3, [r4]
 2588 0080 0822     		mov	r2, #8
 2589 0082 DA61     		str	r2, [r3, #28]
1056:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_DIR, SET, Timeout, tickstart) != HAL_OK)
 2590              		.loc 1 1056 0
 2591 0084 4146     		mov	r1, r8
 2592 0086 0091     		str	r1, [sp]
 2593 0088 201C     		mov	r0, r4
 2594 008a 8021     		mov	r1, #128
 2595 008c 4902     		lsl	r1, r1, #9
 2596 008e 0122     		mov	r2, #1
 2597 0090 3B1C     		mov	r3, r7
 2598 0092 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2599              	.LVL209:
 2600 0096 0028     		cmp	r0, #0
 2601 0098 30D0     		beq	.L193
1059:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
 2602              		.loc 1 1059 0
 2603 009a 2368     		ldr	r3, [r4]
 2604 009c 5968     		ldr	r1, [r3, #4]
 2605 009e 8022     		mov	r2, #128
 2606 00a0 1202     		lsl	r2, r2, #8
 2607 00a2 0A43     		orr	r2, r1
 2608 00a4 5A60     		str	r2, [r3, #4]
1060:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_TIMEOUT;
 2609              		.loc 1 1060 0
 2610 00a6 0320     		mov	r0, #3
 2611 00a8 6EE0     		b	.L179
 2612              	.L184:
1066:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 2613              		.loc 1 1066 0
 2614 00aa 201C     		mov	r0, r4
 2615 00ac 391C     		mov	r1, r7
 2616 00ae 4246     		mov	r2, r8
 2617 00b0 FFF7FEFF 		bl	I2C_WaitOnRXNEFlagUntilTimeout
 2618              	.LVL210:
 2619 00b4 0028     		cmp	r0, #0
 2620 00b6 17D0     		beq	.L182
1069:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
 2621              		.loc 1 1069 0
 2622 00b8 2368     		ldr	r3, [r4]
 2623 00ba 5968     		ldr	r1, [r3, #4]
 2624 00bc 8022     		mov	r2, #128
 2625 00be 1202     		lsl	r2, r2, #8
 2626 00c0 0A43     		orr	r2, r1
 2627 00c2 5A60     		str	r2, [r3, #4]
1072:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 2628              		.loc 1 1072 0
 2629 00c4 2268     		ldr	r2, [r4]
 2630 00c6 9369     		ldr	r3, [r2, #24]
 2631 00c8 5907     		lsl	r1, r3, #29
 2632 00ca 08D5     		bpl	.L183
1075:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
ARM GAS  /tmp/cchP46LN.s 			page 138


 2633              		.loc 1 1075 0
 2634 00cc 636A     		ldr	r3, [r4, #36]
 2635 00ce 591C     		add	r1, r3, #1
 2636 00d0 6162     		str	r1, [r4, #36]
 2637 00d2 526A     		ldr	r2, [r2, #36]
 2638 00d4 1A70     		strb	r2, [r3]
1076:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           hi2c->XferCount--;
 2639              		.loc 1 1076 0
 2640 00d6 638D     		ldrh	r3, [r4, #42]
 2641 00d8 013B     		sub	r3, r3, #1
 2642 00da 9BB2     		uxth	r3, r3
 2643 00dc 6385     		strh	r3, [r4, #42]
 2644              	.L183:
1079:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         if(hi2c->ErrorCode == HAL_I2C_ERROR_TIMEOUT)
 2645              		.loc 1 1079 0
 2646 00de 636C     		ldr	r3, [r4, #68]
 2647 00e0 202B     		cmp	r3, #32
 2648 00e2 4ED1     		bne	.L191
1081:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           return HAL_TIMEOUT;
 2649              		.loc 1 1081 0
 2650 00e4 0320     		mov	r0, #3
 2651 00e6 4FE0     		b	.L179
 2652              	.L182:
1090:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
 2653              		.loc 1 1090 0
 2654 00e8 636A     		ldr	r3, [r4, #36]
 2655 00ea 5A1C     		add	r2, r3, #1
 2656 00ec 6262     		str	r2, [r4, #36]
 2657 00ee 2268     		ldr	r2, [r4]
 2658 00f0 526A     		ldr	r2, [r2, #36]
 2659 00f2 1A70     		strb	r2, [r3]
1091:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferCount--;
 2660              		.loc 1 1091 0
 2661 00f4 638D     		ldrh	r3, [r4, #42]
 2662 00f6 013B     		sub	r3, r3, #1
 2663 00f8 9BB2     		uxth	r3, r3
 2664 00fa 6385     		strh	r3, [r4, #42]
 2665              	.L193:
1063:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     while(hi2c->XferCount > 0U)
 2666              		.loc 1 1063 0 discriminator 1
 2667 00fc 638D     		ldrh	r3, [r4, #42]
 2668 00fe 9BB2     		uxth	r3, r3
 2669 0100 002B     		cmp	r3, #0
 2670 0102 D2D1     		bne	.L184
1095:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 2671              		.loc 1 1095 0
 2672 0104 201C     		mov	r0, r4
 2673 0106 391C     		mov	r1, r7
 2674 0108 4246     		mov	r2, r8
 2675 010a FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 2676              	.LVL211:
 2677 010e 0028     		cmp	r0, #0
 2678 0110 0AD0     		beq	.L185
1098:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
 2679              		.loc 1 1098 0
 2680 0112 2368     		ldr	r3, [r4]
 2681 0114 5968     		ldr	r1, [r3, #4]
ARM GAS  /tmp/cchP46LN.s 			page 139


 2682 0116 8022     		mov	r2, #128
 2683 0118 1202     		lsl	r2, r2, #8
 2684 011a 0A43     		orr	r2, r1
 2685 011c 5A60     		str	r2, [r3, #4]
1100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 2686              		.loc 1 1100 0
 2687 011e 636C     		ldr	r3, [r4, #68]
 2688 0120 042B     		cmp	r3, #4
 2689 0122 30D1     		bne	.L192
1102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_ERROR;
 2690              		.loc 1 1102 0
 2691 0124 0120     		mov	r0, #1
 2692 0126 2FE0     		b	.L179
 2693              	.L185:
1111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c,I2C_FLAG_STOPF);
 2694              		.loc 1 1111 0
 2695 0128 2368     		ldr	r3, [r4]
 2696 012a 2022     		mov	r2, #32
 2697 012c DA61     		str	r2, [r3, #28]
1114:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, Timeout, tickstart) != HAL_OK)
 2698              		.loc 1 1114 0
 2699 012e 4346     		mov	r3, r8
 2700 0130 0093     		str	r3, [sp]
 2701 0132 201C     		mov	r0, r4
 2702 0134 8021     		mov	r1, #128
 2703 0136 0902     		lsl	r1, r1, #8
 2704 0138 0122     		mov	r2, #1
 2705 013a 3B1C     		mov	r3, r7
 2706 013c FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2707              	.LVL212:
 2708 0140 0028     		cmp	r0, #0
 2709 0142 07D0     		beq	.L186
1117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
 2710              		.loc 1 1117 0
 2711 0144 2368     		ldr	r3, [r4]
 2712 0146 5968     		ldr	r1, [r3, #4]
 2713 0148 8022     		mov	r2, #128
 2714 014a 1202     		lsl	r2, r2, #8
 2715 014c 0A43     		orr	r2, r1
 2716 014e 5A60     		str	r2, [r3, #4]
1118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_TIMEOUT;
 2717              		.loc 1 1118 0
 2718 0150 0320     		mov	r0, #3
 2719 0152 19E0     		b	.L179
 2720              	.L186:
1122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->CR2 |= I2C_CR2_NACK;
 2721              		.loc 1 1122 0
 2722 0154 2368     		ldr	r3, [r4]
 2723 0156 5968     		ldr	r1, [r3, #4]
 2724 0158 8022     		mov	r2, #128
 2725 015a 1202     		lsl	r2, r2, #8
 2726 015c 0A43     		orr	r2, r1
 2727 015e 5A60     		str	r2, [r3, #4]
1124:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 2728              		.loc 1 1124 0
 2729 0160 2022     		mov	r2, #32
 2730 0162 4123     		mov	r3, #65
ARM GAS  /tmp/cchP46LN.s 			page 140


 2731 0164 E254     		strb	r2, [r4, r3]
1125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 2732              		.loc 1 1125 0
 2733 0166 0023     		mov	r3, #0
 2734 0168 4222     		mov	r2, #66
 2735 016a A354     		strb	r3, [r4, r2]
1128:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 2736              		.loc 1 1128 0
 2737 016c 4022     		mov	r2, #64
 2738 016e A354     		strb	r3, [r4, r2]
1130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
 2739              		.loc 1 1130 0
 2740 0170 0AE0     		b	.L179
 2741              	.LVL213:
 2742              	.L187:
1134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
 2743              		.loc 1 1134 0
 2744 0172 0220     		mov	r0, #2
 2745 0174 08E0     		b	.L179
 2746              	.L188:
1024:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return  HAL_ERROR;
 2747              		.loc 1 1024 0
 2748 0176 0120     		mov	r0, #1
 2749 0178 06E0     		b	.L179
 2750              	.L189:
 2751 017a 0120     		mov	r0, #1
 2752 017c 04E0     		b	.L179
 2753              	.LVL214:
 2754              	.L190:
1027:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 2755              		.loc 1 1027 0
 2756 017e 0220     		mov	r0, #2
 2757 0180 02E0     		b	.L179
 2758              	.LVL215:
 2759              	.L191:
1085:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           return HAL_ERROR;
 2760              		.loc 1 1085 0
 2761 0182 0120     		mov	r0, #1
 2762 0184 00E0     		b	.L179
 2763              	.L192:
1106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_TIMEOUT;
 2764              		.loc 1 1106 0
 2765 0186 0320     		mov	r0, #3
 2766              	.LVL216:
 2767              	.L179:
1136:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 2768              		.loc 1 1136 0
 2769 0188 02B0     		add	sp, sp, #8
 2770              		@ sp needed
 2771              	.LVL217:
 2772              	.LVL218:
 2773              	.LVL219:
 2774 018a 04BC     		pop	{r2}
 2775 018c 9046     		mov	r8, r2
 2776 018e F0BD     		pop	{r4, r5, r6, r7, pc}
 2777              	.L195:
 2778              		.align	2
ARM GAS  /tmp/cchP46LN.s 			page 141


 2779              	.L194:
 2780 0190 FF7FFFFF 		.word	-32769
 2781              		.cfi_endproc
 2782              	.LFE43:
 2784              		.section	.text.HAL_I2C_Master_Transmit_IT,"ax",%progbits
 2785              		.align	2
 2786              		.global	HAL_I2C_Master_Transmit_IT
 2787              		.code	16
 2788              		.thumb_func
 2790              	HAL_I2C_Master_Transmit_IT:
 2791              	.LFB44:
1149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 2792              		.loc 1 1149 0
 2793              		.cfi_startproc
 2794              	.LVL220:
 2795 0000 30B5     		push	{r4, r5, lr}
 2796              	.LCFI29:
 2797              		.cfi_def_cfa_offset 12
 2798              		.cfi_offset 4, -12
 2799              		.cfi_offset 5, -8
 2800              		.cfi_offset 14, -4
 2801 0002 83B0     		sub	sp, sp, #12
 2802              	.LCFI30:
 2803              		.cfi_def_cfa_offset 24
 2804 0004 041C     		mov	r4, r0
 2805              	.LVL221:
1152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 2806              		.loc 1 1152 0
 2807 0006 4120     		mov	r0, #65
 2808              	.LVL222:
 2809 0008 205C     		ldrb	r0, [r4, r0]
 2810 000a 2028     		cmp	r0, #32
 2811 000c 36D1     		bne	.L200
1154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
 2812              		.loc 1 1154 0
 2813 000e 2068     		ldr	r0, [r4]
 2814 0010 8069     		ldr	r0, [r0, #24]
 2815 0012 0504     		lsl	r5, r0, #16
 2816 0014 34D4     		bmi	.L201
1160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 2817              		.loc 1 1160 0
 2818 0016 4020     		mov	r0, #64
 2819 0018 205C     		ldrb	r0, [r4, r0]
 2820 001a 0128     		cmp	r0, #1
 2821 001c 32D0     		beq	.L202
1160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 2822              		.loc 1 1160 0 is_stmt 0 discriminator 2
 2823 001e 0125     		mov	r5, #1
 2824 0020 4020     		mov	r0, #64
 2825 0022 2554     		strb	r5, [r4, r0]
1162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
 2826              		.loc 1 1162 0 is_stmt 1 discriminator 2
 2827 0024 2125     		mov	r5, #33
 2828 0026 4120     		mov	r0, #65
 2829 0028 2554     		strb	r5, [r4, r0]
1163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 2830              		.loc 1 1163 0 discriminator 2
ARM GAS  /tmp/cchP46LN.s 			page 142


 2831 002a 1025     		mov	r5, #16
 2832 002c 4220     		mov	r0, #66
 2833 002e 2554     		strb	r5, [r4, r0]
1164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2834              		.loc 1 1164 0 discriminator 2
 2835 0030 0020     		mov	r0, #0
 2836 0032 6064     		str	r0, [r4, #68]
1167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 2837              		.loc 1 1167 0 discriminator 2
 2838 0034 6262     		str	r2, [r4, #36]
1168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2839              		.loc 1 1168 0 discriminator 2
 2840 0036 6385     		strh	r3, [r4, #42]
1169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2841              		.loc 1 1169 0 discriminator 2
 2842 0038 144B     		ldr	r3, .L203
 2843              	.LVL223:
 2844 003a E362     		str	r3, [r4, #44]
 2845              	.LVL224:
1170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 2846              		.loc 1 1170 0 discriminator 2
 2847 003c 144B     		ldr	r3, .L203+4
 2848 003e 6363     		str	r3, [r4, #52]
1172:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
 2849              		.loc 1 1172 0 discriminator 2
 2850 0040 638D     		ldrh	r3, [r4, #42]
 2851 0042 9BB2     		uxth	r3, r3
 2852 0044 FF2B     		cmp	r3, #255
 2853 0046 04D9     		bls	.L198
1174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 2854              		.loc 1 1174 0
 2855 0048 FF23     		mov	r3, #255
 2856 004a 2385     		strh	r3, [r4, #40]
 2857              	.LVL225:
1175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 2858              		.loc 1 1175 0
 2859 004c 8023     		mov	r3, #128
 2860 004e 5B04     		lsl	r3, r3, #17
 2861 0050 03E0     		b	.L199
 2862              	.LVL226:
 2863              	.L198:
1179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 2864              		.loc 1 1179 0
 2865 0052 638D     		ldrh	r3, [r4, #42]
 2866 0054 2385     		strh	r3, [r4, #40]
 2867              	.LVL227:
1180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 2868              		.loc 1 1180 0
 2869 0056 8023     		mov	r3, #128
 2870 0058 9B04     		lsl	r3, r3, #18
 2871              	.LVL228:
 2872              	.L199:
1185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, xfermode, I2C_GENERATE_START_WRITE);
 2873              		.loc 1 1185 0
 2874 005a 228D     		ldrh	r2, [r4, #40]
 2875              	.LVL229:
 2876 005c D2B2     		uxtb	r2, r2
ARM GAS  /tmp/cchP46LN.s 			page 143


 2877 005e 8020     		mov	r0, #128
 2878 0060 8001     		lsl	r0, r0, #6
 2879 0062 0090     		str	r0, [sp]
 2880              	.LVL230:
 2881 0064 201C     		mov	r0, r4
 2882 0066 FFF7FEFF 		bl	I2C_TransferConfig
 2883              	.LVL231:
1188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c); 
 2884              		.loc 1 1188 0
 2885 006a 0022     		mov	r2, #0
 2886 006c 4023     		mov	r3, #64
 2887 006e E254     		strb	r2, [r4, r3]
1197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
 2888              		.loc 1 1197 0
 2889 0070 201C     		mov	r0, r4
 2890 0072 0121     		mov	r1, #1
 2891 0074 FFF7FEFF 		bl	I2C_Enable_IRQ
 2892              	.LVL232:
1199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
 2893              		.loc 1 1199 0
 2894 0078 0020     		mov	r0, #0
 2895 007a 04E0     		b	.L197
 2896              	.LVL233:
 2897              	.L200:
1203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
 2898              		.loc 1 1203 0
 2899 007c 0220     		mov	r0, #2
 2900 007e 02E0     		b	.L197
 2901              	.L201:
1156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_BUSY;
 2902              		.loc 1 1156 0
 2903 0080 0220     		mov	r0, #2
 2904 0082 00E0     		b	.L197
 2905              	.L202:
1160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 2906              		.loc 1 1160 0
 2907 0084 0220     		mov	r0, #2
 2908              	.LVL234:
 2909              	.L197:
1205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 2910              		.loc 1 1205 0
 2911 0086 03B0     		add	sp, sp, #12
 2912              		@ sp needed
 2913              	.LVL235:
 2914 0088 30BD     		pop	{r4, r5, pc}
 2915              	.L204:
 2916 008a C046     		.align	2
 2917              	.L203:
 2918 008c 0000FFFF 		.word	-65536
 2919 0090 00000000 		.word	I2C_Master_ISR_IT
 2920              		.cfi_endproc
 2921              	.LFE44:
 2923              		.section	.text.HAL_I2C_Master_Receive_IT,"ax",%progbits
 2924              		.align	2
 2925              		.global	HAL_I2C_Master_Receive_IT
 2926              		.code	16
 2927              		.thumb_func
ARM GAS  /tmp/cchP46LN.s 			page 144


 2929              	HAL_I2C_Master_Receive_IT:
 2930              	.LFB45:
1218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 2931              		.loc 1 1218 0
 2932              		.cfi_startproc
 2933              	.LVL236:
 2934 0000 30B5     		push	{r4, r5, lr}
 2935              	.LCFI31:
 2936              		.cfi_def_cfa_offset 12
 2937              		.cfi_offset 4, -12
 2938              		.cfi_offset 5, -8
 2939              		.cfi_offset 14, -4
 2940 0002 83B0     		sub	sp, sp, #12
 2941              	.LCFI32:
 2942              		.cfi_def_cfa_offset 24
 2943 0004 041C     		mov	r4, r0
 2944              	.LVL237:
1221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 2945              		.loc 1 1221 0
 2946 0006 4120     		mov	r0, #65
 2947              	.LVL238:
 2948 0008 205C     		ldrb	r0, [r4, r0]
 2949 000a 2028     		cmp	r0, #32
 2950 000c 36D1     		bne	.L209
1223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
 2951              		.loc 1 1223 0
 2952 000e 2068     		ldr	r0, [r4]
 2953 0010 8069     		ldr	r0, [r0, #24]
 2954 0012 0504     		lsl	r5, r0, #16
 2955 0014 34D4     		bmi	.L210
1229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 2956              		.loc 1 1229 0
 2957 0016 4020     		mov	r0, #64
 2958 0018 205C     		ldrb	r0, [r4, r0]
 2959 001a 0128     		cmp	r0, #1
 2960 001c 32D0     		beq	.L211
1229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 2961              		.loc 1 1229 0 is_stmt 0 discriminator 2
 2962 001e 0125     		mov	r5, #1
 2963 0020 4020     		mov	r0, #64
 2964 0022 2554     		strb	r5, [r4, r0]
1231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
 2965              		.loc 1 1231 0 is_stmt 1 discriminator 2
 2966 0024 2225     		mov	r5, #34
 2967 0026 4120     		mov	r0, #65
 2968 0028 2554     		strb	r5, [r4, r0]
1232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 2969              		.loc 1 1232 0 discriminator 2
 2970 002a 1025     		mov	r5, #16
 2971 002c 4220     		mov	r0, #66
 2972 002e 2554     		strb	r5, [r4, r0]
1233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2973              		.loc 1 1233 0 discriminator 2
 2974 0030 0020     		mov	r0, #0
 2975 0032 6064     		str	r0, [r4, #68]
1236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 2976              		.loc 1 1236 0 discriminator 2
ARM GAS  /tmp/cchP46LN.s 			page 145


 2977 0034 6262     		str	r2, [r4, #36]
1237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2978              		.loc 1 1237 0 discriminator 2
 2979 0036 6385     		strh	r3, [r4, #42]
1238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2980              		.loc 1 1238 0 discriminator 2
 2981 0038 144B     		ldr	r3, .L212
 2982              	.LVL239:
 2983 003a E362     		str	r3, [r4, #44]
 2984              	.LVL240:
1239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 2985              		.loc 1 1239 0 discriminator 2
 2986 003c 144B     		ldr	r3, .L212+4
 2987 003e 6363     		str	r3, [r4, #52]
1241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
 2988              		.loc 1 1241 0 discriminator 2
 2989 0040 638D     		ldrh	r3, [r4, #42]
 2990 0042 9BB2     		uxth	r3, r3
 2991 0044 FF2B     		cmp	r3, #255
 2992 0046 04D9     		bls	.L207
1243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 2993              		.loc 1 1243 0
 2994 0048 FF23     		mov	r3, #255
 2995 004a 2385     		strh	r3, [r4, #40]
 2996              	.LVL241:
1244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 2997              		.loc 1 1244 0
 2998 004c 8023     		mov	r3, #128
 2999 004e 5B04     		lsl	r3, r3, #17
 3000 0050 03E0     		b	.L208
 3001              	.LVL242:
 3002              	.L207:
1248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 3003              		.loc 1 1248 0
 3004 0052 638D     		ldrh	r3, [r4, #42]
 3005 0054 2385     		strh	r3, [r4, #40]
 3006              	.LVL243:
1249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 3007              		.loc 1 1249 0
 3008 0056 8023     		mov	r3, #128
 3009 0058 9B04     		lsl	r3, r3, #18
 3010              	.LVL244:
 3011              	.L208:
1254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, xfermode, I2C_GENERATE_START_READ);
 3012              		.loc 1 1254 0
 3013 005a 228D     		ldrh	r2, [r4, #40]
 3014              	.LVL245:
 3015 005c D2B2     		uxtb	r2, r2
 3016 005e 9020     		mov	r0, #144
 3017 0060 8001     		lsl	r0, r0, #6
 3018 0062 0090     		str	r0, [sp]
 3019              	.LVL246:
 3020 0064 201C     		mov	r0, r4
 3021 0066 FFF7FEFF 		bl	I2C_TransferConfig
 3022              	.LVL247:
1257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 3023              		.loc 1 1257 0
ARM GAS  /tmp/cchP46LN.s 			page 146


 3024 006a 0022     		mov	r2, #0
 3025 006c 4023     		mov	r3, #64
 3026 006e E254     		strb	r2, [r4, r3]
1266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT);
 3027              		.loc 1 1266 0
 3028 0070 201C     		mov	r0, r4
 3029 0072 0221     		mov	r1, #2
 3030 0074 FFF7FEFF 		bl	I2C_Enable_IRQ
 3031              	.LVL248:
1268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
 3032              		.loc 1 1268 0
 3033 0078 0020     		mov	r0, #0
 3034 007a 04E0     		b	.L206
 3035              	.LVL249:
 3036              	.L209:
1272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
 3037              		.loc 1 1272 0
 3038 007c 0220     		mov	r0, #2
 3039 007e 02E0     		b	.L206
 3040              	.L210:
1225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_BUSY;
 3041              		.loc 1 1225 0
 3042 0080 0220     		mov	r0, #2
 3043 0082 00E0     		b	.L206
 3044              	.L211:
1229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 3045              		.loc 1 1229 0
 3046 0084 0220     		mov	r0, #2
 3047              	.LVL250:
 3048              	.L206:
1274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 3049              		.loc 1 1274 0
 3050 0086 03B0     		add	sp, sp, #12
 3051              		@ sp needed
 3052              	.LVL251:
 3053 0088 30BD     		pop	{r4, r5, pc}
 3054              	.L213:
 3055 008a C046     		.align	2
 3056              	.L212:
 3057 008c 0000FFFF 		.word	-65536
 3058 0090 00000000 		.word	I2C_Master_ISR_IT
 3059              		.cfi_endproc
 3060              	.LFE45:
 3062              		.section	.text.HAL_I2C_Slave_Transmit_IT,"ax",%progbits
 3063              		.align	2
 3064              		.global	HAL_I2C_Slave_Transmit_IT
 3065              		.code	16
 3066              		.thumb_func
 3068              	HAL_I2C_Slave_Transmit_IT:
 3069              	.LFB46:
1285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 3070              		.loc 1 1285 0
 3071              		.cfi_startproc
 3072              	.LVL252:
 3073 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3074              	.LCFI33:
 3075              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/cchP46LN.s 			page 147


 3076              		.cfi_offset 3, -24
 3077              		.cfi_offset 4, -20
 3078              		.cfi_offset 5, -16
 3079              		.cfi_offset 6, -12
 3080              		.cfi_offset 7, -8
 3081              		.cfi_offset 14, -4
1286:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 3082              		.loc 1 1286 0
 3083 0002 4123     		mov	r3, #65
 3084 0004 C35C     		ldrb	r3, [r0, r3]
 3085 0006 202B     		cmp	r3, #32
 3086 0008 21D1     		bne	.L216
1289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 3087              		.loc 1 1289 0
 3088 000a 4023     		mov	r3, #64
 3089 000c C35C     		ldrb	r3, [r0, r3]
 3090 000e 012B     		cmp	r3, #1
 3091 0010 1FD0     		beq	.L217
1289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 3092              		.loc 1 1289 0 is_stmt 0 discriminator 2
 3093 0012 4023     		mov	r3, #64
 3094 0014 0124     		mov	r4, #1
 3095 0016 C454     		strb	r4, [r0, r3]
1291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
 3096              		.loc 1 1291 0 is_stmt 1 discriminator 2
 3097 0018 2125     		mov	r5, #33
 3098 001a 4124     		mov	r4, #65
 3099 001c 0555     		strb	r5, [r0, r4]
1292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 3100              		.loc 1 1292 0 discriminator 2
 3101 001e 2025     		mov	r5, #32
 3102 0020 4224     		mov	r4, #66
 3103 0022 0555     		strb	r5, [r0, r4]
1293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3104              		.loc 1 1293 0 discriminator 2
 3105 0024 0024     		mov	r4, #0
 3106 0026 4464     		str	r4, [r0, #68]
1296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
 3107              		.loc 1 1296 0 discriminator 2
 3108 0028 0568     		ldr	r5, [r0]
 3109 002a 6F68     		ldr	r7, [r5, #4]
 3110 002c 0A4E     		ldr	r6, .L218
 3111 002e 3E40     		and	r6, r7
 3112 0030 6E60     		str	r6, [r5, #4]
1299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 3113              		.loc 1 1299 0 discriminator 2
 3114 0032 4162     		str	r1, [r0, #36]
1300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3115              		.loc 1 1300 0 discriminator 2
 3116 0034 4285     		strh	r2, [r0, #42]
1301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 3117              		.loc 1 1301 0 discriminator 2
 3118 0036 428D     		ldrh	r2, [r0, #42]
 3119              	.LVL253:
 3120 0038 0285     		strh	r2, [r0, #40]
1302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3121              		.loc 1 1302 0 discriminator 2
ARM GAS  /tmp/cchP46LN.s 			page 148


 3122 003a 084A     		ldr	r2, .L218+4
 3123 003c C262     		str	r2, [r0, #44]
 3124              	.LVL254:
1303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 3125              		.loc 1 1303 0 discriminator 2
 3126 003e 084A     		ldr	r2, .L218+8
 3127 0040 4263     		str	r2, [r0, #52]
1306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 3128              		.loc 1 1306 0 discriminator 2
 3129 0042 C454     		strb	r4, [r0, r3]
1315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT | I2C_XFER_LISTEN_IT);
 3130              		.loc 1 1315 0 discriminator 2
 3131 0044 0521     		mov	r1, #5
 3132              	.LVL255:
 3133 0046 FFF7FEFF 		bl	I2C_Enable_IRQ
 3134              	.LVL256:
1317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
 3135              		.loc 1 1317 0 discriminator 2
 3136 004a 0020     		mov	r0, #0
 3137 004c 02E0     		b	.L215
 3138              	.LVL257:
 3139              	.L216:
1321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
 3140              		.loc 1 1321 0
 3141 004e 0220     		mov	r0, #2
 3142              	.LVL258:
 3143 0050 00E0     		b	.L215
 3144              	.LVL259:
 3145              	.L217:
1289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 3146              		.loc 1 1289 0
 3147 0052 0220     		mov	r0, #2
 3148              	.LVL260:
 3149              	.L215:
1323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 3150              		.loc 1 1323 0
 3151              		@ sp needed
 3152 0054 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3153              	.L219:
 3154 0056 C046     		.align	2
 3155              	.L218:
 3156 0058 FF7FFFFF 		.word	-32769
 3157 005c 0000FFFF 		.word	-65536
 3158 0060 00000000 		.word	I2C_Slave_ISR_IT
 3159              		.cfi_endproc
 3160              	.LFE46:
 3162              		.section	.text.HAL_I2C_Slave_Receive_IT,"ax",%progbits
 3163              		.align	2
 3164              		.global	HAL_I2C_Slave_Receive_IT
 3165              		.code	16
 3166              		.thumb_func
 3168              	HAL_I2C_Slave_Receive_IT:
 3169              	.LFB47:
1334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 3170              		.loc 1 1334 0
 3171              		.cfi_startproc
 3172              	.LVL261:
ARM GAS  /tmp/cchP46LN.s 			page 149


 3173 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3174              	.LCFI34:
 3175              		.cfi_def_cfa_offset 24
 3176              		.cfi_offset 3, -24
 3177              		.cfi_offset 4, -20
 3178              		.cfi_offset 5, -16
 3179              		.cfi_offset 6, -12
 3180              		.cfi_offset 7, -8
 3181              		.cfi_offset 14, -4
1335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 3182              		.loc 1 1335 0
 3183 0002 4123     		mov	r3, #65
 3184 0004 C35C     		ldrb	r3, [r0, r3]
 3185 0006 202B     		cmp	r3, #32
 3186 0008 21D1     		bne	.L222
1338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 3187              		.loc 1 1338 0
 3188 000a 4023     		mov	r3, #64
 3189 000c C35C     		ldrb	r3, [r0, r3]
 3190 000e 012B     		cmp	r3, #1
 3191 0010 1FD0     		beq	.L223
1338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 3192              		.loc 1 1338 0 is_stmt 0 discriminator 2
 3193 0012 4023     		mov	r3, #64
 3194 0014 0124     		mov	r4, #1
 3195 0016 C454     		strb	r4, [r0, r3]
1340:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
 3196              		.loc 1 1340 0 is_stmt 1 discriminator 2
 3197 0018 2225     		mov	r5, #34
 3198 001a 4124     		mov	r4, #65
 3199 001c 0555     		strb	r5, [r0, r4]
1341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 3200              		.loc 1 1341 0 discriminator 2
 3201 001e 2025     		mov	r5, #32
 3202 0020 4224     		mov	r4, #66
 3203 0022 0555     		strb	r5, [r0, r4]
1342:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3204              		.loc 1 1342 0 discriminator 2
 3205 0024 0024     		mov	r4, #0
 3206 0026 4464     		str	r4, [r0, #68]
1345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
 3207              		.loc 1 1345 0 discriminator 2
 3208 0028 0568     		ldr	r5, [r0]
 3209 002a 6F68     		ldr	r7, [r5, #4]
 3210 002c 0A4E     		ldr	r6, .L224
 3211 002e 3E40     		and	r6, r7
 3212 0030 6E60     		str	r6, [r5, #4]
1348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 3213              		.loc 1 1348 0 discriminator 2
 3214 0032 4162     		str	r1, [r0, #36]
1349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3215              		.loc 1 1349 0 discriminator 2
 3216 0034 4285     		strh	r2, [r0, #42]
1350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 3217              		.loc 1 1350 0 discriminator 2
 3218 0036 428D     		ldrh	r2, [r0, #42]
 3219              	.LVL262:
ARM GAS  /tmp/cchP46LN.s 			page 150


 3220 0038 0285     		strh	r2, [r0, #40]
1351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3221              		.loc 1 1351 0 discriminator 2
 3222 003a 084A     		ldr	r2, .L224+4
 3223 003c C262     		str	r2, [r0, #44]
 3224              	.LVL263:
1352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 3225              		.loc 1 1352 0 discriminator 2
 3226 003e 084A     		ldr	r2, .L224+8
 3227 0040 4263     		str	r2, [r0, #52]
1355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 3228              		.loc 1 1355 0 discriminator 2
 3229 0042 C454     		strb	r4, [r0, r3]
1364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_LISTEN_IT);
 3230              		.loc 1 1364 0 discriminator 2
 3231 0044 0621     		mov	r1, #6
 3232              	.LVL264:
 3233 0046 FFF7FEFF 		bl	I2C_Enable_IRQ
 3234              	.LVL265:
1366:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
 3235              		.loc 1 1366 0 discriminator 2
 3236 004a 0020     		mov	r0, #0
 3237 004c 02E0     		b	.L221
 3238              	.LVL266:
 3239              	.L222:
1370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
 3240              		.loc 1 1370 0
 3241 004e 0220     		mov	r0, #2
 3242              	.LVL267:
 3243 0050 00E0     		b	.L221
 3244              	.LVL268:
 3245              	.L223:
1338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 3246              		.loc 1 1338 0
 3247 0052 0220     		mov	r0, #2
 3248              	.LVL269:
 3249              	.L221:
1372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 3250              		.loc 1 1372 0
 3251              		@ sp needed
 3252 0054 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3253              	.L225:
 3254 0056 C046     		.align	2
 3255              	.L224:
 3256 0058 FF7FFFFF 		.word	-32769
 3257 005c 0000FFFF 		.word	-65536
 3258 0060 00000000 		.word	I2C_Slave_ISR_IT
 3259              		.cfi_endproc
 3260              	.LFE47:
 3262              		.section	.text.HAL_I2C_Master_Transmit_DMA,"ax",%progbits
 3263              		.align	2
 3264              		.global	HAL_I2C_Master_Transmit_DMA
 3265              		.code	16
 3266              		.thumb_func
 3268              	HAL_I2C_Master_Transmit_DMA:
 3269              	.LFB48:
1385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
ARM GAS  /tmp/cchP46LN.s 			page 151


 3270              		.loc 1 1385 0
 3271              		.cfi_startproc
 3272              	.LVL270:
 3273 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3274              	.LCFI35:
 3275              		.cfi_def_cfa_offset 20
 3276              		.cfi_offset 4, -20
 3277              		.cfi_offset 5, -16
 3278              		.cfi_offset 6, -12
 3279              		.cfi_offset 7, -8
 3280              		.cfi_offset 14, -4
 3281 0002 83B0     		sub	sp, sp, #12
 3282              	.LCFI36:
 3283              		.cfi_def_cfa_offset 32
 3284 0004 041C     		mov	r4, r0
 3285 0006 0D1C     		mov	r5, r1
 3286              	.LVL271:
1388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 3287              		.loc 1 1388 0
 3288 0008 4120     		mov	r0, #65
 3289              	.LVL272:
 3290 000a 205C     		ldrb	r0, [r4, r0]
 3291 000c 2028     		cmp	r0, #32
 3292 000e 6FD1     		bne	.L231
1390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
 3293              		.loc 1 1390 0
 3294 0010 2168     		ldr	r1, [r4]
 3295              	.LVL273:
 3296 0012 8969     		ldr	r1, [r1, #24]
 3297 0014 0804     		lsl	r0, r1, #16
 3298 0016 6DD4     		bmi	.L232
1396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 3299              		.loc 1 1396 0
 3300 0018 4021     		mov	r1, #64
 3301 001a 615C     		ldrb	r1, [r4, r1]
 3302 001c 0129     		cmp	r1, #1
 3303 001e 6BD0     		beq	.L233
1396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 3304              		.loc 1 1396 0 is_stmt 0 discriminator 2
 3305 0020 0120     		mov	r0, #1
 3306 0022 4021     		mov	r1, #64
 3307 0024 6054     		strb	r0, [r4, r1]
1398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
 3308              		.loc 1 1398 0 is_stmt 1 discriminator 2
 3309 0026 2120     		mov	r0, #33
 3310 0028 4121     		mov	r1, #65
 3311 002a 6054     		strb	r0, [r4, r1]
1399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 3312              		.loc 1 1399 0 discriminator 2
 3313 002c 1020     		mov	r0, #16
 3314 002e 4221     		mov	r1, #66
 3315 0030 6054     		strb	r0, [r4, r1]
1400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3316              		.loc 1 1400 0 discriminator 2
 3317 0032 0021     		mov	r1, #0
 3318 0034 6164     		str	r1, [r4, #68]
1403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
ARM GAS  /tmp/cchP46LN.s 			page 152


 3319              		.loc 1 1403 0 discriminator 2
 3320 0036 6262     		str	r2, [r4, #36]
1404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3321              		.loc 1 1404 0 discriminator 2
 3322 0038 6385     		strh	r3, [r4, #42]
1405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3323              		.loc 1 1405 0 discriminator 2
 3324 003a 314B     		ldr	r3, .L234
 3325              	.LVL274:
 3326 003c E362     		str	r3, [r4, #44]
 3327              	.LVL275:
1406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 3328              		.loc 1 1406 0 discriminator 2
 3329 003e 314B     		ldr	r3, .L234+4
 3330 0040 6363     		str	r3, [r4, #52]
1408:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
 3331              		.loc 1 1408 0 discriminator 2
 3332 0042 638D     		ldrh	r3, [r4, #42]
 3333 0044 9BB2     		uxth	r3, r3
 3334 0046 FF2B     		cmp	r3, #255
 3335 0048 04D9     		bls	.L228
1410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 3336              		.loc 1 1410 0
 3337 004a FF23     		mov	r3, #255
 3338 004c 2385     		strh	r3, [r4, #40]
 3339              	.LVL276:
1411:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 3340              		.loc 1 1411 0
 3341 004e 8027     		mov	r7, #128
 3342 0050 7F04     		lsl	r7, r7, #17
 3343 0052 03E0     		b	.L229
 3344              	.LVL277:
 3345              	.L228:
1415:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 3346              		.loc 1 1415 0
 3347 0054 638D     		ldrh	r3, [r4, #42]
 3348 0056 2385     		strh	r3, [r4, #40]
 3349              	.LVL278:
1416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 3350              		.loc 1 1416 0
 3351 0058 8027     		mov	r7, #128
 3352 005a BF04     		lsl	r7, r7, #18
 3353              	.LVL279:
 3354              	.L229:
1419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferSize > 0U)
 3355              		.loc 1 1419 0
 3356 005c 218D     		ldrh	r1, [r4, #40]
 3357 005e 0029     		cmp	r1, #0
 3358 0060 31D0     		beq	.L230
1422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->hdmatx->XferCpltCallback = I2C_DMAMasterTransmitCplt;
 3359              		.loc 1 1422 0
 3360 0062 A36B     		ldr	r3, [r4, #56]
 3361 0064 2849     		ldr	r1, .L234+8
 3362 0066 D962     		str	r1, [r3, #44]
1425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
 3363              		.loc 1 1425 0
 3364 0068 A36B     		ldr	r3, [r4, #56]
ARM GAS  /tmp/cchP46LN.s 			page 153


 3365 006a 2849     		ldr	r1, .L234+12
 3366 006c 5963     		str	r1, [r3, #52]
1428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->hdmatx->XferHalfCpltCallback = NULL;
 3367              		.loc 1 1428 0
 3368 006e A36B     		ldr	r3, [r4, #56]
 3369 0070 0026     		mov	r6, #0
 3370 0072 1E63     		str	r6, [r3, #48]
1429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
 3371              		.loc 1 1429 0
 3372 0074 A36B     		ldr	r3, [r4, #56]
 3373 0076 9E63     		str	r6, [r3, #56]
1432:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->TXDR, hi2c->XferSi
 3374              		.loc 1 1432 0
 3375 0078 2168     		ldr	r1, [r4]
 3376 007a 8C46     		mov	ip, r1
 3377 007c 2821     		mov	r1, #40
 3378 007e 8C44     		add	ip, ip, r1
 3379 0080 238D     		ldrh	r3, [r4, #40]
 3380 0082 A06B     		ldr	r0, [r4, #56]
 3381 0084 111C     		mov	r1, r2
 3382 0086 6246     		mov	r2, ip
 3383              	.LVL280:
 3384 0088 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3385              	.LVL281:
1436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, xfermode, I2C_GENERATE_START_WRITE);
 3386              		.loc 1 1436 0
 3387 008c 228D     		ldrh	r2, [r4, #40]
 3388 008e D2B2     		uxtb	r2, r2
 3389 0090 8023     		mov	r3, #128
 3390 0092 9B01     		lsl	r3, r3, #6
 3391 0094 0093     		str	r3, [sp]
 3392 0096 201C     		mov	r0, r4
 3393 0098 291C     		mov	r1, r5
 3394 009a 3B1C     		mov	r3, r7
 3395 009c FFF7FEFF 		bl	I2C_TransferConfig
 3396              	.LVL282:
1439:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
 3397              		.loc 1 1439 0
 3398 00a0 628D     		ldrh	r2, [r4, #42]
 3399 00a2 238D     		ldrh	r3, [r4, #40]
 3400 00a4 D31A     		sub	r3, r2, r3
 3401 00a6 9BB2     		uxth	r3, r3
 3402 00a8 6385     		strh	r3, [r4, #42]
1442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
 3403              		.loc 1 1442 0
 3404 00aa 4023     		mov	r3, #64
 3405 00ac E654     		strb	r6, [r4, r3]
1448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
 3406              		.loc 1 1448 0
 3407 00ae 201C     		mov	r0, r4
 3408 00b0 1121     		mov	r1, #17
 3409 00b2 FFF7FEFF 		bl	I2C_Enable_IRQ
 3410              	.LVL283:
1451:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
 3411              		.loc 1 1451 0
 3412 00b6 2368     		ldr	r3, [r4]
 3413 00b8 1968     		ldr	r1, [r3]
ARM GAS  /tmp/cchP46LN.s 			page 154


 3414 00ba 8022     		mov	r2, #128
 3415 00bc D201     		lsl	r2, r2, #7
 3416 00be 0A43     		orr	r2, r1
 3417 00c0 1A60     		str	r2, [r3]
1474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
 3418              		.loc 1 1474 0
 3419 00c2 0020     		mov	r0, #0
 3420 00c4 19E0     		b	.L227
 3421              	.LVL284:
 3422              	.L230:
1456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
 3423              		.loc 1 1456 0
 3424 00c6 124B     		ldr	r3, .L234+16
 3425 00c8 6363     		str	r3, [r4, #52]
1460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_WRI
 3426              		.loc 1 1460 0
 3427 00ca CAB2     		uxtb	r2, r1
 3428              	.LVL285:
 3429 00cc 8023     		mov	r3, #128
 3430 00ce 9B01     		lsl	r3, r3, #6
 3431 00d0 0093     		str	r3, [sp]
 3432              	.LVL286:
 3433 00d2 201C     		mov	r0, r4
 3434 00d4 291C     		mov	r1, r5
 3435 00d6 8023     		mov	r3, #128
 3436 00d8 9B04     		lsl	r3, r3, #18
 3437 00da FFF7FEFF 		bl	I2C_TransferConfig
 3438              	.LVL287:
1463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
 3439              		.loc 1 1463 0
 3440 00de 0022     		mov	r2, #0
 3441 00e0 4023     		mov	r3, #64
 3442 00e2 E254     		strb	r2, [r4, r3]
1471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
 3443              		.loc 1 1471 0
 3444 00e4 201C     		mov	r0, r4
 3445 00e6 0121     		mov	r1, #1
 3446 00e8 FFF7FEFF 		bl	I2C_Enable_IRQ
 3447              	.LVL288:
1474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
 3448              		.loc 1 1474 0
 3449 00ec 0020     		mov	r0, #0
 3450 00ee 04E0     		b	.L227
 3451              	.LVL289:
 3452              	.L231:
1478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
 3453              		.loc 1 1478 0
 3454 00f0 0220     		mov	r0, #2
 3455 00f2 02E0     		b	.L227
 3456              	.LVL290:
 3457              	.L232:
1392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_BUSY;
 3458              		.loc 1 1392 0
 3459 00f4 0220     		mov	r0, #2
 3460 00f6 00E0     		b	.L227
 3461              	.L233:
1396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
ARM GAS  /tmp/cchP46LN.s 			page 155


 3462              		.loc 1 1396 0
 3463 00f8 0220     		mov	r0, #2
 3464              	.LVL291:
 3465              	.L227:
1480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 3466              		.loc 1 1480 0
 3467 00fa 03B0     		add	sp, sp, #12
 3468              		@ sp needed
 3469              	.LVL292:
 3470 00fc F0BD     		pop	{r4, r5, r6, r7, pc}
 3471              	.L235:
 3472 00fe C046     		.align	2
 3473              	.L234:
 3474 0100 0000FFFF 		.word	-65536
 3475 0104 00000000 		.word	I2C_Master_ISR_DMA
 3476 0108 00000000 		.word	I2C_DMAMasterTransmitCplt
 3477 010c 00000000 		.word	I2C_DMAError
 3478 0110 00000000 		.word	I2C_Master_ISR_IT
 3479              		.cfi_endproc
 3480              	.LFE48:
 3482              		.section	.text.HAL_I2C_Master_Receive_DMA,"ax",%progbits
 3483              		.align	2
 3484              		.global	HAL_I2C_Master_Receive_DMA
 3485              		.code	16
 3486              		.thumb_func
 3488              	HAL_I2C_Master_Receive_DMA:
 3489              	.LFB49:
1493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 3490              		.loc 1 1493 0
 3491              		.cfi_startproc
 3492              	.LVL293:
 3493 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3494              	.LCFI37:
 3495              		.cfi_def_cfa_offset 20
 3496              		.cfi_offset 4, -20
 3497              		.cfi_offset 5, -16
 3498              		.cfi_offset 6, -12
 3499              		.cfi_offset 7, -8
 3500              		.cfi_offset 14, -4
 3501 0002 83B0     		sub	sp, sp, #12
 3502              	.LCFI38:
 3503              		.cfi_def_cfa_offset 32
 3504 0004 041C     		mov	r4, r0
 3505 0006 0D1C     		mov	r5, r1
 3506              	.LVL294:
1496:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 3507              		.loc 1 1496 0
 3508 0008 4120     		mov	r0, #65
 3509              	.LVL295:
 3510 000a 205C     		ldrb	r0, [r4, r0]
 3511 000c 2028     		cmp	r0, #32
 3512 000e 6BD1     		bne	.L241
1498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
 3513              		.loc 1 1498 0
 3514 0010 2168     		ldr	r1, [r4]
 3515              	.LVL296:
 3516 0012 8969     		ldr	r1, [r1, #24]
ARM GAS  /tmp/cchP46LN.s 			page 156


 3517 0014 0804     		lsl	r0, r1, #16
 3518 0016 69D4     		bmi	.L242
1504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 3519              		.loc 1 1504 0
 3520 0018 4021     		mov	r1, #64
 3521 001a 615C     		ldrb	r1, [r4, r1]
 3522 001c 0129     		cmp	r1, #1
 3523 001e 67D0     		beq	.L243
1504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 3524              		.loc 1 1504 0 is_stmt 0 discriminator 2
 3525 0020 0120     		mov	r0, #1
 3526 0022 4021     		mov	r1, #64
 3527 0024 6054     		strb	r0, [r4, r1]
1506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
 3528              		.loc 1 1506 0 is_stmt 1 discriminator 2
 3529 0026 2220     		mov	r0, #34
 3530 0028 4121     		mov	r1, #65
 3531 002a 6054     		strb	r0, [r4, r1]
1507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 3532              		.loc 1 1507 0 discriminator 2
 3533 002c 1020     		mov	r0, #16
 3534 002e 4221     		mov	r1, #66
 3535 0030 6054     		strb	r0, [r4, r1]
1508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3536              		.loc 1 1508 0 discriminator 2
 3537 0032 0021     		mov	r1, #0
 3538 0034 6164     		str	r1, [r4, #68]
1511:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 3539              		.loc 1 1511 0 discriminator 2
 3540 0036 6262     		str	r2, [r4, #36]
1512:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3541              		.loc 1 1512 0 discriminator 2
 3542 0038 6385     		strh	r3, [r4, #42]
1513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3543              		.loc 1 1513 0 discriminator 2
 3544 003a 2F4B     		ldr	r3, .L244
 3545              	.LVL297:
 3546 003c E362     		str	r3, [r4, #44]
 3547              	.LVL298:
1514:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 3548              		.loc 1 1514 0 discriminator 2
 3549 003e 2F4B     		ldr	r3, .L244+4
 3550 0040 6363     		str	r3, [r4, #52]
1516:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
 3551              		.loc 1 1516 0 discriminator 2
 3552 0042 638D     		ldrh	r3, [r4, #42]
 3553 0044 9BB2     		uxth	r3, r3
 3554 0046 FF2B     		cmp	r3, #255
 3555 0048 04D9     		bls	.L238
1518:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 3556              		.loc 1 1518 0
 3557 004a FF23     		mov	r3, #255
 3558 004c 2385     		strh	r3, [r4, #40]
 3559              	.LVL299:
1519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 3560              		.loc 1 1519 0
 3561 004e 8027     		mov	r7, #128
ARM GAS  /tmp/cchP46LN.s 			page 157


 3562 0050 7F04     		lsl	r7, r7, #17
 3563 0052 03E0     		b	.L239
 3564              	.LVL300:
 3565              	.L238:
1523:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 3566              		.loc 1 1523 0
 3567 0054 638D     		ldrh	r3, [r4, #42]
 3568 0056 2385     		strh	r3, [r4, #40]
 3569              	.LVL301:
1524:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 3570              		.loc 1 1524 0
 3571 0058 8027     		mov	r7, #128
 3572 005a BF04     		lsl	r7, r7, #18
 3573              	.LVL302:
 3574              	.L239:
1527:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferSize > 0U)
 3575              		.loc 1 1527 0
 3576 005c 218D     		ldrh	r1, [r4, #40]
 3577 005e 0029     		cmp	r1, #0
 3578 0060 2DD0     		beq	.L240
1530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->hdmarx->XferCpltCallback = I2C_DMAMasterReceiveCplt;
 3579              		.loc 1 1530 0
 3580 0062 E36B     		ldr	r3, [r4, #60]
 3581 0064 2649     		ldr	r1, .L244+8
 3582 0066 D962     		str	r1, [r3, #44]
1533:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
 3583              		.loc 1 1533 0
 3584 0068 E36B     		ldr	r3, [r4, #60]
 3585 006a 2649     		ldr	r1, .L244+12
 3586 006c 5963     		str	r1, [r3, #52]
1536:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->hdmarx->XferHalfCpltCallback = NULL;
 3587              		.loc 1 1536 0
 3588 006e E36B     		ldr	r3, [r4, #60]
 3589 0070 0026     		mov	r6, #0
 3590 0072 1E63     		str	r6, [r3, #48]
1537:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
 3591              		.loc 1 1537 0
 3592 0074 E36B     		ldr	r3, [r4, #60]
 3593 0076 9E63     		str	r6, [r3, #56]
1540:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)pData, hi2c->XferSi
 3594              		.loc 1 1540 0
 3595 0078 2168     		ldr	r1, [r4]
 3596 007a 2431     		add	r1, r1, #36
 3597 007c 238D     		ldrh	r3, [r4, #40]
 3598 007e E06B     		ldr	r0, [r4, #60]
 3599 0080 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3600              	.LVL303:
1544:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c,DevAddress,hi2c->XferSize, xfermode, I2C_GENERATE_START_READ);
 3601              		.loc 1 1544 0
 3602 0084 228D     		ldrh	r2, [r4, #40]
 3603 0086 D2B2     		uxtb	r2, r2
 3604 0088 9023     		mov	r3, #144
 3605 008a 9B01     		lsl	r3, r3, #6
 3606 008c 0093     		str	r3, [sp]
 3607 008e 201C     		mov	r0, r4
 3608 0090 291C     		mov	r1, r5
 3609 0092 3B1C     		mov	r3, r7
ARM GAS  /tmp/cchP46LN.s 			page 158


 3610 0094 FFF7FEFF 		bl	I2C_TransferConfig
 3611              	.LVL304:
1547:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
 3612              		.loc 1 1547 0
 3613 0098 628D     		ldrh	r2, [r4, #42]
 3614 009a 238D     		ldrh	r3, [r4, #40]
 3615 009c D31A     		sub	r3, r2, r3
 3616 009e 9BB2     		uxth	r3, r3
 3617 00a0 6385     		strh	r3, [r4, #42]
1550:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
 3618              		.loc 1 1550 0
 3619 00a2 4023     		mov	r3, #64
 3620 00a4 E654     		strb	r6, [r4, r3]
1556:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
 3621              		.loc 1 1556 0
 3622 00a6 201C     		mov	r0, r4
 3623 00a8 1121     		mov	r1, #17
 3624 00aa FFF7FEFF 		bl	I2C_Enable_IRQ
 3625              	.LVL305:
1559:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
 3626              		.loc 1 1559 0
 3627 00ae 2368     		ldr	r3, [r4]
 3628 00b0 1968     		ldr	r1, [r3]
 3629 00b2 8022     		mov	r2, #128
 3630 00b4 1202     		lsl	r2, r2, #8
 3631 00b6 0A43     		orr	r2, r1
 3632 00b8 1A60     		str	r2, [r3]
1581:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
 3633              		.loc 1 1581 0
 3634 00ba 0020     		mov	r0, #0
 3635 00bc 19E0     		b	.L237
 3636              	.LVL306:
 3637              	.L240:
1564:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
 3638              		.loc 1 1564 0
 3639 00be 124B     		ldr	r3, .L244+16
 3640 00c0 6363     		str	r3, [r4, #52]
1568:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_REA
 3641              		.loc 1 1568 0
 3642 00c2 CAB2     		uxtb	r2, r1
 3643              	.LVL307:
 3644 00c4 9023     		mov	r3, #144
 3645 00c6 9B01     		lsl	r3, r3, #6
 3646 00c8 0093     		str	r3, [sp]
 3647              	.LVL308:
 3648 00ca 201C     		mov	r0, r4
 3649 00cc 291C     		mov	r1, r5
 3650 00ce 8023     		mov	r3, #128
 3651 00d0 9B04     		lsl	r3, r3, #18
 3652 00d2 FFF7FEFF 		bl	I2C_TransferConfig
 3653              	.LVL309:
1571:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
 3654              		.loc 1 1571 0
 3655 00d6 0022     		mov	r2, #0
 3656 00d8 4023     		mov	r3, #64
 3657 00da E254     		strb	r2, [r4, r3]
1579:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
ARM GAS  /tmp/cchP46LN.s 			page 159


 3658              		.loc 1 1579 0
 3659 00dc 201C     		mov	r0, r4
 3660 00de 0121     		mov	r1, #1
 3661 00e0 FFF7FEFF 		bl	I2C_Enable_IRQ
 3662              	.LVL310:
1581:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
 3663              		.loc 1 1581 0
 3664 00e4 0020     		mov	r0, #0
 3665 00e6 04E0     		b	.L237
 3666              	.LVL311:
 3667              	.L241:
1585:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
 3668              		.loc 1 1585 0
 3669 00e8 0220     		mov	r0, #2
 3670 00ea 02E0     		b	.L237
 3671              	.LVL312:
 3672              	.L242:
1500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_BUSY;
 3673              		.loc 1 1500 0
 3674 00ec 0220     		mov	r0, #2
 3675 00ee 00E0     		b	.L237
 3676              	.L243:
1504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 3677              		.loc 1 1504 0
 3678 00f0 0220     		mov	r0, #2
 3679              	.LVL313:
 3680              	.L237:
1587:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 3681              		.loc 1 1587 0
 3682 00f2 03B0     		add	sp, sp, #12
 3683              		@ sp needed
 3684              	.LVL314:
 3685 00f4 F0BD     		pop	{r4, r5, r6, r7, pc}
 3686              	.L245:
 3687 00f6 C046     		.align	2
 3688              	.L244:
 3689 00f8 0000FFFF 		.word	-65536
 3690 00fc 00000000 		.word	I2C_Master_ISR_DMA
 3691 0100 00000000 		.word	I2C_DMAMasterReceiveCplt
 3692 0104 00000000 		.word	I2C_DMAError
 3693 0108 00000000 		.word	I2C_Master_ISR_IT
 3694              		.cfi_endproc
 3695              	.LFE49:
 3697              		.section	.text.HAL_I2C_Slave_Transmit_DMA,"ax",%progbits
 3698              		.align	2
 3699              		.global	HAL_I2C_Slave_Transmit_DMA
 3700              		.code	16
 3701              		.thumb_func
 3703              	HAL_I2C_Slave_Transmit_DMA:
 3704              	.LFB50:
1598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 3705              		.loc 1 1598 0
 3706              		.cfi_startproc
 3707              	.LVL315:
 3708 0000 70B5     		push	{r4, r5, r6, lr}
 3709              	.LCFI39:
 3710              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/cchP46LN.s 			page 160


 3711              		.cfi_offset 4, -16
 3712              		.cfi_offset 5, -12
 3713              		.cfi_offset 6, -8
 3714              		.cfi_offset 14, -4
 3715 0002 041C     		mov	r4, r0
1599:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 3716              		.loc 1 1599 0
 3717 0004 4123     		mov	r3, #65
 3718 0006 C35C     		ldrb	r3, [r0, r3]
 3719 0008 202B     		cmp	r3, #32
 3720 000a 3CD1     		bne	.L248
1601:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 3721              		.loc 1 1601 0
 3722 000c 0029     		cmp	r1, #0
 3723 000e 3CD0     		beq	.L249
1601:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 3724              		.loc 1 1601 0 is_stmt 0 discriminator 1
 3725 0010 002A     		cmp	r2, #0
 3726 0012 3CD0     		beq	.L250
1606:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 3727              		.loc 1 1606 0 is_stmt 1
 3728 0014 4023     		mov	r3, #64
 3729 0016 C35C     		ldrb	r3, [r0, r3]
 3730 0018 012B     		cmp	r3, #1
 3731 001a 3AD0     		beq	.L251
1606:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 3732              		.loc 1 1606 0 is_stmt 0 discriminator 2
 3733 001c 4026     		mov	r6, #64
 3734 001e 0123     		mov	r3, #1
 3735 0020 8355     		strb	r3, [r0, r6]
1608:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
 3736              		.loc 1 1608 0 is_stmt 1 discriminator 2
 3737 0022 2120     		mov	r0, #33
 3738              	.LVL316:
 3739 0024 4123     		mov	r3, #65
 3740 0026 E054     		strb	r0, [r4, r3]
1609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 3741              		.loc 1 1609 0 discriminator 2
 3742 0028 2020     		mov	r0, #32
 3743 002a 4223     		mov	r3, #66
 3744 002c E054     		strb	r0, [r4, r3]
1610:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3745              		.loc 1 1610 0 discriminator 2
 3746 002e 0025     		mov	r5, #0
 3747 0030 6564     		str	r5, [r4, #68]
1613:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 3748              		.loc 1 1613 0 discriminator 2
 3749 0032 6162     		str	r1, [r4, #36]
1614:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3750              		.loc 1 1614 0 discriminator 2
 3751 0034 6285     		strh	r2, [r4, #42]
1615:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 3752              		.loc 1 1615 0 discriminator 2
 3753 0036 638D     		ldrh	r3, [r4, #42]
 3754 0038 2385     		strh	r3, [r4, #40]
1616:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3755              		.loc 1 1616 0 discriminator 2
ARM GAS  /tmp/cchP46LN.s 			page 161


 3756 003a 174B     		ldr	r3, .L252
 3757 003c E362     		str	r3, [r4, #44]
1617:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
 3758              		.loc 1 1617 0 discriminator 2
 3759 003e 174B     		ldr	r3, .L252+4
 3760 0040 6363     		str	r3, [r4, #52]
1620:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->hdmatx->XferCpltCallback = I2C_DMASlaveTransmitCplt;
 3761              		.loc 1 1620 0 discriminator 2
 3762 0042 A36B     		ldr	r3, [r4, #56]
 3763 0044 164A     		ldr	r2, .L252+8
 3764              	.LVL317:
 3765 0046 DA62     		str	r2, [r3, #44]
1623:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
 3766              		.loc 1 1623 0 discriminator 2
 3767 0048 A36B     		ldr	r3, [r4, #56]
 3768 004a 164A     		ldr	r2, .L252+12
 3769 004c 5A63     		str	r2, [r3, #52]
1626:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->hdmatx->XferHalfCpltCallback = NULL;
 3770              		.loc 1 1626 0 discriminator 2
 3771 004e A36B     		ldr	r3, [r4, #56]
 3772 0050 1D63     		str	r5, [r3, #48]
1627:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->hdmatx->XferAbortCallback = NULL;
 3773              		.loc 1 1627 0 discriminator 2
 3774 0052 A36B     		ldr	r3, [r4, #56]
 3775 0054 9D63     		str	r5, [r3, #56]
1630:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->TXDR, hi2c->XferSize
 3776              		.loc 1 1630 0 discriminator 2
 3777 0056 2268     		ldr	r2, [r4]
 3778 0058 2832     		add	r2, r2, #40
 3779 005a 238D     		ldrh	r3, [r4, #40]
 3780 005c A06B     		ldr	r0, [r4, #56]
 3781 005e FFF7FEFF 		bl	HAL_DMA_Start_IT
 3782              	.LVL318:
1633:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
 3783              		.loc 1 1633 0 discriminator 2
 3784 0062 2368     		ldr	r3, [r4]
 3785 0064 5968     		ldr	r1, [r3, #4]
 3786 0066 104A     		ldr	r2, .L252+16
 3787 0068 0A40     		and	r2, r1
 3788 006a 5A60     		str	r2, [r3, #4]
1636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 3789              		.loc 1 1636 0 discriminator 2
 3790 006c A555     		strb	r5, [r4, r6]
1642:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
 3791              		.loc 1 1642 0 discriminator 2
 3792 006e 201C     		mov	r0, r4
 3793 0070 0421     		mov	r1, #4
 3794 0072 FFF7FEFF 		bl	I2C_Enable_IRQ
 3795              	.LVL319:
1645:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN; 
 3796              		.loc 1 1645 0 discriminator 2
 3797 0076 2368     		ldr	r3, [r4]
 3798 0078 1968     		ldr	r1, [r3]
 3799 007a 8022     		mov	r2, #128
 3800 007c D201     		lsl	r2, r2, #7
 3801 007e 0A43     		orr	r2, r1
 3802 0080 1A60     		str	r2, [r3]
ARM GAS  /tmp/cchP46LN.s 			page 162


1647:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
 3803              		.loc 1 1647 0 discriminator 2
 3804 0082 0020     		mov	r0, #0
 3805 0084 06E0     		b	.L247
 3806              	.LVL320:
 3807              	.L248:
1651:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
 3808              		.loc 1 1651 0
 3809 0086 0220     		mov	r0, #2
 3810              	.LVL321:
 3811 0088 04E0     		b	.L247
 3812              	.LVL322:
 3813              	.L249:
1603:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return  HAL_ERROR;
 3814              		.loc 1 1603 0
 3815 008a 0120     		mov	r0, #1
 3816              	.LVL323:
 3817 008c 02E0     		b	.L247
 3818              	.LVL324:
 3819              	.L250:
 3820 008e 0120     		mov	r0, #1
 3821              	.LVL325:
 3822 0090 00E0     		b	.L247
 3823              	.LVL326:
 3824              	.L251:
1606:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 3825              		.loc 1 1606 0
 3826 0092 0220     		mov	r0, #2
 3827              	.LVL327:
 3828              	.L247:
1653:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 3829              		.loc 1 1653 0
 3830              		@ sp needed
 3831              	.LVL328:
 3832 0094 70BD     		pop	{r4, r5, r6, pc}
 3833              	.L253:
 3834 0096 C046     		.align	2
 3835              	.L252:
 3836 0098 0000FFFF 		.word	-65536
 3837 009c 00000000 		.word	I2C_Slave_ISR_DMA
 3838 00a0 00000000 		.word	I2C_DMASlaveTransmitCplt
 3839 00a4 00000000 		.word	I2C_DMAError
 3840 00a8 FF7FFFFF 		.word	-32769
 3841              		.cfi_endproc
 3842              	.LFE50:
 3844              		.section	.text.HAL_I2C_Slave_Receive_DMA,"ax",%progbits
 3845              		.align	2
 3846              		.global	HAL_I2C_Slave_Receive_DMA
 3847              		.code	16
 3848              		.thumb_func
 3850              	HAL_I2C_Slave_Receive_DMA:
 3851              	.LFB51:
1664:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 3852              		.loc 1 1664 0
 3853              		.cfi_startproc
 3854              	.LVL329:
 3855 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
ARM GAS  /tmp/cchP46LN.s 			page 163


 3856              	.LCFI40:
 3857              		.cfi_def_cfa_offset 24
 3858              		.cfi_offset 3, -24
 3859              		.cfi_offset 4, -20
 3860              		.cfi_offset 5, -16
 3861              		.cfi_offset 6, -12
 3862              		.cfi_offset 7, -8
 3863              		.cfi_offset 14, -4
 3864 0002 041C     		mov	r4, r0
 3865 0004 0D1C     		mov	r5, r1
1665:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 3866              		.loc 1 1665 0
 3867 0006 4123     		mov	r3, #65
 3868 0008 C35C     		ldrb	r3, [r0, r3]
 3869 000a 202B     		cmp	r3, #32
 3870 000c 3DD1     		bne	.L256
1667:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U)) 
 3871              		.loc 1 1667 0
 3872 000e 0029     		cmp	r1, #0
 3873 0010 3DD0     		beq	.L257
1667:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U)) 
 3874              		.loc 1 1667 0 is_stmt 0 discriminator 1
 3875 0012 002A     		cmp	r2, #0
 3876 0014 3DD0     		beq	.L258
1672:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 3877              		.loc 1 1672 0 is_stmt 1
 3878 0016 4023     		mov	r3, #64
 3879 0018 C35C     		ldrb	r3, [r0, r3]
 3880 001a 012B     		cmp	r3, #1
 3881 001c 3BD0     		beq	.L259
1672:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 3882              		.loc 1 1672 0 is_stmt 0 discriminator 2
 3883 001e 4027     		mov	r7, #64
 3884 0020 0123     		mov	r3, #1
 3885 0022 C355     		strb	r3, [r0, r7]
1674:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
 3886              		.loc 1 1674 0 is_stmt 1 discriminator 2
 3887 0024 2221     		mov	r1, #34
 3888              	.LVL330:
 3889 0026 4123     		mov	r3, #65
 3890 0028 C154     		strb	r1, [r0, r3]
1675:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 3891              		.loc 1 1675 0 discriminator 2
 3892 002a 2021     		mov	r1, #32
 3893 002c 4223     		mov	r3, #66
 3894 002e C154     		strb	r1, [r0, r3]
1676:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3895              		.loc 1 1676 0 discriminator 2
 3896 0030 0026     		mov	r6, #0
 3897 0032 4664     		str	r6, [r0, #68]
1679:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 3898              		.loc 1 1679 0 discriminator 2
 3899 0034 4562     		str	r5, [r0, #36]
1680:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3900              		.loc 1 1680 0 discriminator 2
 3901 0036 4285     		strh	r2, [r0, #42]
1681:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
ARM GAS  /tmp/cchP46LN.s 			page 164


 3902              		.loc 1 1681 0 discriminator 2
 3903 0038 438D     		ldrh	r3, [r0, #42]
 3904 003a 0385     		strh	r3, [r0, #40]
1682:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3905              		.loc 1 1682 0 discriminator 2
 3906 003c 174B     		ldr	r3, .L260
 3907 003e C362     		str	r3, [r0, #44]
1683:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
 3908              		.loc 1 1683 0 discriminator 2
 3909 0040 174B     		ldr	r3, .L260+4
 3910 0042 4363     		str	r3, [r0, #52]
1686:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->hdmarx->XferCpltCallback = I2C_DMASlaveReceiveCplt;
 3911              		.loc 1 1686 0 discriminator 2
 3912 0044 C36B     		ldr	r3, [r0, #60]
 3913 0046 174A     		ldr	r2, .L260+8
 3914              	.LVL331:
 3915 0048 DA62     		str	r2, [r3, #44]
1689:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
 3916              		.loc 1 1689 0 discriminator 2
 3917 004a C36B     		ldr	r3, [r0, #60]
 3918 004c 164A     		ldr	r2, .L260+12
 3919 004e 5A63     		str	r2, [r3, #52]
1692:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->hdmarx->XferHalfCpltCallback = NULL;
 3920              		.loc 1 1692 0 discriminator 2
 3921 0050 C36B     		ldr	r3, [r0, #60]
 3922 0052 1E63     		str	r6, [r3, #48]
1693:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->hdmarx->XferAbortCallback = NULL;
 3923              		.loc 1 1693 0 discriminator 2
 3924 0054 C36B     		ldr	r3, [r0, #60]
 3925 0056 9E63     		str	r6, [r3, #56]
1696:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)pData, hi2c->XferSize
 3926              		.loc 1 1696 0 discriminator 2
 3927 0058 0168     		ldr	r1, [r0]
 3928 005a 2431     		add	r1, r1, #36
 3929 005c 038D     		ldrh	r3, [r0, #40]
 3930 005e C06B     		ldr	r0, [r0, #60]
 3931              	.LVL332:
 3932 0060 2A1C     		mov	r2, r5
 3933 0062 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3934              	.LVL333:
1699:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
 3935              		.loc 1 1699 0 discriminator 2
 3936 0066 2368     		ldr	r3, [r4]
 3937 0068 5968     		ldr	r1, [r3, #4]
 3938 006a 104A     		ldr	r2, .L260+16
 3939 006c 0A40     		and	r2, r1
 3940 006e 5A60     		str	r2, [r3, #4]
1702:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 3941              		.loc 1 1702 0 discriminator 2
 3942 0070 E655     		strb	r6, [r4, r7]
1708:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
 3943              		.loc 1 1708 0 discriminator 2
 3944 0072 201C     		mov	r0, r4
 3945 0074 0421     		mov	r1, #4
 3946 0076 FFF7FEFF 		bl	I2C_Enable_IRQ
 3947              	.LVL334:
1711:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
ARM GAS  /tmp/cchP46LN.s 			page 165


 3948              		.loc 1 1711 0 discriminator 2
 3949 007a 2368     		ldr	r3, [r4]
 3950 007c 1968     		ldr	r1, [r3]
 3951 007e 8022     		mov	r2, #128
 3952 0080 1202     		lsl	r2, r2, #8
 3953 0082 0A43     		orr	r2, r1
 3954 0084 1A60     		str	r2, [r3]
1713:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
 3955              		.loc 1 1713 0 discriminator 2
 3956 0086 0020     		mov	r0, #0
 3957 0088 06E0     		b	.L255
 3958              	.LVL335:
 3959              	.L256:
1717:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
 3960              		.loc 1 1717 0
 3961 008a 0220     		mov	r0, #2
 3962              	.LVL336:
 3963 008c 04E0     		b	.L255
 3964              	.LVL337:
 3965              	.L257:
1669:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return  HAL_ERROR;
 3966              		.loc 1 1669 0
 3967 008e 0120     		mov	r0, #1
 3968              	.LVL338:
 3969 0090 02E0     		b	.L255
 3970              	.LVL339:
 3971              	.L258:
 3972 0092 0120     		mov	r0, #1
 3973              	.LVL340:
 3974 0094 00E0     		b	.L255
 3975              	.LVL341:
 3976              	.L259:
1672:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 3977              		.loc 1 1672 0
 3978 0096 0220     		mov	r0, #2
 3979              	.LVL342:
 3980              	.L255:
1719:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 3981              		.loc 1 1719 0
 3982              		@ sp needed
 3983              	.LVL343:
 3984              	.LVL344:
 3985 0098 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3986              	.L261:
 3987 009a C046     		.align	2
 3988              	.L260:
 3989 009c 0000FFFF 		.word	-65536
 3990 00a0 00000000 		.word	I2C_Slave_ISR_DMA
 3991 00a4 00000000 		.word	I2C_DMASlaveReceiveCplt
 3992 00a8 00000000 		.word	I2C_DMAError
 3993 00ac FF7FFFFF 		.word	-32769
 3994              		.cfi_endproc
 3995              	.LFE51:
 3997              		.section	.text.HAL_I2C_Mem_Write,"ax",%progbits
 3998              		.align	2
 3999              		.global	HAL_I2C_Mem_Write
 4000              		.code	16
ARM GAS  /tmp/cchP46LN.s 			page 166


 4001              		.thumb_func
 4003              	HAL_I2C_Mem_Write:
 4004              	.LFB52:
1734:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 4005              		.loc 1 1734 0
 4006              		.cfi_startproc
 4007              	.LVL345:
 4008 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4009              	.LCFI41:
 4010              		.cfi_def_cfa_offset 20
 4011              		.cfi_offset 4, -20
 4012              		.cfi_offset 5, -16
 4013              		.cfi_offset 6, -12
 4014              		.cfi_offset 7, -8
 4015              		.cfi_offset 14, -4
 4016 0002 4F46     		mov	r7, r9
 4017 0004 4646     		mov	r6, r8
 4018 0006 C0B4     		push	{r6, r7}
 4019              	.LCFI42:
 4020              		.cfi_def_cfa_offset 28
 4021              		.cfi_offset 8, -28
 4022              		.cfi_offset 9, -24
 4023 0008 83B0     		sub	sp, sp, #12
 4024              	.LCFI43:
 4025              		.cfi_def_cfa_offset 40
 4026 000a 051C     		mov	r5, r0
 4027 000c 0E1C     		mov	r6, r1
 4028 000e 9046     		mov	r8, r2
 4029 0010 1F1C     		mov	r7, r3
 4030 0012 0AAC     		add	r4, sp, #40
 4031              	.LVL346:
 4032 0014 04CC     		ldmia	r4!, {r2}
 4033              	.LVL347:
 4034 0016 2488     		ldrh	r4, [r4]
 4035              	.LVL348:
1740:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 4036              		.loc 1 1740 0
 4037 0018 4120     		mov	r0, #65
 4038              	.LVL349:
 4039 001a 285C     		ldrb	r0, [r5, r0]
 4040 001c 2028     		cmp	r0, #32
 4041 001e 00D0     		beq	.LCB4061
 4042 0020 C5E0     		b	.L273	@long jump
 4043              	.LCB4061:
1742:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 4044              		.loc 1 1742 0
 4045 0022 002A     		cmp	r2, #0
 4046 0024 00D1     		bne	.LCB4063
 4047 0026 C4E0     		b	.L274	@long jump
 4048              	.LCB4063:
1742:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 4049              		.loc 1 1742 0 is_stmt 0 discriminator 1
 4050 0028 002C     		cmp	r4, #0
 4051 002a 00D1     		bne	.LCB4065
 4052 002c C3E0     		b	.L275	@long jump
 4053              	.LCB4065:
1748:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
ARM GAS  /tmp/cchP46LN.s 			page 167


 4054              		.loc 1 1748 0 is_stmt 1
 4055 002e 4023     		mov	r3, #64
 4056              	.LVL350:
 4057 0030 EB5C     		ldrb	r3, [r5, r3]
 4058 0032 012B     		cmp	r3, #1
 4059 0034 00D1     		bne	.LCB4070
 4060 0036 C0E0     		b	.L276	@long jump
 4061              	.LCB4070:
1748:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 4062              		.loc 1 1748 0 is_stmt 0 discriminator 2
 4063 0038 0122     		mov	r2, #1
 4064 003a 4023     		mov	r3, #64
 4065 003c EA54     		strb	r2, [r5, r3]
1751:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     tickstart = HAL_GetTick();
 4066              		.loc 1 1751 0 is_stmt 1 discriminator 2
 4067 003e FFF7FEFF 		bl	HAL_GetTick
 4068              	.LVL351:
 4069 0042 8146     		mov	r9, r0
 4070              	.LVL352:
1753:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 4071              		.loc 1 1753 0 discriminator 2
 4072 0044 0090     		str	r0, [sp]
 4073 0046 281C     		mov	r0, r5
 4074              	.LVL353:
 4075 0048 8021     		mov	r1, #128
 4076 004a 0902     		lsl	r1, r1, #8
 4077 004c 0122     		mov	r2, #1
 4078 004e 1923     		mov	r3, #25
 4079 0050 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 4080              	.LVL354:
 4081 0054 0028     		cmp	r0, #0
 4082 0056 00D0     		beq	.LCB4089
 4083 0058 B1E0     		b	.L277	@long jump
 4084              	.LCB4089:
1758:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 4085              		.loc 1 1758 0
 4086 005a 2122     		mov	r2, #33
 4087 005c 4123     		mov	r3, #65
 4088 005e EA54     		strb	r2, [r5, r3]
1759:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
 4089              		.loc 1 1759 0
 4090 0060 4022     		mov	r2, #64
 4091 0062 4223     		mov	r3, #66
 4092 0064 EA54     		strb	r2, [r5, r3]
1760:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 4093              		.loc 1 1760 0
 4094 0066 0023     		mov	r3, #0
 4095 0068 6B64     		str	r3, [r5, #68]
1763:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
 4096              		.loc 1 1763 0
 4097 006a 0A9A     		ldr	r2, [sp, #40]
 4098 006c 6A62     		str	r2, [r5, #36]
1764:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount = Size;
 4099              		.loc 1 1764 0
 4100 006e 6C85     		strh	r4, [r5, #42]
1765:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 4101              		.loc 1 1765 0
ARM GAS  /tmp/cchP46LN.s 			page 168


 4102 0070 6B63     		str	r3, [r5, #52]
1768:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_
 4103              		.loc 1 1768 0
 4104 0072 0C9B     		ldr	r3, [sp, #48]
 4105 0074 0093     		str	r3, [sp]
 4106 0076 4A46     		mov	r2, r9
 4107 0078 0192     		str	r2, [sp, #4]
 4108 007a 281C     		mov	r0, r5
 4109 007c 311C     		mov	r1, r6
 4110 007e 4246     		mov	r2, r8
 4111 0080 3B1C     		mov	r3, r7
 4112 0082 FFF7FEFF 		bl	I2C_RequestMemoryWrite
 4113              	.LVL355:
 4114 0086 0028     		cmp	r0, #0
 4115 0088 0CD0     		beq	.L264
1770:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 4116              		.loc 1 1770 0
 4117 008a 6B6C     		ldr	r3, [r5, #68]
 4118 008c 042B     		cmp	r3, #4
 4119 008e 04D1     		bne	.L265
1773:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 4120              		.loc 1 1773 0
 4121 0090 0022     		mov	r2, #0
 4122 0092 4023     		mov	r3, #64
 4123 0094 EA54     		strb	r2, [r5, r3]
1774:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_ERROR;
 4124              		.loc 1 1774 0
 4125 0096 0120     		mov	r0, #1
 4126 0098 98E0     		b	.L263
 4127              	.L265:
1779:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 4128              		.loc 1 1779 0
 4129 009a 0022     		mov	r2, #0
 4130 009c 4023     		mov	r3, #64
 4131 009e EA54     		strb	r2, [r5, r3]
1780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_TIMEOUT;
 4132              		.loc 1 1780 0
 4133 00a0 0320     		mov	r0, #3
 4134 00a2 93E0     		b	.L263
 4135              	.L264:
1785:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
 4136              		.loc 1 1785 0
 4137 00a4 6B8D     		ldrh	r3, [r5, #42]
 4138 00a6 9BB2     		uxth	r3, r3
 4139 00a8 FF2B     		cmp	r3, #255
 4140 00aa 0BD9     		bls	.L266
1787:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 4141              		.loc 1 1787 0
 4142 00ac FF23     		mov	r3, #255
 4143 00ae 2B85     		strh	r3, [r5, #40]
1788:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 4144              		.loc 1 1788 0
 4145 00b0 0023     		mov	r3, #0
 4146 00b2 0093     		str	r3, [sp]
 4147 00b4 281C     		mov	r0, r5
 4148 00b6 311C     		mov	r1, r6
 4149 00b8 FF22     		mov	r2, #255
ARM GAS  /tmp/cchP46LN.s 			page 169


 4150 00ba 8023     		mov	r3, #128
 4151 00bc 5B04     		lsl	r3, r3, #17
 4152 00be FFF7FEFF 		bl	I2C_TransferConfig
 4153              	.LVL356:
 4154 00c2 0BE0     		b	.L271
 4155              	.L266:
1792:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 4156              		.loc 1 1792 0
 4157 00c4 6A8D     		ldrh	r2, [r5, #42]
 4158 00c6 92B2     		uxth	r2, r2
 4159 00c8 2A85     		strh	r2, [r5, #40]
1793:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 4160              		.loc 1 1793 0
 4161 00ca D2B2     		uxtb	r2, r2
 4162 00cc 0023     		mov	r3, #0
 4163 00ce 0093     		str	r3, [sp]
 4164 00d0 281C     		mov	r0, r5
 4165 00d2 311C     		mov	r1, r6
 4166 00d4 8023     		mov	r3, #128
 4167 00d6 9B04     		lsl	r3, r3, #18
 4168 00d8 FFF7FEFF 		bl	I2C_TransferConfig
 4169              	.LVL357:
 4170              	.L271:
1832:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 4171              		.loc 1 1832 0
 4172 00dc 8023     		mov	r3, #128
 4173 00de 9B04     		lsl	r3, r3, #18
 4174 00e0 9846     		mov	r8, r3
1826:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
 4175              		.loc 1 1826 0
 4176 00e2 FF24     		mov	r4, #255
1827:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 4177              		.loc 1 1827 0
 4178 00e4 8027     		mov	r7, #128
 4179 00e6 7F04     		lsl	r7, r7, #17
 4180              	.L281:
1799:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 4181              		.loc 1 1799 0
 4182 00e8 281C     		mov	r0, r5
 4183 00ea 0C99     		ldr	r1, [sp, #48]
 4184 00ec 4A46     		mov	r2, r9
 4185 00ee FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 4186              	.LVL358:
 4187 00f2 0028     		cmp	r0, #0
 4188 00f4 04D0     		beq	.L268
1801:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 4189              		.loc 1 1801 0
 4190 00f6 6B6C     		ldr	r3, [r5, #68]
 4191 00f8 042B     		cmp	r3, #4
 4192 00fa 62D1     		bne	.L278
1803:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           return HAL_ERROR;
 4193              		.loc 1 1803 0
 4194 00fc 0120     		mov	r0, #1
 4195 00fe 65E0     		b	.L263
 4196              	.L268:
1812:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Instance->TXDR = (*hi2c->pBuffPtr++);
 4197              		.loc 1 1812 0
ARM GAS  /tmp/cchP46LN.s 			page 170


 4198 0100 2B68     		ldr	r3, [r5]
 4199 0102 696A     		ldr	r1, [r5, #36]
 4200 0104 4A1C     		add	r2, r1, #1
 4201 0106 6A62     		str	r2, [r5, #36]
 4202 0108 0A78     		ldrb	r2, [r1]
 4203 010a 9A62     		str	r2, [r3, #40]
1813:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferCount--;
 4204              		.loc 1 1813 0
 4205 010c 6B8D     		ldrh	r3, [r5, #42]
 4206 010e 013B     		sub	r3, r3, #1
 4207 0110 9BB2     		uxth	r3, r3
 4208 0112 6B85     		strh	r3, [r5, #42]
1814:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize--;
 4209              		.loc 1 1814 0
 4210 0114 298D     		ldrh	r1, [r5, #40]
 4211 0116 0139     		sub	r1, r1, #1
 4212 0118 89B2     		uxth	r1, r1
 4213 011a 2985     		strh	r1, [r5, #40]
1816:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if((hi2c->XferSize == 0U) && (hi2c->XferCount!=0U))
 4214              		.loc 1 1816 0
 4215 011c 0029     		cmp	r1, #0
 4216 011e 26D1     		bne	.L269
1816:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if((hi2c->XferSize == 0U) && (hi2c->XferCount!=0U))
 4217              		.loc 1 1816 0 is_stmt 0 discriminator 1
 4218 0120 6B8D     		ldrh	r3, [r5, #42]
 4219 0122 9BB2     		uxth	r3, r3
 4220 0124 002B     		cmp	r3, #0
 4221 0126 22D0     		beq	.L269
1819:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 4222              		.loc 1 1819 0 is_stmt 1
 4223 0128 4B46     		mov	r3, r9
 4224 012a 0093     		str	r3, [sp]
 4225 012c 281C     		mov	r0, r5
 4226 012e 8021     		mov	r1, #128
 4227 0130 0022     		mov	r2, #0
 4228 0132 0C9B     		ldr	r3, [sp, #48]
 4229 0134 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 4230              	.LVL359:
 4231 0138 0028     		cmp	r0, #0
 4232 013a 44D1     		bne	.L279
1824:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         if(hi2c->XferCount > MAX_NBYTE_SIZE)
 4233              		.loc 1 1824 0
 4234 013c 6B8D     		ldrh	r3, [r5, #42]
 4235 013e 9BB2     		uxth	r3, r3
 4236 0140 FF2B     		cmp	r3, #255
 4237 0142 09D9     		bls	.L270
1826:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
 4238              		.loc 1 1826 0
 4239 0144 2C85     		strh	r4, [r5, #40]
1827:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 4240              		.loc 1 1827 0
 4241 0146 0023     		mov	r3, #0
 4242 0148 0093     		str	r3, [sp]
 4243 014a 281C     		mov	r0, r5
 4244 014c 311C     		mov	r1, r6
 4245 014e 221C     		mov	r2, r4
 4246 0150 3B1C     		mov	r3, r7
ARM GAS  /tmp/cchP46LN.s 			page 171


 4247 0152 FFF7FEFF 		bl	I2C_TransferConfig
 4248              	.LVL360:
 4249 0156 0AE0     		b	.L269
 4250              	.L270:
1831:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
 4251              		.loc 1 1831 0
 4252 0158 6A8D     		ldrh	r2, [r5, #42]
 4253 015a 92B2     		uxth	r2, r2
 4254 015c 2A85     		strh	r2, [r5, #40]
1832:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 4255              		.loc 1 1832 0
 4256 015e D2B2     		uxtb	r2, r2
 4257 0160 0023     		mov	r3, #0
 4258 0162 0093     		str	r3, [sp]
 4259 0164 281C     		mov	r0, r5
 4260 0166 311C     		mov	r1, r6
 4261 0168 4346     		mov	r3, r8
 4262 016a FFF7FEFF 		bl	I2C_TransferConfig
 4263              	.LVL361:
 4264              	.L269:
1836:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }while(hi2c->XferCount > 0U);
 4265              		.loc 1 1836 0
 4266 016e 6B8D     		ldrh	r3, [r5, #42]
 4267 0170 9BB2     		uxth	r3, r3
 4268 0172 002B     		cmp	r3, #0
 4269 0174 B8D1     		bne	.L281
1840:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 4270              		.loc 1 1840 0
 4271 0176 281C     		mov	r0, r5
 4272 0178 0C99     		ldr	r1, [sp, #48]
 4273 017a 4A46     		mov	r2, r9
 4274 017c FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 4275              	.LVL362:
 4276 0180 0028     		cmp	r0, #0
 4277 0182 04D0     		beq	.L272
1842:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 4278              		.loc 1 1842 0
 4279 0184 6B6C     		ldr	r3, [r5, #68]
 4280 0186 042B     		cmp	r3, #4
 4281 0188 1FD1     		bne	.L280
1844:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_ERROR;
 4282              		.loc 1 1844 0
 4283 018a 0120     		mov	r0, #1
 4284 018c 1EE0     		b	.L263
 4285              	.L272:
1853:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 4286              		.loc 1 1853 0
 4287 018e 2A68     		ldr	r2, [r5]
 4288 0190 2023     		mov	r3, #32
 4289 0192 D361     		str	r3, [r2, #28]
1856:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
 4290              		.loc 1 1856 0
 4291 0194 2A68     		ldr	r2, [r5]
 4292 0196 5468     		ldr	r4, [r2, #4]
 4293 0198 0F49     		ldr	r1, .L283
 4294 019a 2140     		and	r1, r4
 4295 019c 5160     		str	r1, [r2, #4]
ARM GAS  /tmp/cchP46LN.s 			page 172


1858:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 4296              		.loc 1 1858 0
 4297 019e 4122     		mov	r2, #65
 4298 01a0 AB54     		strb	r3, [r5, r2]
1859:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 4299              		.loc 1 1859 0
 4300 01a2 0023     		mov	r3, #0
 4301 01a4 4222     		mov	r2, #66
 4302 01a6 AB54     		strb	r3, [r5, r2]
1862:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 4303              		.loc 1 1862 0
 4304 01a8 4022     		mov	r2, #64
 4305 01aa AB54     		strb	r3, [r5, r2]
1864:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
 4306              		.loc 1 1864 0
 4307 01ac 0EE0     		b	.L263
 4308              	.LVL363:
 4309              	.L273:
1868:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
 4310              		.loc 1 1868 0
 4311 01ae 0220     		mov	r0, #2
 4312 01b0 0CE0     		b	.L263
 4313              	.L274:
1744:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return  HAL_ERROR;
 4314              		.loc 1 1744 0
 4315 01b2 0120     		mov	r0, #1
 4316 01b4 0AE0     		b	.L263
 4317              	.L275:
 4318 01b6 0120     		mov	r0, #1
 4319 01b8 08E0     		b	.L263
 4320              	.LVL364:
 4321              	.L276:
1748:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 4322              		.loc 1 1748 0
 4323 01ba 0220     		mov	r0, #2
 4324 01bc 06E0     		b	.L263
 4325              	.LVL365:
 4326              	.L277:
1755:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_TIMEOUT;
 4327              		.loc 1 1755 0
 4328 01be 0320     		mov	r0, #3
 4329 01c0 04E0     		b	.L263
 4330              	.L278:
1807:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           return HAL_TIMEOUT;
 4331              		.loc 1 1807 0
 4332 01c2 0320     		mov	r0, #3
 4333 01c4 02E0     		b	.L263
 4334              	.L279:
1821:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           return HAL_TIMEOUT;
 4335              		.loc 1 1821 0
 4336 01c6 0320     		mov	r0, #3
 4337 01c8 00E0     		b	.L263
 4338              	.L280:
1848:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_TIMEOUT;
 4339              		.loc 1 1848 0
 4340 01ca 0320     		mov	r0, #3
 4341              	.LVL366:
ARM GAS  /tmp/cchP46LN.s 			page 173


 4342              	.L263:
1870:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 4343              		.loc 1 1870 0
 4344 01cc 03B0     		add	sp, sp, #12
 4345              		@ sp needed
 4346              	.LVL367:
 4347 01ce 0CBC     		pop	{r2, r3}
 4348 01d0 9046     		mov	r8, r2
 4349 01d2 9946     		mov	r9, r3
 4350 01d4 F0BD     		pop	{r4, r5, r6, r7, pc}
 4351              	.L284:
 4352 01d6 C046     		.align	2
 4353              	.L283:
 4354 01d8 00E800FE 		.word	-33495040
 4355              		.cfi_endproc
 4356              	.LFE52:
 4358              		.section	.text.HAL_I2C_Mem_Read,"ax",%progbits
 4359              		.align	2
 4360              		.global	HAL_I2C_Mem_Read
 4361              		.code	16
 4362              		.thumb_func
 4364              	HAL_I2C_Mem_Read:
 4365              	.LFB53:
1886:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 4366              		.loc 1 1886 0
 4367              		.cfi_startproc
 4368              	.LVL368:
 4369 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4370              	.LCFI44:
 4371              		.cfi_def_cfa_offset 20
 4372              		.cfi_offset 4, -20
 4373              		.cfi_offset 5, -16
 4374              		.cfi_offset 6, -12
 4375              		.cfi_offset 7, -8
 4376              		.cfi_offset 14, -4
 4377 0002 4F46     		mov	r7, r9
 4378 0004 4646     		mov	r6, r8
 4379 0006 C0B4     		push	{r6, r7}
 4380              	.LCFI45:
 4381              		.cfi_def_cfa_offset 28
 4382              		.cfi_offset 8, -28
 4383              		.cfi_offset 9, -24
 4384 0008 83B0     		sub	sp, sp, #12
 4385              	.LCFI46:
 4386              		.cfi_def_cfa_offset 40
 4387 000a 051C     		mov	r5, r0
 4388 000c 0E1C     		mov	r6, r1
 4389 000e 9046     		mov	r8, r2
 4390 0010 1F1C     		mov	r7, r3
 4391 0012 0AAC     		add	r4, sp, #40
 4392              	.LVL369:
 4393 0014 04CC     		ldmia	r4!, {r2}
 4394              	.LVL370:
 4395 0016 2488     		ldrh	r4, [r4]
 4396              	.LVL371:
1892:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 4397              		.loc 1 1892 0
ARM GAS  /tmp/cchP46LN.s 			page 174


 4398 0018 4120     		mov	r0, #65
 4399              	.LVL372:
 4400 001a 285C     		ldrb	r0, [r5, r0]
 4401 001c 2028     		cmp	r0, #32
 4402 001e 00D0     		beq	.LCB4430
 4403 0020 C5E0     		b	.L295	@long jump
 4404              	.LCB4430:
1894:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 4405              		.loc 1 1894 0
 4406 0022 002A     		cmp	r2, #0
 4407 0024 00D1     		bne	.LCB4432
 4408 0026 C4E0     		b	.L296	@long jump
 4409              	.LCB4432:
1894:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 4410              		.loc 1 1894 0 is_stmt 0 discriminator 1
 4411 0028 002C     		cmp	r4, #0
 4412 002a 00D1     		bne	.LCB4434
 4413 002c C3E0     		b	.L297	@long jump
 4414              	.LCB4434:
1900:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 4415              		.loc 1 1900 0 is_stmt 1
 4416 002e 4023     		mov	r3, #64
 4417              	.LVL373:
 4418 0030 EB5C     		ldrb	r3, [r5, r3]
 4419 0032 012B     		cmp	r3, #1
 4420 0034 00D1     		bne	.LCB4439
 4421 0036 C0E0     		b	.L298	@long jump
 4422              	.LCB4439:
1900:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 4423              		.loc 1 1900 0 is_stmt 0 discriminator 2
 4424 0038 0122     		mov	r2, #1
 4425 003a 4023     		mov	r3, #64
 4426 003c EA54     		strb	r2, [r5, r3]
1903:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     tickstart = HAL_GetTick();
 4427              		.loc 1 1903 0 is_stmt 1 discriminator 2
 4428 003e FFF7FEFF 		bl	HAL_GetTick
 4429              	.LVL374:
 4430 0042 8146     		mov	r9, r0
 4431              	.LVL375:
1905:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 4432              		.loc 1 1905 0 discriminator 2
 4433 0044 0090     		str	r0, [sp]
 4434 0046 281C     		mov	r0, r5
 4435              	.LVL376:
 4436 0048 8021     		mov	r1, #128
 4437 004a 0902     		lsl	r1, r1, #8
 4438 004c 0122     		mov	r2, #1
 4439 004e 1923     		mov	r3, #25
 4440 0050 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 4441              	.LVL377:
 4442 0054 0028     		cmp	r0, #0
 4443 0056 00D0     		beq	.LCB4458
 4444 0058 B1E0     		b	.L299	@long jump
 4445              	.LCB4458:
1910:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 4446              		.loc 1 1910 0
 4447 005a 2222     		mov	r2, #34
ARM GAS  /tmp/cchP46LN.s 			page 175


 4448 005c 4123     		mov	r3, #65
 4449 005e EA54     		strb	r2, [r5, r3]
1911:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
 4450              		.loc 1 1911 0
 4451 0060 4022     		mov	r2, #64
 4452 0062 4223     		mov	r3, #66
 4453 0064 EA54     		strb	r2, [r5, r3]
1912:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 4454              		.loc 1 1912 0
 4455 0066 0023     		mov	r3, #0
 4456 0068 6B64     		str	r3, [r5, #68]
1915:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
 4457              		.loc 1 1915 0
 4458 006a 0A9A     		ldr	r2, [sp, #40]
 4459 006c 6A62     		str	r2, [r5, #36]
1916:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount = Size;
 4460              		.loc 1 1916 0
 4461 006e 6C85     		strh	r4, [r5, #42]
1917:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 4462              		.loc 1 1917 0
 4463 0070 6B63     		str	r3, [r5, #52]
1920:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_O
 4464              		.loc 1 1920 0
 4465 0072 0C9B     		ldr	r3, [sp, #48]
 4466 0074 0093     		str	r3, [sp]
 4467 0076 4A46     		mov	r2, r9
 4468 0078 0192     		str	r2, [sp, #4]
 4469 007a 281C     		mov	r0, r5
 4470 007c 311C     		mov	r1, r6
 4471 007e 4246     		mov	r2, r8
 4472 0080 3B1C     		mov	r3, r7
 4473 0082 FFF7FEFF 		bl	I2C_RequestMemoryRead
 4474              	.LVL378:
 4475 0086 0028     		cmp	r0, #0
 4476 0088 0CD0     		beq	.L287
1922:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 4477              		.loc 1 1922 0
 4478 008a 6B6C     		ldr	r3, [r5, #68]
 4479 008c 042B     		cmp	r3, #4
 4480 008e 04D1     		bne	.L288
1925:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 4481              		.loc 1 1925 0
 4482 0090 0022     		mov	r2, #0
 4483 0092 4023     		mov	r3, #64
 4484 0094 EA54     		strb	r2, [r5, r3]
1926:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_ERROR;
 4485              		.loc 1 1926 0
 4486 0096 0120     		mov	r0, #1
 4487 0098 98E0     		b	.L286
 4488              	.L288:
1931:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 4489              		.loc 1 1931 0
 4490 009a 0022     		mov	r2, #0
 4491 009c 4023     		mov	r3, #64
 4492 009e EA54     		strb	r2, [r5, r3]
1932:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_TIMEOUT;
 4493              		.loc 1 1932 0
ARM GAS  /tmp/cchP46LN.s 			page 176


 4494 00a0 0320     		mov	r0, #3
 4495 00a2 93E0     		b	.L286
 4496              	.L287:
1938:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
 4497              		.loc 1 1938 0
 4498 00a4 6B8D     		ldrh	r3, [r5, #42]
 4499 00a6 9BB2     		uxth	r3, r3
 4500 00a8 FF2B     		cmp	r3, #255
 4501 00aa 0CD9     		bls	.L289
1940:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 4502              		.loc 1 1940 0
 4503 00ac FF23     		mov	r3, #255
 4504 00ae 2B85     		strh	r3, [r5, #40]
1941:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_START_READ
 4505              		.loc 1 1941 0
 4506 00b0 9023     		mov	r3, #144
 4507 00b2 9B01     		lsl	r3, r3, #6
 4508 00b4 0093     		str	r3, [sp]
 4509 00b6 281C     		mov	r0, r5
 4510 00b8 311C     		mov	r1, r6
 4511 00ba FF22     		mov	r2, #255
 4512 00bc 8023     		mov	r3, #128
 4513 00be 5B04     		lsl	r3, r3, #17
 4514 00c0 FFF7FEFF 		bl	I2C_TransferConfig
 4515              	.LVL379:
 4516 00c4 0CE0     		b	.L293
 4517              	.L289:
1945:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 4518              		.loc 1 1945 0
 4519 00c6 6A8D     		ldrh	r2, [r5, #42]
 4520 00c8 92B2     		uxth	r2, r2
 4521 00ca 2A85     		strh	r2, [r5, #40]
1946:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_REA
 4522              		.loc 1 1946 0
 4523 00cc D2B2     		uxtb	r2, r2
 4524 00ce 9023     		mov	r3, #144
 4525 00d0 9B01     		lsl	r3, r3, #6
 4526 00d2 0093     		str	r3, [sp]
 4527 00d4 281C     		mov	r0, r5
 4528 00d6 311C     		mov	r1, r6
 4529 00d8 8023     		mov	r3, #128
 4530 00da 9B04     		lsl	r3, r3, #18
 4531 00dc FFF7FEFF 		bl	I2C_TransferConfig
 4532              	.LVL380:
 4533              	.L293:
1978:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 4534              		.loc 1 1978 0
 4535 00e0 8023     		mov	r3, #128
 4536 00e2 9B04     		lsl	r3, r3, #18
 4537 00e4 9846     		mov	r8, r3
1972:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
 4538              		.loc 1 1972 0
 4539 00e6 FF24     		mov	r4, #255
1973:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 4540              		.loc 1 1973 0
 4541 00e8 8027     		mov	r7, #128
 4542 00ea 7F04     		lsl	r7, r7, #17
ARM GAS  /tmp/cchP46LN.s 			page 177


 4543              	.L303:
1952:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
 4544              		.loc 1 1952 0
 4545 00ec 4B46     		mov	r3, r9
 4546 00ee 0093     		str	r3, [sp]
 4547 00f0 281C     		mov	r0, r5
 4548 00f2 0421     		mov	r1, #4
 4549 00f4 0022     		mov	r2, #0
 4550 00f6 0C9B     		ldr	r3, [sp, #48]
 4551 00f8 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 4552              	.LVL381:
 4553 00fc 0028     		cmp	r0, #0
 4554 00fe 60D1     		bne	.L300
1958:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
 4555              		.loc 1 1958 0
 4556 0100 696A     		ldr	r1, [r5, #36]
 4557 0102 4B1C     		add	r3, r1, #1
 4558 0104 6B62     		str	r3, [r5, #36]
 4559 0106 2B68     		ldr	r3, [r5]
 4560 0108 5B6A     		ldr	r3, [r3, #36]
 4561 010a 0B70     		strb	r3, [r1]
1959:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize--;
 4562              		.loc 1 1959 0
 4563 010c 298D     		ldrh	r1, [r5, #40]
 4564 010e 0139     		sub	r1, r1, #1
 4565 0110 89B2     		uxth	r1, r1
 4566 0112 2985     		strh	r1, [r5, #40]
1960:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferCount--;
 4567              		.loc 1 1960 0
 4568 0114 6B8D     		ldrh	r3, [r5, #42]
 4569 0116 013B     		sub	r3, r3, #1
 4570 0118 9BB2     		uxth	r3, r3
 4571 011a 6B85     		strh	r3, [r5, #42]
1962:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if((hi2c->XferSize == 0U) && (hi2c->XferCount != 0U))
 4572              		.loc 1 1962 0
 4573 011c 0029     		cmp	r1, #0
 4574 011e 26D1     		bne	.L291
1962:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if((hi2c->XferSize == 0U) && (hi2c->XferCount != 0U))
 4575              		.loc 1 1962 0 is_stmt 0 discriminator 1
 4576 0120 6B8D     		ldrh	r3, [r5, #42]
 4577 0122 9BB2     		uxth	r3, r3
 4578 0124 002B     		cmp	r3, #0
 4579 0126 22D0     		beq	.L291
1965:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 4580              		.loc 1 1965 0 is_stmt 1
 4581 0128 4A46     		mov	r2, r9
 4582 012a 0092     		str	r2, [sp]
 4583 012c 281C     		mov	r0, r5
 4584 012e 8021     		mov	r1, #128
 4585 0130 0022     		mov	r2, #0
 4586 0132 0C9B     		ldr	r3, [sp, #48]
 4587 0134 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 4588              	.LVL382:
 4589 0138 0028     		cmp	r0, #0
 4590 013a 44D1     		bne	.L301
1970:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         if(hi2c->XferCount > MAX_NBYTE_SIZE)
 4591              		.loc 1 1970 0
ARM GAS  /tmp/cchP46LN.s 			page 178


 4592 013c 6B8D     		ldrh	r3, [r5, #42]
 4593 013e 9BB2     		uxth	r3, r3
 4594 0140 FF2B     		cmp	r3, #255
 4595 0142 09D9     		bls	.L292
1972:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
 4596              		.loc 1 1972 0
 4597 0144 2C85     		strh	r4, [r5, #40]
1973:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 4598              		.loc 1 1973 0
 4599 0146 0023     		mov	r3, #0
 4600 0148 0093     		str	r3, [sp]
 4601 014a 281C     		mov	r0, r5
 4602 014c 311C     		mov	r1, r6
 4603 014e 221C     		mov	r2, r4
 4604 0150 3B1C     		mov	r3, r7
 4605 0152 FFF7FEFF 		bl	I2C_TransferConfig
 4606              	.LVL383:
 4607 0156 0AE0     		b	.L291
 4608              	.L292:
1977:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
 4609              		.loc 1 1977 0
 4610 0158 6A8D     		ldrh	r2, [r5, #42]
 4611 015a 92B2     		uxth	r2, r2
 4612 015c 2A85     		strh	r2, [r5, #40]
1978:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 4613              		.loc 1 1978 0
 4614 015e D2B2     		uxtb	r2, r2
 4615 0160 0023     		mov	r3, #0
 4616 0162 0093     		str	r3, [sp]
 4617 0164 281C     		mov	r0, r5
 4618 0166 311C     		mov	r1, r6
 4619 0168 4346     		mov	r3, r8
 4620 016a FFF7FEFF 		bl	I2C_TransferConfig
 4621              	.LVL384:
 4622              	.L291:
1981:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }while(hi2c->XferCount > 0U);
 4623              		.loc 1 1981 0
 4624 016e 6B8D     		ldrh	r3, [r5, #42]
 4625 0170 9BB2     		uxth	r3, r3
 4626 0172 002B     		cmp	r3, #0
 4627 0174 BAD1     		bne	.L303
1985:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 4628              		.loc 1 1985 0
 4629 0176 281C     		mov	r0, r5
 4630 0178 0C99     		ldr	r1, [sp, #48]
 4631 017a 4A46     		mov	r2, r9
 4632 017c FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 4633              	.LVL385:
 4634 0180 0028     		cmp	r0, #0
 4635 0182 04D0     		beq	.L294
1987:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 4636              		.loc 1 1987 0
 4637 0184 6B6C     		ldr	r3, [r5, #68]
 4638 0186 042B     		cmp	r3, #4
 4639 0188 1FD1     		bne	.L302
1989:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_ERROR;
 4640              		.loc 1 1989 0
ARM GAS  /tmp/cchP46LN.s 			page 179


 4641 018a 0120     		mov	r0, #1
 4642 018c 1EE0     		b	.L286
 4643              	.L294:
1998:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 4644              		.loc 1 1998 0
 4645 018e 2A68     		ldr	r2, [r5]
 4646 0190 2023     		mov	r3, #32
 4647 0192 D361     		str	r3, [r2, #28]
2001:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
 4648              		.loc 1 2001 0
 4649 0194 2A68     		ldr	r2, [r5]
 4650 0196 5468     		ldr	r4, [r2, #4]
 4651 0198 0F49     		ldr	r1, .L305
 4652 019a 2140     		and	r1, r4
 4653 019c 5160     		str	r1, [r2, #4]
2003:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 4654              		.loc 1 2003 0
 4655 019e 4122     		mov	r2, #65
 4656 01a0 AB54     		strb	r3, [r5, r2]
2004:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 4657              		.loc 1 2004 0
 4658 01a2 0023     		mov	r3, #0
 4659 01a4 4222     		mov	r2, #66
 4660 01a6 AB54     		strb	r3, [r5, r2]
2007:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 4661              		.loc 1 2007 0
 4662 01a8 4022     		mov	r2, #64
 4663 01aa AB54     		strb	r3, [r5, r2]
2009:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
 4664              		.loc 1 2009 0
 4665 01ac 0EE0     		b	.L286
 4666              	.LVL386:
 4667              	.L295:
2013:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
 4668              		.loc 1 2013 0
 4669 01ae 0220     		mov	r0, #2
 4670 01b0 0CE0     		b	.L286
 4671              	.L296:
1896:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return  HAL_ERROR;
 4672              		.loc 1 1896 0
 4673 01b2 0120     		mov	r0, #1
 4674 01b4 0AE0     		b	.L286
 4675              	.L297:
 4676 01b6 0120     		mov	r0, #1
 4677 01b8 08E0     		b	.L286
 4678              	.LVL387:
 4679              	.L298:
1900:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 4680              		.loc 1 1900 0
 4681 01ba 0220     		mov	r0, #2
 4682 01bc 06E0     		b	.L286
 4683              	.LVL388:
 4684              	.L299:
1907:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_TIMEOUT;
 4685              		.loc 1 1907 0
 4686 01be 0320     		mov	r0, #3
 4687 01c0 04E0     		b	.L286
ARM GAS  /tmp/cchP46LN.s 			page 180


 4688              	.L300:
1954:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_TIMEOUT;
 4689              		.loc 1 1954 0
 4690 01c2 0320     		mov	r0, #3
 4691 01c4 02E0     		b	.L286
 4692              	.L301:
1967:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           return HAL_TIMEOUT;
 4693              		.loc 1 1967 0
 4694 01c6 0320     		mov	r0, #3
 4695 01c8 00E0     		b	.L286
 4696              	.L302:
1993:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_TIMEOUT;
 4697              		.loc 1 1993 0
 4698 01ca 0320     		mov	r0, #3
 4699              	.LVL389:
 4700              	.L286:
2015:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 4701              		.loc 1 2015 0
 4702 01cc 03B0     		add	sp, sp, #12
 4703              		@ sp needed
 4704              	.LVL390:
 4705 01ce 0CBC     		pop	{r2, r3}
 4706 01d0 9046     		mov	r8, r2
 4707 01d2 9946     		mov	r9, r3
 4708 01d4 F0BD     		pop	{r4, r5, r6, r7, pc}
 4709              	.L306:
 4710 01d6 C046     		.align	2
 4711              	.L305:
 4712 01d8 00E800FE 		.word	-33495040
 4713              		.cfi_endproc
 4714              	.LFE53:
 4716              		.section	.text.HAL_I2C_Mem_Write_IT,"ax",%progbits
 4717              		.align	2
 4718              		.global	HAL_I2C_Mem_Write_IT
 4719              		.code	16
 4720              		.thumb_func
 4722              	HAL_I2C_Mem_Write_IT:
 4723              	.LFB54:
2029:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 4724              		.loc 1 2029 0
 4725              		.cfi_startproc
 4726              	.LVL391:
 4727 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4728              	.LCFI47:
 4729              		.cfi_def_cfa_offset 20
 4730              		.cfi_offset 4, -20
 4731              		.cfi_offset 5, -16
 4732              		.cfi_offset 6, -12
 4733              		.cfi_offset 7, -8
 4734              		.cfi_offset 14, -4
 4735 0002 4F46     		mov	r7, r9
 4736 0004 4646     		mov	r6, r8
 4737 0006 C0B4     		push	{r6, r7}
 4738              	.LCFI48:
 4739              		.cfi_def_cfa_offset 28
 4740              		.cfi_offset 8, -28
 4741              		.cfi_offset 9, -24
ARM GAS  /tmp/cchP46LN.s 			page 181


 4742 0008 83B0     		sub	sp, sp, #12
 4743              	.LCFI49:
 4744              		.cfi_def_cfa_offset 40
 4745 000a 051C     		mov	r5, r0
 4746 000c 0E1C     		mov	r6, r1
 4747 000e 9046     		mov	r8, r2
 4748 0010 1F1C     		mov	r7, r3
 4749 0012 0AAC     		add	r4, sp, #40
 4750              	.LVL392:
 4751 0014 04CC     		ldmia	r4!, {r2}
 4752              	.LVL393:
 4753 0016 2488     		ldrh	r4, [r4]
 4754              	.LVL394:
2036:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 4755              		.loc 1 2036 0
 4756 0018 4120     		mov	r0, #65
 4757              	.LVL395:
 4758 001a 285C     		ldrb	r0, [r5, r0]
 4759 001c 2028     		cmp	r0, #32
 4760 001e 58D1     		bne	.L313
2038:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 4761              		.loc 1 2038 0
 4762 0020 002A     		cmp	r2, #0
 4763 0022 58D0     		beq	.L314
2038:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 4764              		.loc 1 2038 0 is_stmt 0 discriminator 1
 4765 0024 002C     		cmp	r4, #0
 4766 0026 58D0     		beq	.L315
2043:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
 4767              		.loc 1 2043 0 is_stmt 1
 4768 0028 2B68     		ldr	r3, [r5]
 4769              	.LVL396:
 4770 002a 9B69     		ldr	r3, [r3, #24]
 4771 002c 1A04     		lsl	r2, r3, #16
 4772 002e 56D4     		bmi	.L316
2049:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 4773              		.loc 1 2049 0
 4774 0030 4023     		mov	r3, #64
 4775 0032 EB5C     		ldrb	r3, [r5, r3]
 4776 0034 012B     		cmp	r3, #1
 4777 0036 54D0     		beq	.L317
2049:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 4778              		.loc 1 2049 0 is_stmt 0 discriminator 2
 4779 0038 4023     		mov	r3, #64
 4780 003a 9946     		mov	r9, r3
 4781 003c 0123     		mov	r3, #1
 4782 003e 4A46     		mov	r2, r9
 4783 0040 AB54     		strb	r3, [r5, r2]
2052:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     tickstart = HAL_GetTick();
 4784              		.loc 1 2052 0 is_stmt 1 discriminator 2
 4785 0042 FFF7FEFF 		bl	HAL_GetTick
 4786              	.LVL397:
2054:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
 4787              		.loc 1 2054 0 discriminator 2
 4788 0046 2122     		mov	r2, #33
 4789 0048 4123     		mov	r3, #65
 4790 004a EA54     		strb	r2, [r5, r3]
ARM GAS  /tmp/cchP46LN.s 			page 182


2055:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 4791              		.loc 1 2055 0 discriminator 2
 4792 004c 4223     		mov	r3, #66
 4793 004e 4A46     		mov	r2, r9
 4794 0050 EA54     		strb	r2, [r5, r3]
2056:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 4795              		.loc 1 2056 0 discriminator 2
 4796 0052 0023     		mov	r3, #0
 4797 0054 6B64     		str	r3, [r5, #68]
2059:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 4798              		.loc 1 2059 0 discriminator 2
 4799 0056 0A9B     		ldr	r3, [sp, #40]
 4800 0058 6B62     		str	r3, [r5, #36]
2060:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 4801              		.loc 1 2060 0 discriminator 2
 4802 005a 6C85     		strh	r4, [r5, #42]
2061:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 4803              		.loc 1 2061 0 discriminator 2
 4804 005c 244B     		ldr	r3, .L318
 4805 005e EB62     		str	r3, [r5, #44]
2062:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 4806              		.loc 1 2062 0 discriminator 2
 4807 0060 244B     		ldr	r3, .L318+4
 4808 0062 6B63     		str	r3, [r5, #52]
2064:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
 4809              		.loc 1 2064 0 discriminator 2
 4810 0064 6B8D     		ldrh	r3, [r5, #42]
 4811 0066 9BB2     		uxth	r3, r3
 4812 0068 FF2B     		cmp	r3, #255
 4813 006a 05D9     		bls	.L309
2066:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 4814              		.loc 1 2066 0
 4815 006c FF23     		mov	r3, #255
 4816 006e 2B85     		strh	r3, [r5, #40]
 4817              	.LVL398:
2067:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 4818              		.loc 1 2067 0
 4819 0070 8023     		mov	r3, #128
 4820 0072 5B04     		lsl	r3, r3, #17
 4821 0074 9946     		mov	r9, r3
 4822 0076 04E0     		b	.L310
 4823              	.LVL399:
 4824              	.L309:
2071:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 4825              		.loc 1 2071 0
 4826 0078 6B8D     		ldrh	r3, [r5, #42]
 4827 007a 2B85     		strh	r3, [r5, #40]
 4828              	.LVL400:
2072:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 4829              		.loc 1 2072 0
 4830 007c 8023     		mov	r3, #128
 4831 007e 9B04     		lsl	r3, r3, #18
 4832 0080 9946     		mov	r9, r3
 4833              	.LVL401:
 4834              	.L310:
2076:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstart
 4835              		.loc 1 2076 0
ARM GAS  /tmp/cchP46LN.s 			page 183


 4836 0082 1923     		mov	r3, #25
 4837 0084 0093     		str	r3, [sp]
 4838 0086 0190     		str	r0, [sp, #4]
 4839 0088 281C     		mov	r0, r5
 4840              	.LVL402:
 4841 008a 311C     		mov	r1, r6
 4842 008c 4246     		mov	r2, r8
 4843 008e 3B1C     		mov	r3, r7
 4844 0090 FFF7FEFF 		bl	I2C_RequestMemoryWrite
 4845              	.LVL403:
 4846 0094 041E     		sub	r4, r0, #0
 4847 0096 0CD0     		beq	.L311
2078:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 4848              		.loc 1 2078 0
 4849 0098 6B6C     		ldr	r3, [r5, #68]
 4850 009a 042B     		cmp	r3, #4
 4851 009c 04D1     		bne	.L312
2081:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 4852              		.loc 1 2081 0
 4853 009e 0022     		mov	r2, #0
 4854 00a0 4023     		mov	r3, #64
 4855 00a2 EA54     		strb	r2, [r5, r3]
2082:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_ERROR;
 4856              		.loc 1 2082 0
 4857 00a4 0124     		mov	r4, #1
 4858 00a6 1DE0     		b	.L308
 4859              	.L312:
2087:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 4860              		.loc 1 2087 0
 4861 00a8 0022     		mov	r2, #0
 4862 00aa 4023     		mov	r3, #64
 4863 00ac EA54     		strb	r2, [r5, r3]
2088:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_TIMEOUT;
 4864              		.loc 1 2088 0
 4865 00ae 0324     		mov	r4, #3
 4866 00b0 18E0     		b	.L308
 4867              	.L311:
2093:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_TransferConfig(hi2c,DevAddress, hi2c->XferSize, xfermode, I2C_NO_STARTSTOP);
 4868              		.loc 1 2093 0
 4869 00b2 2A8D     		ldrh	r2, [r5, #40]
 4870 00b4 D2B2     		uxtb	r2, r2
 4871 00b6 0027     		mov	r7, #0
 4872 00b8 0097     		str	r7, [sp]
 4873 00ba 281C     		mov	r0, r5
 4874 00bc 311C     		mov	r1, r6
 4875 00be 4B46     		mov	r3, r9
 4876 00c0 FFF7FEFF 		bl	I2C_TransferConfig
 4877              	.LVL404:
2096:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c); 
 4878              		.loc 1 2096 0
 4879 00c4 4023     		mov	r3, #64
 4880 00c6 EF54     		strb	r7, [r5, r3]
2105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
 4881              		.loc 1 2105 0
 4882 00c8 281C     		mov	r0, r5
 4883 00ca 0121     		mov	r1, #1
 4884 00cc FFF7FEFF 		bl	I2C_Enable_IRQ
ARM GAS  /tmp/cchP46LN.s 			page 184


 4885              	.LVL405:
2107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
 4886              		.loc 1 2107 0
 4887 00d0 08E0     		b	.L308
 4888              	.LVL406:
 4889              	.L313:
2111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
 4890              		.loc 1 2111 0
 4891 00d2 0224     		mov	r4, #2
 4892 00d4 06E0     		b	.L308
 4893              	.L314:
2040:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return  HAL_ERROR;
 4894              		.loc 1 2040 0
 4895 00d6 0124     		mov	r4, #1
 4896 00d8 04E0     		b	.L308
 4897              	.L315:
 4898 00da 0124     		mov	r4, #1
 4899 00dc 02E0     		b	.L308
 4900              	.LVL407:
 4901              	.L316:
2045:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_BUSY;
 4902              		.loc 1 2045 0
 4903 00de 0224     		mov	r4, #2
 4904 00e0 00E0     		b	.L308
 4905              	.L317:
2049:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 4906              		.loc 1 2049 0
 4907 00e2 0224     		mov	r4, #2
 4908              	.LVL408:
 4909              	.L308:
2113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 4910              		.loc 1 2113 0
 4911 00e4 201C     		mov	r0, r4
 4912 00e6 03B0     		add	sp, sp, #12
 4913              		@ sp needed
 4914              	.LVL409:
 4915 00e8 0CBC     		pop	{r2, r3}
 4916 00ea 9046     		mov	r8, r2
 4917 00ec 9946     		mov	r9, r3
 4918 00ee F0BD     		pop	{r4, r5, r6, r7, pc}
 4919              	.L319:
 4920              		.align	2
 4921              	.L318:
 4922 00f0 0000FFFF 		.word	-65536
 4923 00f4 00000000 		.word	I2C_Master_ISR_IT
 4924              		.cfi_endproc
 4925              	.LFE54:
 4927              		.section	.text.HAL_I2C_Mem_Read_IT,"ax",%progbits
 4928              		.align	2
 4929              		.global	HAL_I2C_Mem_Read_IT
 4930              		.code	16
 4931              		.thumb_func
 4933              	HAL_I2C_Mem_Read_IT:
 4934              	.LFB55:
2128:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 4935              		.loc 1 2128 0
 4936              		.cfi_startproc
ARM GAS  /tmp/cchP46LN.s 			page 185


 4937              	.LVL410:
 4938 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4939              	.LCFI50:
 4940              		.cfi_def_cfa_offset 20
 4941              		.cfi_offset 4, -20
 4942              		.cfi_offset 5, -16
 4943              		.cfi_offset 6, -12
 4944              		.cfi_offset 7, -8
 4945              		.cfi_offset 14, -4
 4946 0002 4F46     		mov	r7, r9
 4947 0004 4646     		mov	r6, r8
 4948 0006 C0B4     		push	{r6, r7}
 4949              	.LCFI51:
 4950              		.cfi_def_cfa_offset 28
 4951              		.cfi_offset 8, -28
 4952              		.cfi_offset 9, -24
 4953 0008 83B0     		sub	sp, sp, #12
 4954              	.LCFI52:
 4955              		.cfi_def_cfa_offset 40
 4956 000a 051C     		mov	r5, r0
 4957 000c 0E1C     		mov	r6, r1
 4958 000e 9046     		mov	r8, r2
 4959 0010 1F1C     		mov	r7, r3
 4960 0012 0AAC     		add	r4, sp, #40
 4961              	.LVL411:
 4962 0014 04CC     		ldmia	r4!, {r2}
 4963              	.LVL412:
 4964 0016 2488     		ldrh	r4, [r4]
 4965              	.LVL413:
2135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 4966              		.loc 1 2135 0
 4967 0018 4120     		mov	r0, #65
 4968              	.LVL414:
 4969 001a 285C     		ldrb	r0, [r5, r0]
 4970 001c 2028     		cmp	r0, #32
 4971 001e 5AD1     		bne	.L326
2137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 4972              		.loc 1 2137 0
 4973 0020 002A     		cmp	r2, #0
 4974 0022 5AD0     		beq	.L327
2137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 4975              		.loc 1 2137 0 is_stmt 0 discriminator 1
 4976 0024 002C     		cmp	r4, #0
 4977 0026 5AD0     		beq	.L328
2142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
 4978              		.loc 1 2142 0 is_stmt 1
 4979 0028 2B68     		ldr	r3, [r5]
 4980              	.LVL415:
 4981 002a 9B69     		ldr	r3, [r3, #24]
 4982 002c 1A04     		lsl	r2, r3, #16
 4983 002e 58D4     		bmi	.L329
2148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 4984              		.loc 1 2148 0
 4985 0030 4023     		mov	r3, #64
 4986 0032 EB5C     		ldrb	r3, [r5, r3]
 4987 0034 012B     		cmp	r3, #1
 4988 0036 56D0     		beq	.L330
ARM GAS  /tmp/cchP46LN.s 			page 186


2148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 4989              		.loc 1 2148 0 is_stmt 0 discriminator 2
 4990 0038 4023     		mov	r3, #64
 4991 003a 9946     		mov	r9, r3
 4992 003c 0123     		mov	r3, #1
 4993 003e 4A46     		mov	r2, r9
 4994 0040 AB54     		strb	r3, [r5, r2]
2151:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     tickstart = HAL_GetTick();
 4995              		.loc 1 2151 0 is_stmt 1 discriminator 2
 4996 0042 FFF7FEFF 		bl	HAL_GetTick
 4997              	.LVL416:
2153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
 4998              		.loc 1 2153 0 discriminator 2
 4999 0046 2222     		mov	r2, #34
 5000 0048 4123     		mov	r3, #65
 5001 004a EA54     		strb	r2, [r5, r3]
2154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 5002              		.loc 1 2154 0 discriminator 2
 5003 004c 4223     		mov	r3, #66
 5004 004e 4A46     		mov	r2, r9
 5005 0050 EA54     		strb	r2, [r5, r3]
2155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 5006              		.loc 1 2155 0 discriminator 2
 5007 0052 0023     		mov	r3, #0
 5008 0054 6B64     		str	r3, [r5, #68]
2158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 5009              		.loc 1 2158 0 discriminator 2
 5010 0056 0A9B     		ldr	r3, [sp, #40]
 5011 0058 6B62     		str	r3, [r5, #36]
2159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 5012              		.loc 1 2159 0 discriminator 2
 5013 005a 6C85     		strh	r4, [r5, #42]
2160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 5014              		.loc 1 2160 0 discriminator 2
 5015 005c 254B     		ldr	r3, .L331
 5016 005e EB62     		str	r3, [r5, #44]
2161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 5017              		.loc 1 2161 0 discriminator 2
 5018 0060 254B     		ldr	r3, .L331+4
 5019 0062 6B63     		str	r3, [r5, #52]
2163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
 5020              		.loc 1 2163 0 discriminator 2
 5021 0064 6B8D     		ldrh	r3, [r5, #42]
 5022 0066 9BB2     		uxth	r3, r3
 5023 0068 FF2B     		cmp	r3, #255
 5024 006a 05D9     		bls	.L322
2165:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 5025              		.loc 1 2165 0
 5026 006c FF23     		mov	r3, #255
 5027 006e 2B85     		strh	r3, [r5, #40]
 5028              	.LVL417:
2166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 5029              		.loc 1 2166 0
 5030 0070 8023     		mov	r3, #128
 5031 0072 5B04     		lsl	r3, r3, #17
 5032 0074 9946     		mov	r9, r3
 5033 0076 04E0     		b	.L323
ARM GAS  /tmp/cchP46LN.s 			page 187


 5034              	.LVL418:
 5035              	.L322:
2170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 5036              		.loc 1 2170 0
 5037 0078 6B8D     		ldrh	r3, [r5, #42]
 5038 007a 2B85     		strh	r3, [r5, #40]
 5039              	.LVL419:
2171:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 5040              		.loc 1 2171 0
 5041 007c 8023     		mov	r3, #128
 5042 007e 9B04     		lsl	r3, r3, #18
 5043 0080 9946     		mov	r9, r3
 5044              	.LVL420:
 5045              	.L323:
2175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstart)
 5046              		.loc 1 2175 0
 5047 0082 1923     		mov	r3, #25
 5048 0084 0093     		str	r3, [sp]
 5049 0086 0190     		str	r0, [sp, #4]
 5050 0088 281C     		mov	r0, r5
 5051              	.LVL421:
 5052 008a 311C     		mov	r1, r6
 5053 008c 4246     		mov	r2, r8
 5054 008e 3B1C     		mov	r3, r7
 5055 0090 FFF7FEFF 		bl	I2C_RequestMemoryRead
 5056              	.LVL422:
 5057 0094 041E     		sub	r4, r0, #0
 5058 0096 0CD0     		beq	.L324
2177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 5059              		.loc 1 2177 0
 5060 0098 6B6C     		ldr	r3, [r5, #68]
 5061 009a 042B     		cmp	r3, #4
 5062 009c 04D1     		bne	.L325
2180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 5063              		.loc 1 2180 0
 5064 009e 0022     		mov	r2, #0
 5065 00a0 4023     		mov	r3, #64
 5066 00a2 EA54     		strb	r2, [r5, r3]
2181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_ERROR;
 5067              		.loc 1 2181 0
 5068 00a4 0124     		mov	r4, #1
 5069 00a6 1FE0     		b	.L321
 5070              	.L325:
2186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 5071              		.loc 1 2186 0
 5072 00a8 0022     		mov	r2, #0
 5073 00aa 4023     		mov	r3, #64
 5074 00ac EA54     		strb	r2, [r5, r3]
2187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_TIMEOUT;
 5075              		.loc 1 2187 0
 5076 00ae 0324     		mov	r4, #3
 5077 00b0 1AE0     		b	.L321
 5078              	.L324:
2192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_TransferConfig(hi2c,DevAddress,hi2c->XferSize, xfermode, I2C_GENERATE_START_READ);
 5079              		.loc 1 2192 0
 5080 00b2 2A8D     		ldrh	r2, [r5, #40]
 5081 00b4 D2B2     		uxtb	r2, r2
ARM GAS  /tmp/cchP46LN.s 			page 188


 5082 00b6 9023     		mov	r3, #144
 5083 00b8 9B01     		lsl	r3, r3, #6
 5084 00ba 0093     		str	r3, [sp]
 5085 00bc 281C     		mov	r0, r5
 5086 00be 311C     		mov	r1, r6
 5087 00c0 4B46     		mov	r3, r9
 5088 00c2 FFF7FEFF 		bl	I2C_TransferConfig
 5089              	.LVL423:
2195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 5090              		.loc 1 2195 0
 5091 00c6 0022     		mov	r2, #0
 5092 00c8 4023     		mov	r3, #64
 5093 00ca EA54     		strb	r2, [r5, r3]
2204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT);
 5094              		.loc 1 2204 0
 5095 00cc 281C     		mov	r0, r5
 5096 00ce 0221     		mov	r1, #2
 5097 00d0 FFF7FEFF 		bl	I2C_Enable_IRQ
 5098              	.LVL424:
2206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
 5099              		.loc 1 2206 0
 5100 00d4 08E0     		b	.L321
 5101              	.LVL425:
 5102              	.L326:
2210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
 5103              		.loc 1 2210 0
 5104 00d6 0224     		mov	r4, #2
 5105 00d8 06E0     		b	.L321
 5106              	.L327:
2139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return  HAL_ERROR;
 5107              		.loc 1 2139 0
 5108 00da 0124     		mov	r4, #1
 5109 00dc 04E0     		b	.L321
 5110              	.L328:
 5111 00de 0124     		mov	r4, #1
 5112 00e0 02E0     		b	.L321
 5113              	.LVL426:
 5114              	.L329:
2144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_BUSY;
 5115              		.loc 1 2144 0
 5116 00e2 0224     		mov	r4, #2
 5117 00e4 00E0     		b	.L321
 5118              	.L330:
2148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 5119              		.loc 1 2148 0
 5120 00e6 0224     		mov	r4, #2
 5121              	.LVL427:
 5122              	.L321:
2212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 5123              		.loc 1 2212 0
 5124 00e8 201C     		mov	r0, r4
 5125 00ea 03B0     		add	sp, sp, #12
 5126              		@ sp needed
 5127              	.LVL428:
 5128 00ec 0CBC     		pop	{r2, r3}
 5129 00ee 9046     		mov	r8, r2
 5130 00f0 9946     		mov	r9, r3
ARM GAS  /tmp/cchP46LN.s 			page 189


 5131 00f2 F0BD     		pop	{r4, r5, r6, r7, pc}
 5132              	.L332:
 5133              		.align	2
 5134              	.L331:
 5135 00f4 0000FFFF 		.word	-65536
 5136 00f8 00000000 		.word	I2C_Master_ISR_IT
 5137              		.cfi_endproc
 5138              	.LFE55:
 5140              		.section	.text.HAL_I2C_Mem_Write_DMA,"ax",%progbits
 5141              		.align	2
 5142              		.global	HAL_I2C_Mem_Write_DMA
 5143              		.code	16
 5144              		.thumb_func
 5146              	HAL_I2C_Mem_Write_DMA:
 5147              	.LFB56:
2226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 5148              		.loc 1 2226 0
 5149              		.cfi_startproc
 5150              	.LVL429:
 5151 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 5152              	.LCFI53:
 5153              		.cfi_def_cfa_offset 20
 5154              		.cfi_offset 4, -20
 5155              		.cfi_offset 5, -16
 5156              		.cfi_offset 6, -12
 5157              		.cfi_offset 7, -8
 5158              		.cfi_offset 14, -4
 5159 0002 4F46     		mov	r7, r9
 5160 0004 4646     		mov	r6, r8
 5161 0006 C0B4     		push	{r6, r7}
 5162              	.LCFI54:
 5163              		.cfi_def_cfa_offset 28
 5164              		.cfi_offset 8, -28
 5165              		.cfi_offset 9, -24
 5166 0008 83B0     		sub	sp, sp, #12
 5167              	.LCFI55:
 5168              		.cfi_def_cfa_offset 40
 5169 000a 051C     		mov	r5, r0
 5170 000c 0E1C     		mov	r6, r1
 5171 000e 9046     		mov	r8, r2
 5172 0010 1F1C     		mov	r7, r3
 5173 0012 0AAC     		add	r4, sp, #40
 5174              	.LVL430:
 5175 0014 02CC     		ldmia	r4!, {r1}
 5176              	.LVL431:
 5177 0016 2488     		ldrh	r4, [r4]
 5178              	.LVL432:
2233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 5179              		.loc 1 2233 0
 5180 0018 4120     		mov	r0, #65
 5181              	.LVL433:
 5182 001a 285C     		ldrb	r0, [r5, r0]
 5183 001c 2028     		cmp	r0, #32
 5184 001e 74D1     		bne	.L339
2235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 5185              		.loc 1 2235 0
 5186 0020 0029     		cmp	r1, #0
ARM GAS  /tmp/cchP46LN.s 			page 190


 5187 0022 74D0     		beq	.L340
2235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 5188              		.loc 1 2235 0 is_stmt 0 discriminator 1
 5189 0024 002C     		cmp	r4, #0
 5190 0026 74D0     		beq	.L341
2240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
 5191              		.loc 1 2240 0 is_stmt 1
 5192 0028 2B68     		ldr	r3, [r5]
 5193              	.LVL434:
 5194 002a 9B69     		ldr	r3, [r3, #24]
 5195 002c 1A04     		lsl	r2, r3, #16
 5196 002e 72D4     		bmi	.L342
 5197              	.LVL435:
2246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 5198              		.loc 1 2246 0
 5199 0030 4023     		mov	r3, #64
 5200 0032 EB5C     		ldrb	r3, [r5, r3]
 5201 0034 012B     		cmp	r3, #1
 5202 0036 70D0     		beq	.L343
2246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 5203              		.loc 1 2246 0 is_stmt 0 discriminator 2
 5204 0038 4023     		mov	r3, #64
 5205 003a 9946     		mov	r9, r3
 5206 003c 0123     		mov	r3, #1
 5207 003e 4946     		mov	r1, r9
 5208 0040 6B54     		strb	r3, [r5, r1]
2249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     tickstart = HAL_GetTick();
 5209              		.loc 1 2249 0 is_stmt 1 discriminator 2
 5210 0042 FFF7FEFF 		bl	HAL_GetTick
 5211              	.LVL436:
2251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
 5212              		.loc 1 2251 0 discriminator 2
 5213 0046 2122     		mov	r2, #33
 5214 0048 4123     		mov	r3, #65
 5215 004a EA54     		strb	r2, [r5, r3]
2252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 5216              		.loc 1 2252 0 discriminator 2
 5217 004c 4223     		mov	r3, #66
 5218 004e 4A46     		mov	r2, r9
 5219 0050 EA54     		strb	r2, [r5, r3]
2253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 5220              		.loc 1 2253 0 discriminator 2
 5221 0052 0023     		mov	r3, #0
 5222 0054 6B64     		str	r3, [r5, #68]
2256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 5223              		.loc 1 2256 0 discriminator 2
 5224 0056 0A9B     		ldr	r3, [sp, #40]
 5225 0058 6B62     		str	r3, [r5, #36]
2257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 5226              		.loc 1 2257 0 discriminator 2
 5227 005a 6C85     		strh	r4, [r5, #42]
2258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 5228              		.loc 1 2258 0 discriminator 2
 5229 005c 324B     		ldr	r3, .L344
 5230 005e EB62     		str	r3, [r5, #44]
2259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 5231              		.loc 1 2259 0 discriminator 2
ARM GAS  /tmp/cchP46LN.s 			page 191


 5232 0060 324B     		ldr	r3, .L344+4
 5233 0062 6B63     		str	r3, [r5, #52]
2261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
 5234              		.loc 1 2261 0 discriminator 2
 5235 0064 6B8D     		ldrh	r3, [r5, #42]
 5236 0066 9BB2     		uxth	r3, r3
 5237 0068 FF2B     		cmp	r3, #255
 5238 006a 05D9     		bls	.L335
2263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 5239              		.loc 1 2263 0
 5240 006c FF23     		mov	r3, #255
 5241 006e 2B85     		strh	r3, [r5, #40]
 5242              	.LVL437:
2264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 5243              		.loc 1 2264 0
 5244 0070 8023     		mov	r3, #128
 5245 0072 5B04     		lsl	r3, r3, #17
 5246 0074 9946     		mov	r9, r3
 5247 0076 04E0     		b	.L336
 5248              	.LVL438:
 5249              	.L335:
2268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 5250              		.loc 1 2268 0
 5251 0078 6B8D     		ldrh	r3, [r5, #42]
 5252 007a 2B85     		strh	r3, [r5, #40]
 5253              	.LVL439:
2269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 5254              		.loc 1 2269 0
 5255 007c 8023     		mov	r3, #128
 5256 007e 9B04     		lsl	r3, r3, #18
 5257 0080 9946     		mov	r9, r3
 5258              	.LVL440:
 5259              	.L336:
2273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstart
 5260              		.loc 1 2273 0
 5261 0082 1923     		mov	r3, #25
 5262 0084 0093     		str	r3, [sp]
 5263 0086 0190     		str	r0, [sp, #4]
 5264 0088 281C     		mov	r0, r5
 5265              	.LVL441:
 5266 008a 311C     		mov	r1, r6
 5267 008c 4246     		mov	r2, r8
 5268 008e 3B1C     		mov	r3, r7
 5269 0090 FFF7FEFF 		bl	I2C_RequestMemoryWrite
 5270              	.LVL442:
 5271 0094 041E     		sub	r4, r0, #0
 5272 0096 0CD0     		beq	.L337
2275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 5273              		.loc 1 2275 0
 5274 0098 6B6C     		ldr	r3, [r5, #68]
 5275 009a 042B     		cmp	r3, #4
 5276 009c 04D1     		bne	.L338
2278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 5277              		.loc 1 2278 0
 5278 009e 0022     		mov	r2, #0
 5279 00a0 4023     		mov	r3, #64
 5280 00a2 EA54     		strb	r2, [r5, r3]
ARM GAS  /tmp/cchP46LN.s 			page 192


2279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_ERROR;
 5281              		.loc 1 2279 0
 5282 00a4 0124     		mov	r4, #1
 5283 00a6 39E0     		b	.L334
 5284              	.L338:
2284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 5285              		.loc 1 2284 0
 5286 00a8 0022     		mov	r2, #0
 5287 00aa 4023     		mov	r3, #64
 5288 00ac EA54     		strb	r2, [r5, r3]
2285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_TIMEOUT;
 5289              		.loc 1 2285 0
 5290 00ae 0324     		mov	r4, #3
 5291 00b0 34E0     		b	.L334
 5292              	.L337:
2290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->hdmatx->XferCpltCallback = I2C_DMAMasterTransmitCplt;
 5293              		.loc 1 2290 0
 5294 00b2 AB6B     		ldr	r3, [r5, #56]
 5295 00b4 1E4A     		ldr	r2, .L344+8
 5296 00b6 DA62     		str	r2, [r3, #44]
2293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
 5297              		.loc 1 2293 0
 5298 00b8 AB6B     		ldr	r3, [r5, #56]
 5299 00ba 1E4A     		ldr	r2, .L344+12
 5300 00bc 5A63     		str	r2, [r3, #52]
2296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->hdmatx->XferHalfCpltCallback = NULL;
 5301              		.loc 1 2296 0
 5302 00be AB6B     		ldr	r3, [r5, #56]
 5303 00c0 0027     		mov	r7, #0
 5304 00c2 1F63     		str	r7, [r3, #48]
2297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->hdmatx->XferAbortCallback = NULL;
 5305              		.loc 1 2297 0
 5306 00c4 AB6B     		ldr	r3, [r5, #56]
 5307 00c6 9F63     		str	r7, [r3, #56]
2300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->TXDR, hi2c->XferSize
 5308              		.loc 1 2300 0
 5309 00c8 2A68     		ldr	r2, [r5]
 5310 00ca 2832     		add	r2, r2, #40
 5311 00cc 2B8D     		ldrh	r3, [r5, #40]
 5312 00ce A86B     		ldr	r0, [r5, #56]
 5313 00d0 0A99     		ldr	r1, [sp, #40]
 5314 00d2 FFF7FEFF 		bl	HAL_DMA_Start_IT
 5315              	.LVL443:
2304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, xfermode, I2C_NO_STARTSTOP);
 5316              		.loc 1 2304 0
 5317 00d6 2A8D     		ldrh	r2, [r5, #40]
 5318 00d8 D2B2     		uxtb	r2, r2
 5319 00da 0097     		str	r7, [sp]
 5320 00dc 281C     		mov	r0, r5
 5321 00de 311C     		mov	r1, r6
 5322 00e0 4B46     		mov	r3, r9
 5323 00e2 FFF7FEFF 		bl	I2C_TransferConfig
 5324              	.LVL444:
2307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount -= hi2c->XferSize;
 5325              		.loc 1 2307 0
 5326 00e6 6A8D     		ldrh	r2, [r5, #42]
 5327 00e8 2B8D     		ldrh	r3, [r5, #40]
ARM GAS  /tmp/cchP46LN.s 			page 193


 5328 00ea D31A     		sub	r3, r2, r3
 5329 00ec 9BB2     		uxth	r3, r3
 5330 00ee 6B85     		strh	r3, [r5, #42]
2310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 5331              		.loc 1 2310 0
 5332 00f0 4023     		mov	r3, #64
 5333 00f2 EF54     		strb	r7, [r5, r3]
2316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
 5334              		.loc 1 2316 0
 5335 00f4 281C     		mov	r0, r5
 5336 00f6 1121     		mov	r1, #17
 5337 00f8 FFF7FEFF 		bl	I2C_Enable_IRQ
 5338              	.LVL445:
2319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
 5339              		.loc 1 2319 0
 5340 00fc 2B68     		ldr	r3, [r5]
 5341 00fe 1968     		ldr	r1, [r3]
 5342 0100 8022     		mov	r2, #128
 5343 0102 D201     		lsl	r2, r2, #7
 5344 0104 0A43     		orr	r2, r1
 5345 0106 1A60     		str	r2, [r3]
2321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
 5346              		.loc 1 2321 0
 5347 0108 08E0     		b	.L334
 5348              	.LVL446:
 5349              	.L339:
2325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
 5350              		.loc 1 2325 0
 5351 010a 0224     		mov	r4, #2
 5352 010c 06E0     		b	.L334
 5353              	.L340:
2237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return  HAL_ERROR;
 5354              		.loc 1 2237 0
 5355 010e 0124     		mov	r4, #1
 5356 0110 04E0     		b	.L334
 5357              	.L341:
 5358 0112 0124     		mov	r4, #1
 5359 0114 02E0     		b	.L334
 5360              	.LVL447:
 5361              	.L342:
2242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_BUSY;
 5362              		.loc 1 2242 0
 5363 0116 0224     		mov	r4, #2
 5364 0118 00E0     		b	.L334
 5365              	.L343:
2246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 5366              		.loc 1 2246 0
 5367 011a 0224     		mov	r4, #2
 5368              	.LVL448:
 5369              	.L334:
2327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 5370              		.loc 1 2327 0
 5371 011c 201C     		mov	r0, r4
 5372 011e 03B0     		add	sp, sp, #12
 5373              		@ sp needed
 5374              	.LVL449:
 5375 0120 0CBC     		pop	{r2, r3}
ARM GAS  /tmp/cchP46LN.s 			page 194


 5376 0122 9046     		mov	r8, r2
 5377 0124 9946     		mov	r9, r3
 5378 0126 F0BD     		pop	{r4, r5, r6, r7, pc}
 5379              	.L345:
 5380              		.align	2
 5381              	.L344:
 5382 0128 0000FFFF 		.word	-65536
 5383 012c 00000000 		.word	I2C_Master_ISR_DMA
 5384 0130 00000000 		.word	I2C_DMAMasterTransmitCplt
 5385 0134 00000000 		.word	I2C_DMAError
 5386              		.cfi_endproc
 5387              	.LFE56:
 5389              		.section	.text.HAL_I2C_Mem_Read_DMA,"ax",%progbits
 5390              		.align	2
 5391              		.global	HAL_I2C_Mem_Read_DMA
 5392              		.code	16
 5393              		.thumb_func
 5395              	HAL_I2C_Mem_Read_DMA:
 5396              	.LFB57:
2342:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 5397              		.loc 1 2342 0
 5398              		.cfi_startproc
 5399              	.LVL450:
 5400 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 5401              	.LCFI56:
 5402              		.cfi_def_cfa_offset 20
 5403              		.cfi_offset 4, -20
 5404              		.cfi_offset 5, -16
 5405              		.cfi_offset 6, -12
 5406              		.cfi_offset 7, -8
 5407              		.cfi_offset 14, -4
 5408 0002 4F46     		mov	r7, r9
 5409 0004 4646     		mov	r6, r8
 5410 0006 C0B4     		push	{r6, r7}
 5411              	.LCFI57:
 5412              		.cfi_def_cfa_offset 28
 5413              		.cfi_offset 8, -28
 5414              		.cfi_offset 9, -24
 5415 0008 83B0     		sub	sp, sp, #12
 5416              	.LCFI58:
 5417              		.cfi_def_cfa_offset 40
 5418 000a 051C     		mov	r5, r0
 5419 000c 0E1C     		mov	r6, r1
 5420 000e 9046     		mov	r8, r2
 5421 0010 1F1C     		mov	r7, r3
 5422 0012 0AAC     		add	r4, sp, #40
 5423              	.LVL451:
 5424 0014 04CC     		ldmia	r4!, {r2}
 5425              	.LVL452:
 5426 0016 2488     		ldrh	r4, [r4]
 5427              	.LVL453:
2349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 5428              		.loc 1 2349 0
 5429 0018 4120     		mov	r0, #65
 5430              	.LVL454:
 5431 001a 285C     		ldrb	r0, [r5, r0]
 5432 001c 2028     		cmp	r0, #32
ARM GAS  /tmp/cchP46LN.s 			page 195


 5433 001e 76D1     		bne	.L352
2351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 5434              		.loc 1 2351 0
 5435 0020 002A     		cmp	r2, #0
 5436 0022 76D0     		beq	.L353
2351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 5437              		.loc 1 2351 0 is_stmt 0 discriminator 1
 5438 0024 002C     		cmp	r4, #0
 5439 0026 76D0     		beq	.L354
2356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
 5440              		.loc 1 2356 0 is_stmt 1
 5441 0028 2B68     		ldr	r3, [r5]
 5442              	.LVL455:
 5443 002a 9B69     		ldr	r3, [r3, #24]
 5444 002c 1A04     		lsl	r2, r3, #16
 5445 002e 74D4     		bmi	.L355
2362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 5446              		.loc 1 2362 0
 5447 0030 4023     		mov	r3, #64
 5448 0032 EB5C     		ldrb	r3, [r5, r3]
 5449 0034 012B     		cmp	r3, #1
 5450 0036 72D0     		beq	.L356
2362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 5451              		.loc 1 2362 0 is_stmt 0 discriminator 2
 5452 0038 4023     		mov	r3, #64
 5453 003a 9946     		mov	r9, r3
 5454 003c 0123     		mov	r3, #1
 5455 003e 4A46     		mov	r2, r9
 5456 0040 AB54     		strb	r3, [r5, r2]
2365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     tickstart = HAL_GetTick();
 5457              		.loc 1 2365 0 is_stmt 1 discriminator 2
 5458 0042 FFF7FEFF 		bl	HAL_GetTick
 5459              	.LVL456:
2367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
 5460              		.loc 1 2367 0 discriminator 2
 5461 0046 2222     		mov	r2, #34
 5462 0048 4123     		mov	r3, #65
 5463 004a EA54     		strb	r2, [r5, r3]
2368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 5464              		.loc 1 2368 0 discriminator 2
 5465 004c 4223     		mov	r3, #66
 5466 004e 4A46     		mov	r2, r9
 5467 0050 EA54     		strb	r2, [r5, r3]
2369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 5468              		.loc 1 2369 0 discriminator 2
 5469 0052 0023     		mov	r3, #0
 5470 0054 6B64     		str	r3, [r5, #68]
2372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 5471              		.loc 1 2372 0 discriminator 2
 5472 0056 0A9B     		ldr	r3, [sp, #40]
 5473 0058 6B62     		str	r3, [r5, #36]
2373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 5474              		.loc 1 2373 0 discriminator 2
 5475 005a 6C85     		strh	r4, [r5, #42]
2374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 5476              		.loc 1 2374 0 discriminator 2
 5477 005c 334B     		ldr	r3, .L357
ARM GAS  /tmp/cchP46LN.s 			page 196


 5478 005e EB62     		str	r3, [r5, #44]
2375:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 5479              		.loc 1 2375 0 discriminator 2
 5480 0060 334B     		ldr	r3, .L357+4
 5481 0062 6B63     		str	r3, [r5, #52]
2377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
 5482              		.loc 1 2377 0 discriminator 2
 5483 0064 6B8D     		ldrh	r3, [r5, #42]
 5484 0066 9BB2     		uxth	r3, r3
 5485 0068 FF2B     		cmp	r3, #255
 5486 006a 05D9     		bls	.L348
2379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 5487              		.loc 1 2379 0
 5488 006c FF23     		mov	r3, #255
 5489 006e 2B85     		strh	r3, [r5, #40]
 5490              	.LVL457:
2380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 5491              		.loc 1 2380 0
 5492 0070 8023     		mov	r3, #128
 5493 0072 5B04     		lsl	r3, r3, #17
 5494 0074 9946     		mov	r9, r3
 5495 0076 04E0     		b	.L349
 5496              	.LVL458:
 5497              	.L348:
2384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 5498              		.loc 1 2384 0
 5499 0078 6B8D     		ldrh	r3, [r5, #42]
 5500 007a 2B85     		strh	r3, [r5, #40]
 5501              	.LVL459:
2385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 5502              		.loc 1 2385 0
 5503 007c 8023     		mov	r3, #128
 5504 007e 9B04     		lsl	r3, r3, #18
 5505 0080 9946     		mov	r9, r3
 5506              	.LVL460:
 5507              	.L349:
2389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstart)
 5508              		.loc 1 2389 0
 5509 0082 1923     		mov	r3, #25
 5510 0084 0093     		str	r3, [sp]
 5511 0086 0190     		str	r0, [sp, #4]
 5512 0088 281C     		mov	r0, r5
 5513              	.LVL461:
 5514 008a 311C     		mov	r1, r6
 5515 008c 4246     		mov	r2, r8
 5516 008e 3B1C     		mov	r3, r7
 5517 0090 FFF7FEFF 		bl	I2C_RequestMemoryRead
 5518              	.LVL462:
 5519 0094 041E     		sub	r4, r0, #0
 5520 0096 0CD0     		beq	.L350
2391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 5521              		.loc 1 2391 0
 5522 0098 6B6C     		ldr	r3, [r5, #68]
 5523 009a 042B     		cmp	r3, #4
 5524 009c 04D1     		bne	.L351
2394:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 5525              		.loc 1 2394 0
ARM GAS  /tmp/cchP46LN.s 			page 197


 5526 009e 0022     		mov	r2, #0
 5527 00a0 4023     		mov	r3, #64
 5528 00a2 EA54     		strb	r2, [r5, r3]
2395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_ERROR;
 5529              		.loc 1 2395 0
 5530 00a4 0124     		mov	r4, #1
 5531 00a6 3BE0     		b	.L347
 5532              	.L351:
2400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 5533              		.loc 1 2400 0
 5534 00a8 0022     		mov	r2, #0
 5535 00aa 4023     		mov	r3, #64
 5536 00ac EA54     		strb	r2, [r5, r3]
2401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_TIMEOUT;
 5537              		.loc 1 2401 0
 5538 00ae 0324     		mov	r4, #3
 5539 00b0 36E0     		b	.L347
 5540              	.L350:
2406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->hdmarx->XferCpltCallback = I2C_DMAMasterReceiveCplt;
 5541              		.loc 1 2406 0
 5542 00b2 EB6B     		ldr	r3, [r5, #60]
 5543 00b4 1F4A     		ldr	r2, .L357+8
 5544 00b6 DA62     		str	r2, [r3, #44]
2409:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
 5545              		.loc 1 2409 0
 5546 00b8 EB6B     		ldr	r3, [r5, #60]
 5547 00ba 1F4A     		ldr	r2, .L357+12
 5548 00bc 5A63     		str	r2, [r3, #52]
2412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->hdmarx->XferHalfCpltCallback = NULL;
 5549              		.loc 1 2412 0
 5550 00be EB6B     		ldr	r3, [r5, #60]
 5551 00c0 0027     		mov	r7, #0
 5552 00c2 1F63     		str	r7, [r3, #48]
2413:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->hdmarx->XferAbortCallback = NULL;
 5553              		.loc 1 2413 0
 5554 00c4 EB6B     		ldr	r3, [r5, #60]
 5555 00c6 9F63     		str	r7, [r3, #56]
2416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)pData, hi2c->XferSize
 5556              		.loc 1 2416 0
 5557 00c8 2968     		ldr	r1, [r5]
 5558 00ca 2431     		add	r1, r1, #36
 5559 00cc 2B8D     		ldrh	r3, [r5, #40]
 5560 00ce E86B     		ldr	r0, [r5, #60]
 5561 00d0 0A9A     		ldr	r2, [sp, #40]
 5562 00d2 FFF7FEFF 		bl	HAL_DMA_Start_IT
 5563              	.LVL463:
2419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_TransferConfig(hi2c,DevAddress, hi2c->XferSize, xfermode, I2C_GENERATE_START_READ);
 5564              		.loc 1 2419 0
 5565 00d6 2A8D     		ldrh	r2, [r5, #40]
 5566 00d8 D2B2     		uxtb	r2, r2
 5567 00da 9023     		mov	r3, #144
 5568 00dc 9B01     		lsl	r3, r3, #6
 5569 00de 0093     		str	r3, [sp]
 5570 00e0 281C     		mov	r0, r5
 5571 00e2 311C     		mov	r1, r6
 5572 00e4 4B46     		mov	r3, r9
 5573 00e6 FFF7FEFF 		bl	I2C_TransferConfig
ARM GAS  /tmp/cchP46LN.s 			page 198


 5574              	.LVL464:
2422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount -= hi2c->XferSize;
 5575              		.loc 1 2422 0
 5576 00ea 6A8D     		ldrh	r2, [r5, #42]
 5577 00ec 2B8D     		ldrh	r3, [r5, #40]
 5578 00ee D31A     		sub	r3, r2, r3
 5579 00f0 9BB2     		uxth	r3, r3
 5580 00f2 6B85     		strh	r3, [r5, #42]
2425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 5581              		.loc 1 2425 0
 5582 00f4 4023     		mov	r3, #64
 5583 00f6 EF54     		strb	r7, [r5, r3]
2428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
 5584              		.loc 1 2428 0
 5585 00f8 2B68     		ldr	r3, [r5]
 5586 00fa 1968     		ldr	r1, [r3]
 5587 00fc 8022     		mov	r2, #128
 5588 00fe 1202     		lsl	r2, r2, #8
 5589 0100 0A43     		orr	r2, r1
 5590 0102 1A60     		str	r2, [r3]
2434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
 5591              		.loc 1 2434 0
 5592 0104 281C     		mov	r0, r5
 5593 0106 1121     		mov	r1, #17
 5594 0108 FFF7FEFF 		bl	I2C_Enable_IRQ
 5595              	.LVL465:
2436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
 5596              		.loc 1 2436 0
 5597 010c 08E0     		b	.L347
 5598              	.LVL466:
 5599              	.L352:
2440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
 5600              		.loc 1 2440 0
 5601 010e 0224     		mov	r4, #2
 5602 0110 06E0     		b	.L347
 5603              	.L353:
2353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return  HAL_ERROR;
 5604              		.loc 1 2353 0
 5605 0112 0124     		mov	r4, #1
 5606 0114 04E0     		b	.L347
 5607              	.L354:
 5608 0116 0124     		mov	r4, #1
 5609 0118 02E0     		b	.L347
 5610              	.LVL467:
 5611              	.L355:
2358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_BUSY;
 5612              		.loc 1 2358 0
 5613 011a 0224     		mov	r4, #2
 5614 011c 00E0     		b	.L347
 5615              	.L356:
2362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 5616              		.loc 1 2362 0
 5617 011e 0224     		mov	r4, #2
 5618              	.LVL468:
 5619              	.L347:
2442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 5620              		.loc 1 2442 0
ARM GAS  /tmp/cchP46LN.s 			page 199


 5621 0120 201C     		mov	r0, r4
 5622 0122 03B0     		add	sp, sp, #12
 5623              		@ sp needed
 5624              	.LVL469:
 5625 0124 0CBC     		pop	{r2, r3}
 5626 0126 9046     		mov	r8, r2
 5627 0128 9946     		mov	r9, r3
 5628 012a F0BD     		pop	{r4, r5, r6, r7, pc}
 5629              	.L358:
 5630              		.align	2
 5631              	.L357:
 5632 012c 0000FFFF 		.word	-65536
 5633 0130 00000000 		.word	I2C_Master_ISR_DMA
 5634 0134 00000000 		.word	I2C_DMAMasterReceiveCplt
 5635 0138 00000000 		.word	I2C_DMAError
 5636              		.cfi_endproc
 5637              	.LFE57:
 5639              		.section	.text.HAL_I2C_IsDeviceReady,"ax",%progbits
 5640              		.align	2
 5641              		.global	HAL_I2C_IsDeviceReady
 5642              		.code	16
 5643              		.thumb_func
 5645              	HAL_I2C_IsDeviceReady:
 5646              	.LFB58:
2456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 5647              		.loc 1 2456 0
 5648              		.cfi_startproc
 5649              	.LVL470:
 5650 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 5651              	.LCFI59:
 5652              		.cfi_def_cfa_offset 20
 5653              		.cfi_offset 4, -20
 5654              		.cfi_offset 5, -16
 5655              		.cfi_offset 6, -12
 5656              		.cfi_offset 7, -8
 5657              		.cfi_offset 14, -4
 5658 0002 5F46     		mov	r7, fp
 5659 0004 5646     		mov	r6, r10
 5660 0006 4D46     		mov	r5, r9
 5661 0008 4446     		mov	r4, r8
 5662 000a F0B4     		push	{r4, r5, r6, r7}
 5663              	.LCFI60:
 5664              		.cfi_def_cfa_offset 36
 5665              		.cfi_offset 8, -36
 5666              		.cfi_offset 9, -32
 5667              		.cfi_offset 10, -28
 5668              		.cfi_offset 11, -24
 5669 000c 85B0     		sub	sp, sp, #20
 5670              	.LCFI61:
 5671              		.cfi_def_cfa_offset 56
 5672 000e 041C     		mov	r4, r0
 5673 0010 9146     		mov	r9, r2
 5674 0012 1D1C     		mov	r5, r3
 5675              	.LVL471:
2459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __IO uint32_t I2C_Trials = 0U;
 5676              		.loc 1 2459 0
 5677 0014 0023     		mov	r3, #0
ARM GAS  /tmp/cchP46LN.s 			page 200


 5678              	.LVL472:
 5679 0016 0393     		str	r3, [sp, #12]
2461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 5680              		.loc 1 2461 0
 5681 0018 4123     		mov	r3, #65
 5682 001a C35C     		ldrb	r3, [r0, r3]
 5683 001c 202B     		cmp	r3, #32
 5684 001e 00D0     		beq	.LCB5763
 5685 0020 90E0     		b	.L371	@long jump
 5686              	.LCB5763:
2463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
 5687              		.loc 1 2463 0
 5688 0022 0368     		ldr	r3, [r0]
 5689 0024 9B69     		ldr	r3, [r3, #24]
 5690 0026 1A04     		lsl	r2, r3, #16
 5691 0028 00D5     		bpl	.LCB5769
 5692 002a 8DE0     		b	.L372	@long jump
 5693              	.LCB5769:
 5694              	.LVL473:
2469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 5695              		.loc 1 2469 0
 5696 002c 4023     		mov	r3, #64
 5697 002e C35C     		ldrb	r3, [r0, r3]
 5698 0030 012B     		cmp	r3, #1
 5699 0032 00D1     		bne	.LCB5774
 5700 0034 8AE0     		b	.L373	@long jump
 5701              	.LCB5774:
2469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 5702              		.loc 1 2469 0 is_stmt 0 discriminator 2
 5703 0036 0122     		mov	r2, #1
 5704 0038 4023     		mov	r3, #64
 5705 003a C254     		strb	r2, [r0, r3]
2471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_BUSY;
 5706              		.loc 1 2471 0 is_stmt 1 discriminator 2
 5707 003c 2422     		mov	r2, #36
 5708 003e 4123     		mov	r3, #65
 5709 0040 C254     		strb	r2, [r0, r3]
2472:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 5710              		.loc 1 2472 0 discriminator 2
 5711 0042 0023     		mov	r3, #0
 5712 0044 4364     		str	r3, [r0, #68]
2477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Instance->CR2 = I2C_GENERATE_START(hi2c->Init.AddressingMode,DevAddress);
 5713              		.loc 1 2477 0 discriminator 2
 5714 0046 8905     		lsl	r1, r1, #22
 5715              	.LVL474:
 5716 0048 890D     		lsr	r1, r1, #22
 5717 004a 8B46     		mov	fp, r1
 5718              	.LVL475:
 5719              	.L370:
2477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Instance->CR2 = I2C_GENERATE_START(hi2c->Init.AddressingMode,DevAddress);
 5720              		.loc 1 2477 0 is_stmt 0
 5721 004c 2368     		ldr	r3, [r4]
 5722 004e E168     		ldr	r1, [r4, #12]
 5723 0050 0129     		cmp	r1, #1
 5724 0052 03D1     		bne	.L361
2477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Instance->CR2 = I2C_GENERATE_START(hi2c->Init.AddressingMode,DevAddress);
 5725              		.loc 1 2477 0 discriminator 1
ARM GAS  /tmp/cchP46LN.s 			page 201


 5726 0054 444A     		ldr	r2, .L379
 5727 0056 5946     		mov	r1, fp
 5728 0058 0A43     		orr	r2, r1
 5729 005a 03E0     		b	.L362
 5730              	.L361:
2477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Instance->CR2 = I2C_GENERATE_START(hi2c->Init.AddressingMode,DevAddress);
 5731              		.loc 1 2477 0 discriminator 2
 5732 005c A022     		mov	r2, #160
 5733 005e 9201     		lsl	r2, r2, #6
 5734 0060 5946     		mov	r1, fp
 5735 0062 0A43     		orr	r2, r1
 5736              	.L362:
2477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Instance->CR2 = I2C_GENERATE_START(hi2c->Init.AddressingMode,DevAddress);
 5737              		.loc 1 2477 0 discriminator 3
 5738 0064 5A60     		str	r2, [r3, #4]
2481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       tickstart = HAL_GetTick();
 5739              		.loc 1 2481 0 is_stmt 1 discriminator 3
 5740 0066 FFF7FEFF 		bl	HAL_GetTick
 5741              	.LVL476:
 5742 006a 8246     		mov	r10, r0
 5743              	.LVL477:
2482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       while((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (__HAL_I2C_GET_FLAG(hi2c, I2C_FL
 5744              		.loc 1 2482 0 discriminator 3
 5745 006c 2026     		mov	r6, #32
 5746 006e 1027     		mov	r7, #16
 5747 0070 4122     		mov	r2, #65
 5748 0072 9046     		mov	r8, r2
 5749 0074 11E0     		b	.L378
 5750              	.LVL478:
 5751              	.L367:
2484:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       	if(Timeout != HAL_MAX_DELAY)
 5752              		.loc 1 2484 0
 5753 0076 6B1C     		add	r3, r5, #1
 5754 0078 0FD0     		beq	.L378
2486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           if((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 5755              		.loc 1 2486 0
 5756 007a 002D     		cmp	r5, #0
 5757 007c 05D0     		beq	.L365
2486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           if((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 5758              		.loc 1 2486 0 is_stmt 0 discriminator 1
 5759 007e FFF7FEFF 		bl	HAL_GetTick
 5760              	.LVL479:
 5761 0082 5146     		mov	r1, r10
 5762 0084 401A     		sub	r0, r0, r1
 5763 0086 A842     		cmp	r0, r5
 5764 0088 07D9     		bls	.L378
 5765              	.L365:
2489:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****             hi2c->State = HAL_I2C_STATE_READY;
 5766              		.loc 1 2489 0 is_stmt 1
 5767 008a 2022     		mov	r2, #32
 5768 008c 4123     		mov	r3, #65
 5769 008e E254     		strb	r2, [r4, r3]
2491:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****             __HAL_UNLOCK(hi2c);
 5770              		.loc 1 2491 0
 5771 0090 0022     		mov	r2, #0
 5772 0092 4023     		mov	r3, #64
 5773 0094 E254     		strb	r2, [r4, r3]
ARM GAS  /tmp/cchP46LN.s 			page 202


2492:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****             return HAL_TIMEOUT;
 5774              		.loc 1 2492 0
 5775 0096 0320     		mov	r0, #3
 5776 0098 5FE0     		b	.L360
 5777              	.L378:
2482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       while((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (__HAL_I2C_GET_FLAG(hi2c, I2C_FL
 5778              		.loc 1 2482 0 discriminator 1
 5779 009a 2368     		ldr	r3, [r4]
 5780 009c 9A69     		ldr	r2, [r3, #24]
 5781 009e 1642     		tst	r6, r2
 5782 00a0 07D1     		bne	.L366
2482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       while((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (__HAL_I2C_GET_FLAG(hi2c, I2C_FL
 5783              		.loc 1 2482 0 is_stmt 0 discriminator 2
 5784 00a2 9A69     		ldr	r2, [r3, #24]
 5785 00a4 1742     		tst	r7, r2
 5786 00a6 04D1     		bne	.L366
2482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       while((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (__HAL_I2C_GET_FLAG(hi2c, I2C_FL
 5787              		.loc 1 2482 0 discriminator 1
 5788 00a8 4146     		mov	r1, r8
 5789 00aa 625C     		ldrb	r2, [r4, r1]
 5790 00ac D2B2     		uxtb	r2, r2
 5791 00ae A02A     		cmp	r2, #160
 5792 00b0 E1D1     		bne	.L367
 5793              	.L366:
2498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == RESET)
 5794              		.loc 1 2498 0 is_stmt 1
 5795 00b2 9B69     		ldr	r3, [r3, #24]
 5796 00b4 DA06     		lsl	r2, r3, #27
 5797 00b6 12D4     		bmi	.L368
2501:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
 5798              		.loc 1 2501 0
 5799 00b8 5346     		mov	r3, r10
 5800 00ba 0093     		str	r3, [sp]
 5801 00bc 201C     		mov	r0, r4
 5802 00be 2021     		mov	r1, #32
 5803 00c0 0022     		mov	r2, #0
 5804 00c2 2B1C     		mov	r3, r5
 5805 00c4 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 5806              	.LVL480:
 5807 00c8 0028     		cmp	r0, #0
 5808 00ca 41D1     		bne	.L374
2507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 5809              		.loc 1 2507 0
 5810 00cc 2268     		ldr	r2, [r4]
 5811 00ce 2023     		mov	r3, #32
 5812 00d0 D361     		str	r3, [r2, #28]
2510:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
 5813              		.loc 1 2510 0
 5814 00d2 4122     		mov	r2, #65
 5815 00d4 A354     		strb	r3, [r4, r2]
2513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 5816              		.loc 1 2513 0
 5817 00d6 0022     		mov	r2, #0
 5818 00d8 4023     		mov	r3, #64
 5819 00da E254     		strb	r2, [r4, r3]
2515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         return HAL_OK;
 5820              		.loc 1 2515 0
ARM GAS  /tmp/cchP46LN.s 			page 203


 5821 00dc 3DE0     		b	.L360
 5822              	.L368:
2520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
 5823              		.loc 1 2520 0
 5824 00de 5146     		mov	r1, r10
 5825 00e0 0091     		str	r1, [sp]
 5826 00e2 201C     		mov	r0, r4
 5827 00e4 2021     		mov	r1, #32
 5828 00e6 0022     		mov	r2, #0
 5829 00e8 2B1C     		mov	r3, r5
 5830 00ea FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 5831              	.LVL481:
 5832 00ee 0028     		cmp	r0, #0
 5833 00f0 30D1     		bne	.L375
2526:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 5834              		.loc 1 2526 0
 5835 00f2 2368     		ldr	r3, [r4]
 5836 00f4 1022     		mov	r2, #16
 5837 00f6 DA61     		str	r2, [r3, #28]
2529:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 5838              		.loc 1 2529 0
 5839 00f8 2368     		ldr	r3, [r4]
 5840 00fa 2022     		mov	r2, #32
 5841 00fc DA61     		str	r2, [r3, #28]
2533:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if (I2C_Trials++ == Trials)
 5842              		.loc 1 2533 0
 5843 00fe 039B     		ldr	r3, [sp, #12]
 5844 0100 5A1C     		add	r2, r3, #1
 5845 0102 0392     		str	r2, [sp, #12]
 5846 0104 4B45     		cmp	r3, r9
 5847 0106 12D1     		bne	.L369
2536:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_STOP;
 5848              		.loc 1 2536 0
 5849 0108 2368     		ldr	r3, [r4]
 5850 010a 5968     		ldr	r1, [r3, #4]
 5851 010c 8022     		mov	r2, #128
 5852 010e D201     		lsl	r2, r2, #7
 5853 0110 0A43     		orr	r2, r1
 5854 0112 5A60     		str	r2, [r3, #4]
2539:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
 5855              		.loc 1 2539 0
 5856 0114 5246     		mov	r2, r10
 5857 0116 0092     		str	r2, [sp]
 5858 0118 201C     		mov	r0, r4
 5859 011a 2021     		mov	r1, #32
 5860 011c 0022     		mov	r2, #0
 5861 011e 2B1C     		mov	r3, r5
 5862 0120 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 5863              	.LVL482:
 5864 0124 0028     		cmp	r0, #0
 5865 0126 17D1     		bne	.L376
2545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 5866              		.loc 1 2545 0
 5867 0128 2368     		ldr	r3, [r4]
 5868 012a 2022     		mov	r2, #32
 5869 012c DA61     		str	r2, [r3, #28]
 5870              	.L369:
ARM GAS  /tmp/cchP46LN.s 			page 204


2547:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     }while(I2C_Trials < Trials);
 5871              		.loc 1 2547 0
 5872 012e 039B     		ldr	r3, [sp, #12]
 5873 0130 4B45     		cmp	r3, r9
 5874 0132 8BD3     		bcc	.L370
2549:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 5875              		.loc 1 2549 0
 5876 0134 2022     		mov	r2, #32
 5877 0136 4123     		mov	r3, #65
 5878 0138 E254     		strb	r2, [r4, r3]
2552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 5879              		.loc 1 2552 0
 5880 013a 0022     		mov	r2, #0
 5881 013c 4023     		mov	r3, #64
 5882 013e E254     		strb	r2, [r4, r3]
2554:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_TIMEOUT;
 5883              		.loc 1 2554 0
 5884 0140 0320     		mov	r0, #3
 5885 0142 0AE0     		b	.L360
 5886              	.LVL483:
 5887              	.L371:
2558:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
 5888              		.loc 1 2558 0
 5889 0144 0220     		mov	r0, #2
 5890              	.LVL484:
 5891 0146 08E0     		b	.L360
 5892              	.LVL485:
 5893              	.L372:
2465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return HAL_BUSY;
 5894              		.loc 1 2465 0
 5895 0148 0220     		mov	r0, #2
 5896              	.LVL486:
 5897 014a 06E0     		b	.L360
 5898              	.LVL487:
 5899              	.L373:
2469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 5900              		.loc 1 2469 0
 5901 014c 0220     		mov	r0, #2
 5902              	.LVL488:
 5903 014e 04E0     		b	.L360
 5904              	.LVL489:
 5905              	.L374:
2503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           return HAL_TIMEOUT;
 5906              		.loc 1 2503 0
 5907 0150 0320     		mov	r0, #3
 5908 0152 02E0     		b	.L360
 5909              	.L375:
2522:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           return HAL_TIMEOUT;
 5910              		.loc 1 2522 0
 5911 0154 0320     		mov	r0, #3
 5912 0156 00E0     		b	.L360
 5913              	.L376:
2541:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           return HAL_TIMEOUT;
 5914              		.loc 1 2541 0
 5915 0158 0320     		mov	r0, #3
 5916              	.LVL490:
 5917              	.L360:
ARM GAS  /tmp/cchP46LN.s 			page 205


2560:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 5918              		.loc 1 2560 0
 5919 015a 05B0     		add	sp, sp, #20
 5920              		@ sp needed
 5921              	.LVL491:
 5922              	.LVL492:
 5923              	.LVL493:
 5924 015c 3CBC     		pop	{r2, r3, r4, r5}
 5925 015e 9046     		mov	r8, r2
 5926 0160 9946     		mov	r9, r3
 5927 0162 A246     		mov	r10, r4
 5928 0164 AB46     		mov	fp, r5
 5929 0166 F0BD     		pop	{r4, r5, r6, r7, pc}
 5930              	.L380:
 5931              		.align	2
 5932              	.L379:
 5933 0168 00200002 		.word	33562624
 5934              		.cfi_endproc
 5935              	.LFE58:
 5937              		.section	.text.HAL_I2C_Master_Sequential_Transmit_IT,"ax",%progbits
 5938              		.align	2
 5939              		.global	HAL_I2C_Master_Sequential_Transmit_IT
 5940              		.code	16
 5941              		.thumb_func
 5943              	HAL_I2C_Master_Sequential_Transmit_IT:
 5944              	.LFB59:
2575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 5945              		.loc 1 2575 0
 5946              		.cfi_startproc
 5947              	.LVL494:
 5948 0000 30B5     		push	{r4, r5, lr}
 5949              	.LCFI62:
 5950              		.cfi_def_cfa_offset 12
 5951              		.cfi_offset 4, -12
 5952              		.cfi_offset 5, -8
 5953              		.cfi_offset 14, -4
 5954 0002 83B0     		sub	sp, sp, #12
 5955              	.LCFI63:
 5956              		.cfi_def_cfa_offset 24
 5957 0004 041C     		mov	r4, r0
 5958              	.LVL495:
2582:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 5959              		.loc 1 2582 0
 5960 0006 4120     		mov	r0, #65
 5961              	.LVL496:
 5962 0008 205C     		ldrb	r0, [r4, r0]
 5963 000a 2028     		cmp	r0, #32
 5964 000c 36D1     		bne	.L386
2585:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 5965              		.loc 1 2585 0
 5966 000e 4020     		mov	r0, #64
 5967 0010 205C     		ldrb	r0, [r4, r0]
 5968 0012 0128     		cmp	r0, #1
 5969 0014 34D0     		beq	.L387
2585:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 5970              		.loc 1 2585 0 is_stmt 0 discriminator 2
 5971 0016 0125     		mov	r5, #1
ARM GAS  /tmp/cchP46LN.s 			page 206


 5972 0018 4020     		mov	r0, #64
 5973 001a 2554     		strb	r5, [r4, r0]
2587:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 5974              		.loc 1 2587 0 is_stmt 1 discriminator 2
 5975 001c 2125     		mov	r5, #33
 5976 001e 4120     		mov	r0, #65
 5977 0020 2554     		strb	r5, [r4, r0]
2588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 5978              		.loc 1 2588 0 discriminator 2
 5979 0022 1025     		mov	r5, #16
 5980 0024 4220     		mov	r0, #66
 5981 0026 2554     		strb	r5, [r4, r0]
2589:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 5982              		.loc 1 2589 0 discriminator 2
 5983 0028 0020     		mov	r0, #0
 5984 002a 6064     		str	r0, [r4, #68]
2592:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 5985              		.loc 1 2592 0 discriminator 2
 5986 002c 6262     		str	r2, [r4, #36]
2593:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 5987              		.loc 1 2593 0 discriminator 2
 5988 002e 6385     		strh	r3, [r4, #42]
2594:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 5989              		.loc 1 2594 0 discriminator 2
 5990 0030 069B     		ldr	r3, [sp, #24]
 5991              	.LVL497:
 5992 0032 E362     		str	r3, [r4, #44]
 5993              	.LVL498:
2595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 5994              		.loc 1 2595 0 discriminator 2
 5995 0034 144B     		ldr	r3, .L389
 5996 0036 6363     		str	r3, [r4, #52]
2598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
 5997              		.loc 1 2598 0 discriminator 2
 5998 0038 638D     		ldrh	r3, [r4, #42]
 5999 003a 9BB2     		uxth	r3, r3
 6000 003c FF2B     		cmp	r3, #255
 6001 003e 04D9     		bls	.L383
2600:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 6002              		.loc 1 2600 0
 6003 0040 FF23     		mov	r3, #255
 6004 0042 2385     		strh	r3, [r4, #40]
 6005              	.LVL499:
2601:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 6006              		.loc 1 2601 0
 6007 0044 8023     		mov	r3, #128
 6008 0046 5B04     		lsl	r3, r3, #17
 6009 0048 02E0     		b	.L384
 6010              	.LVL500:
 6011              	.L383:
2605:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 6012              		.loc 1 2605 0
 6013 004a 638D     		ldrh	r3, [r4, #42]
 6014 004c 2385     		strh	r3, [r4, #40]
2606:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
 6015              		.loc 1 2606 0
 6016 004e E36A     		ldr	r3, [r4, #44]
ARM GAS  /tmp/cchP46LN.s 			page 207


 6017              	.LVL501:
 6018              	.L384:
2611:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->PreviousState == I2C_STATE_MASTER_BUSY_TX)
 6019              		.loc 1 2611 0
 6020 0050 226B     		ldr	r2, [r4, #48]
 6021              	.LVL502:
 6022 0052 112A     		cmp	r2, #17
 6023 0054 02D0     		beq	.L388
2577:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_WRITE;
 6024              		.loc 1 2577 0
 6025 0056 8020     		mov	r0, #128
 6026 0058 8001     		lsl	r0, r0, #6
 6027 005a 00E0     		b	.L385
 6028              	.L388:
2613:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
 6029              		.loc 1 2613 0
 6030 005c 0020     		mov	r0, #0
 6031              	.L385:
 6032              	.LVL503:
2617:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, xfermode, xferrequest);
 6033              		.loc 1 2617 0
 6034 005e 228D     		ldrh	r2, [r4, #40]
 6035 0060 D2B2     		uxtb	r2, r2
 6036 0062 0090     		str	r0, [sp]
 6037              	.LVL504:
 6038 0064 201C     		mov	r0, r4
 6039              	.LVL505:
 6040 0066 FFF7FEFF 		bl	I2C_TransferConfig
 6041              	.LVL506:
2620:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 6042              		.loc 1 2620 0
 6043 006a 0022     		mov	r2, #0
 6044 006c 4023     		mov	r3, #64
 6045 006e E254     		strb	r2, [r4, r3]
2625:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
 6046              		.loc 1 2625 0
 6047 0070 201C     		mov	r0, r4
 6048 0072 0121     		mov	r1, #1
 6049 0074 FFF7FEFF 		bl	I2C_Enable_IRQ
 6050              	.LVL507:
2627:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
 6051              		.loc 1 2627 0
 6052 0078 0020     		mov	r0, #0
 6053 007a 02E0     		b	.L382
 6054              	.LVL508:
 6055              	.L386:
2631:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
 6056              		.loc 1 2631 0
 6057 007c 0220     		mov	r0, #2
 6058 007e 00E0     		b	.L382
 6059              	.L387:
2585:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 6060              		.loc 1 2585 0
 6061 0080 0220     		mov	r0, #2
 6062              	.LVL509:
 6063              	.L382:
2633:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
ARM GAS  /tmp/cchP46LN.s 			page 208


 6064              		.loc 1 2633 0
 6065 0082 03B0     		add	sp, sp, #12
 6066              		@ sp needed
 6067              	.LVL510:
 6068 0084 30BD     		pop	{r4, r5, pc}
 6069              	.L390:
 6070 0086 C046     		.align	2
 6071              	.L389:
 6072 0088 00000000 		.word	I2C_Master_ISR_IT
 6073              		.cfi_endproc
 6074              	.LFE59:
 6076              		.section	.text.HAL_I2C_Master_Sequential_Receive_IT,"ax",%progbits
 6077              		.align	2
 6078              		.global	HAL_I2C_Master_Sequential_Receive_IT
 6079              		.code	16
 6080              		.thumb_func
 6082              	HAL_I2C_Master_Sequential_Receive_IT:
 6083              	.LFB60:
2648:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 6084              		.loc 1 2648 0
 6085              		.cfi_startproc
 6086              	.LVL511:
 6087 0000 30B5     		push	{r4, r5, lr}
 6088              	.LCFI64:
 6089              		.cfi_def_cfa_offset 12
 6090              		.cfi_offset 4, -12
 6091              		.cfi_offset 5, -8
 6092              		.cfi_offset 14, -4
 6093 0002 83B0     		sub	sp, sp, #12
 6094              	.LCFI65:
 6095              		.cfi_def_cfa_offset 24
 6096 0004 041C     		mov	r4, r0
 6097              	.LVL512:
2655:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 6098              		.loc 1 2655 0
 6099 0006 4120     		mov	r0, #65
 6100              	.LVL513:
 6101 0008 205C     		ldrb	r0, [r4, r0]
 6102 000a 2028     		cmp	r0, #32
 6103 000c 36D1     		bne	.L396
2658:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 6104              		.loc 1 2658 0
 6105 000e 4020     		mov	r0, #64
 6106 0010 205C     		ldrb	r0, [r4, r0]
 6107 0012 0128     		cmp	r0, #1
 6108 0014 34D0     		beq	.L397
2658:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 6109              		.loc 1 2658 0 is_stmt 0 discriminator 2
 6110 0016 0125     		mov	r5, #1
 6111 0018 4020     		mov	r0, #64
 6112 001a 2554     		strb	r5, [r4, r0]
2660:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 6113              		.loc 1 2660 0 is_stmt 1 discriminator 2
 6114 001c 2225     		mov	r5, #34
 6115 001e 4120     		mov	r0, #65
 6116 0020 2554     		strb	r5, [r4, r0]
2661:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
ARM GAS  /tmp/cchP46LN.s 			page 209


 6117              		.loc 1 2661 0 discriminator 2
 6118 0022 1025     		mov	r5, #16
 6119 0024 4220     		mov	r0, #66
 6120 0026 2554     		strb	r5, [r4, r0]
2662:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 6121              		.loc 1 2662 0 discriminator 2
 6122 0028 0020     		mov	r0, #0
 6123 002a 6064     		str	r0, [r4, #68]
2665:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 6124              		.loc 1 2665 0 discriminator 2
 6125 002c 6262     		str	r2, [r4, #36]
2666:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 6126              		.loc 1 2666 0 discriminator 2
 6127 002e 6385     		strh	r3, [r4, #42]
2667:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 6128              		.loc 1 2667 0 discriminator 2
 6129 0030 069B     		ldr	r3, [sp, #24]
 6130              	.LVL514:
 6131 0032 E362     		str	r3, [r4, #44]
 6132              	.LVL515:
2668:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 6133              		.loc 1 2668 0 discriminator 2
 6134 0034 144B     		ldr	r3, .L399
 6135 0036 6363     		str	r3, [r4, #52]
2671:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
 6136              		.loc 1 2671 0 discriminator 2
 6137 0038 638D     		ldrh	r3, [r4, #42]
 6138 003a 9BB2     		uxth	r3, r3
 6139 003c FF2B     		cmp	r3, #255
 6140 003e 04D9     		bls	.L393
2673:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 6141              		.loc 1 2673 0
 6142 0040 FF23     		mov	r3, #255
 6143 0042 2385     		strh	r3, [r4, #40]
 6144              	.LVL516:
2674:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 6145              		.loc 1 2674 0
 6146 0044 8023     		mov	r3, #128
 6147 0046 5B04     		lsl	r3, r3, #17
 6148 0048 02E0     		b	.L394
 6149              	.LVL517:
 6150              	.L393:
2678:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 6151              		.loc 1 2678 0
 6152 004a 638D     		ldrh	r3, [r4, #42]
 6153 004c 2385     		strh	r3, [r4, #40]
2679:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
 6154              		.loc 1 2679 0
 6155 004e E36A     		ldr	r3, [r4, #44]
 6156              	.LVL518:
 6157              	.L394:
2684:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->PreviousState == I2C_STATE_MASTER_BUSY_RX)
 6158              		.loc 1 2684 0
 6159 0050 226B     		ldr	r2, [r4, #48]
 6160              	.LVL519:
 6161 0052 122A     		cmp	r2, #18
 6162 0054 02D0     		beq	.L398
ARM GAS  /tmp/cchP46LN.s 			page 210


2650:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_READ;
 6163              		.loc 1 2650 0
 6164 0056 9020     		mov	r0, #144
 6165 0058 8001     		lsl	r0, r0, #6
 6166 005a 00E0     		b	.L395
 6167              	.L398:
2686:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
 6168              		.loc 1 2686 0
 6169 005c 0020     		mov	r0, #0
 6170              	.L395:
 6171              	.LVL520:
2690:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_TransferConfig(hi2c,DevAddress, hi2c->XferSize, xfermode, xferrequest);
 6172              		.loc 1 2690 0
 6173 005e 228D     		ldrh	r2, [r4, #40]
 6174 0060 D2B2     		uxtb	r2, r2
 6175 0062 0090     		str	r0, [sp]
 6176              	.LVL521:
 6177 0064 201C     		mov	r0, r4
 6178              	.LVL522:
 6179 0066 FFF7FEFF 		bl	I2C_TransferConfig
 6180              	.LVL523:
2693:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 6181              		.loc 1 2693 0
 6182 006a 0022     		mov	r2, #0
 6183 006c 4023     		mov	r3, #64
 6184 006e E254     		strb	r2, [r4, r3]
2698:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT);
 6185              		.loc 1 2698 0
 6186 0070 201C     		mov	r0, r4
 6187 0072 0221     		mov	r1, #2
 6188 0074 FFF7FEFF 		bl	I2C_Enable_IRQ
 6189              	.LVL524:
2700:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
 6190              		.loc 1 2700 0
 6191 0078 0020     		mov	r0, #0
 6192 007a 02E0     		b	.L392
 6193              	.LVL525:
 6194              	.L396:
2704:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
 6195              		.loc 1 2704 0
 6196 007c 0220     		mov	r0, #2
 6197 007e 00E0     		b	.L392
 6198              	.L397:
2658:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 6199              		.loc 1 2658 0
 6200 0080 0220     		mov	r0, #2
 6201              	.LVL526:
 6202              	.L392:
2706:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 6203              		.loc 1 2706 0
 6204 0082 03B0     		add	sp, sp, #12
 6205              		@ sp needed
 6206              	.LVL527:
 6207 0084 30BD     		pop	{r4, r5, pc}
 6208              	.L400:
 6209 0086 C046     		.align	2
 6210              	.L399:
ARM GAS  /tmp/cchP46LN.s 			page 211


 6211 0088 00000000 		.word	I2C_Master_ISR_IT
 6212              		.cfi_endproc
 6213              	.LFE60:
 6215              		.section	.text.HAL_I2C_Slave_Sequential_Transmit_IT,"ax",%progbits
 6216              		.align	2
 6217              		.global	HAL_I2C_Slave_Sequential_Transmit_IT
 6218              		.code	16
 6219              		.thumb_func
 6221              	HAL_I2C_Slave_Sequential_Transmit_IT:
 6222              	.LFB61:
2719:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 6223              		.loc 1 2719 0
 6224              		.cfi_startproc
 6225              	.LVL528:
 6226 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 6227              	.LCFI66:
 6228              		.cfi_def_cfa_offset 20
 6229              		.cfi_offset 4, -20
 6230              		.cfi_offset 5, -16
 6231              		.cfi_offset 6, -12
 6232              		.cfi_offset 7, -8
 6233              		.cfi_offset 14, -4
 6234 0002 4746     		mov	r7, r8
 6235 0004 80B4     		push	{r7}
 6236              	.LCFI67:
 6237              		.cfi_def_cfa_offset 24
 6238              		.cfi_offset 8, -24
 6239 0006 041C     		mov	r4, r0
 6240 0008 0E1C     		mov	r6, r1
 6241 000a 171C     		mov	r7, r2
 6242 000c 9846     		mov	r8, r3
2723:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if((hi2c->State & HAL_I2C_STATE_LISTEN) == HAL_I2C_STATE_LISTEN)
 6243              		.loc 1 2723 0
 6244 000e 4120     		mov	r0, #65
 6245              	.LVL529:
 6246 0010 255C     		ldrb	r5, [r4, r0]
 6247 0012 2820     		mov	r0, #40
 6248 0014 2840     		and	r0, r5
 6249 0016 2828     		cmp	r0, #40
 6250 0018 3AD1     		bne	.L405
2725:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 6251              		.loc 1 2725 0
 6252 001a 0029     		cmp	r1, #0
 6253 001c 3AD0     		beq	.L406
2725:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 6254              		.loc 1 2725 0 is_stmt 0 discriminator 1
 6255 001e 002A     		cmp	r2, #0
 6256 0020 3AD0     		beq	.L407
2731:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_TX_IT);
 6257              		.loc 1 2731 0 is_stmt 1
 6258 0022 201C     		mov	r0, r4
 6259 0024 0521     		mov	r1, #5
 6260              	.LVL530:
 6261 0026 FFF7FEFF 		bl	I2C_Disable_IRQ
 6262              	.LVL531:
2734:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 6263              		.loc 1 2734 0
ARM GAS  /tmp/cchP46LN.s 			page 212


 6264 002a 4023     		mov	r3, #64
 6265 002c E35C     		ldrb	r3, [r4, r3]
 6266 002e 012B     		cmp	r3, #1
 6267 0030 34D0     		beq	.L408
2734:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 6268              		.loc 1 2734 0 is_stmt 0 discriminator 2
 6269 0032 0122     		mov	r2, #1
 6270 0034 4023     		mov	r3, #64
 6271 0036 E254     		strb	r2, [r4, r3]
2738:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
 6272              		.loc 1 2738 0 is_stmt 1 discriminator 2
 6273 0038 4123     		mov	r3, #65
 6274 003a E35C     		ldrb	r3, [r4, r3]
 6275 003c 2A2B     		cmp	r3, #42
 6276 003e 03D1     		bne	.L403
2741:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
 6277              		.loc 1 2741 0
 6278 0040 201C     		mov	r0, r4
 6279 0042 0221     		mov	r1, #2
 6280 0044 FFF7FEFF 		bl	I2C_Disable_IRQ
 6281              	.LVL532:
 6282              	.L403:
2744:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX_LISTEN;
 6283              		.loc 1 2744 0
 6284 0048 2922     		mov	r2, #41
 6285 004a 4123     		mov	r3, #65
 6286 004c E254     		strb	r2, [r4, r3]
2745:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 6287              		.loc 1 2745 0
 6288 004e 2022     		mov	r2, #32
 6289 0050 4223     		mov	r3, #66
 6290 0052 E254     		strb	r2, [r4, r3]
2746:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 6291              		.loc 1 2746 0
 6292 0054 0023     		mov	r3, #0
 6293 0056 6364     		str	r3, [r4, #68]
2749:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
 6294              		.loc 1 2749 0
 6295 0058 2368     		ldr	r3, [r4]
 6296 005a 5968     		ldr	r1, [r3, #4]
 6297 005c 114A     		ldr	r2, .L409
 6298 005e 0A40     		and	r2, r1
 6299 0060 5A60     		str	r2, [r3, #4]
2752:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 6300              		.loc 1 2752 0
 6301 0062 6662     		str	r6, [r4, #36]
2753:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 6302              		.loc 1 2753 0
 6303 0064 6785     		strh	r7, [r4, #42]
2754:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 6304              		.loc 1 2754 0
 6305 0066 638D     		ldrh	r3, [r4, #42]
 6306 0068 2385     		strh	r3, [r4, #40]
2755:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 6307              		.loc 1 2755 0
 6308 006a 4146     		mov	r1, r8
 6309 006c E162     		str	r1, [r4, #44]
ARM GAS  /tmp/cchP46LN.s 			page 213


2756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 6310              		.loc 1 2756 0
 6311 006e 0E4B     		ldr	r3, .L409+4
 6312 0070 6363     		str	r3, [r4, #52]
2758:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_GET_DIR(hi2c) == I2C_DIRECTION_RECEIVE)
 6313              		.loc 1 2758 0
 6314 0072 2368     		ldr	r3, [r4]
 6315 0074 9A69     		ldr	r2, [r3, #24]
 6316 0076 D103     		lsl	r1, r2, #15
 6317 0078 01D5     		bpl	.L404
2762:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c,I2C_FLAG_ADDR);
 6318              		.loc 1 2762 0
 6319 007a 0822     		mov	r2, #8
 6320 007c DA61     		str	r2, [r3, #28]
 6321              	.L404:
2766:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 6322              		.loc 1 2766 0
 6323 007e 0022     		mov	r2, #0
 6324 0080 4023     		mov	r3, #64
 6325 0082 E254     		strb	r2, [r4, r3]
2772:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT | I2C_XFER_LISTEN_IT);
 6326              		.loc 1 2772 0
 6327 0084 201C     		mov	r0, r4
 6328 0086 0521     		mov	r1, #5
 6329 0088 FFF7FEFF 		bl	I2C_Enable_IRQ
 6330              	.LVL533:
2774:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
 6331              		.loc 1 2774 0
 6332 008c 0020     		mov	r0, #0
 6333 008e 06E0     		b	.L402
 6334              	.LVL534:
 6335              	.L405:
2778:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_ERROR;
 6336              		.loc 1 2778 0
 6337 0090 0120     		mov	r0, #1
 6338 0092 04E0     		b	.L402
 6339              	.L406:
2727:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return  HAL_ERROR;
 6340              		.loc 1 2727 0
 6341 0094 0120     		mov	r0, #1
 6342 0096 02E0     		b	.L402
 6343              	.L407:
 6344 0098 0120     		mov	r0, #1
 6345 009a 00E0     		b	.L402
 6346              	.LVL535:
 6347              	.L408:
2734:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 6348              		.loc 1 2734 0
 6349 009c 0220     		mov	r0, #2
 6350              	.L402:
2780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 6351              		.loc 1 2780 0
 6352              		@ sp needed
 6353              	.LVL536:
 6354              	.LVL537:
 6355              	.LVL538:
 6356 009e 04BC     		pop	{r2}
ARM GAS  /tmp/cchP46LN.s 			page 214


 6357 00a0 9046     		mov	r8, r2
 6358 00a2 F0BD     		pop	{r4, r5, r6, r7, pc}
 6359              	.L410:
 6360              		.align	2
 6361              	.L409:
 6362 00a4 FF7FFFFF 		.word	-32769
 6363 00a8 00000000 		.word	I2C_Slave_ISR_IT
 6364              		.cfi_endproc
 6365              	.LFE61:
 6367              		.section	.text.HAL_I2C_Slave_Sequential_Receive_IT,"ax",%progbits
 6368              		.align	2
 6369              		.global	HAL_I2C_Slave_Sequential_Receive_IT
 6370              		.code	16
 6371              		.thumb_func
 6373              	HAL_I2C_Slave_Sequential_Receive_IT:
 6374              	.LFB62:
2793:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 6375              		.loc 1 2793 0
 6376              		.cfi_startproc
 6377              	.LVL539:
 6378 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 6379              	.LCFI68:
 6380              		.cfi_def_cfa_offset 20
 6381              		.cfi_offset 4, -20
 6382              		.cfi_offset 5, -16
 6383              		.cfi_offset 6, -12
 6384              		.cfi_offset 7, -8
 6385              		.cfi_offset 14, -4
 6386 0002 4746     		mov	r7, r8
 6387 0004 80B4     		push	{r7}
 6388              	.LCFI69:
 6389              		.cfi_def_cfa_offset 24
 6390              		.cfi_offset 8, -24
 6391 0006 041C     		mov	r4, r0
 6392 0008 0E1C     		mov	r6, r1
 6393 000a 171C     		mov	r7, r2
 6394 000c 9846     		mov	r8, r3
2797:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if((hi2c->State & HAL_I2C_STATE_LISTEN) == HAL_I2C_STATE_LISTEN)
 6395              		.loc 1 2797 0
 6396 000e 4120     		mov	r0, #65
 6397              	.LVL540:
 6398 0010 255C     		ldrb	r5, [r4, r0]
 6399 0012 2820     		mov	r0, #40
 6400 0014 2840     		and	r0, r5
 6401 0016 2828     		cmp	r0, #40
 6402 0018 3AD1     		bne	.L415
2799:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 6403              		.loc 1 2799 0
 6404 001a 0029     		cmp	r1, #0
 6405 001c 3AD0     		beq	.L416
2799:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 6406              		.loc 1 2799 0 is_stmt 0 discriminator 1
 6407 001e 002A     		cmp	r2, #0
 6408 0020 3AD0     		beq	.L417
2805:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT);
 6409              		.loc 1 2805 0 is_stmt 1
 6410 0022 201C     		mov	r0, r4
ARM GAS  /tmp/cchP46LN.s 			page 215


 6411 0024 0621     		mov	r1, #6
 6412              	.LVL541:
 6413 0026 FFF7FEFF 		bl	I2C_Disable_IRQ
 6414              	.LVL542:
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 6415              		.loc 1 2808 0
 6416 002a 4023     		mov	r3, #64
 6417 002c E35C     		ldrb	r3, [r4, r3]
 6418 002e 012B     		cmp	r3, #1
 6419 0030 34D0     		beq	.L418
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 6420              		.loc 1 2808 0 is_stmt 0 discriminator 2
 6421 0032 0122     		mov	r2, #1
 6422 0034 4023     		mov	r3, #64
 6423 0036 E254     		strb	r2, [r4, r3]
2812:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
 6424              		.loc 1 2812 0 is_stmt 1 discriminator 2
 6425 0038 4123     		mov	r3, #65
 6426 003a E35C     		ldrb	r3, [r4, r3]
 6427 003c 292B     		cmp	r3, #41
 6428 003e 03D1     		bne	.L413
2815:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
 6429              		.loc 1 2815 0
 6430 0040 201C     		mov	r0, r4
 6431 0042 0121     		mov	r1, #1
 6432 0044 FFF7FEFF 		bl	I2C_Disable_IRQ
 6433              	.LVL543:
 6434              	.L413:
2818:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX_LISTEN;
 6435              		.loc 1 2818 0
 6436 0048 2A22     		mov	r2, #42
 6437 004a 4123     		mov	r3, #65
 6438 004c E254     		strb	r2, [r4, r3]
2819:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 6439              		.loc 1 2819 0
 6440 004e 2022     		mov	r2, #32
 6441 0050 4223     		mov	r3, #66
 6442 0052 E254     		strb	r2, [r4, r3]
2820:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 6443              		.loc 1 2820 0
 6444 0054 0023     		mov	r3, #0
 6445 0056 6364     		str	r3, [r4, #68]
2823:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
 6446              		.loc 1 2823 0
 6447 0058 2368     		ldr	r3, [r4]
 6448 005a 5968     		ldr	r1, [r3, #4]
 6449 005c 114A     		ldr	r2, .L419
 6450 005e 0A40     		and	r2, r1
 6451 0060 5A60     		str	r2, [r3, #4]
2826:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 6452              		.loc 1 2826 0
 6453 0062 6662     		str	r6, [r4, #36]
2827:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 6454              		.loc 1 2827 0
 6455 0064 6785     		strh	r7, [r4, #42]
2828:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 6456              		.loc 1 2828 0
ARM GAS  /tmp/cchP46LN.s 			page 216


 6457 0066 638D     		ldrh	r3, [r4, #42]
 6458 0068 2385     		strh	r3, [r4, #40]
2829:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 6459              		.loc 1 2829 0
 6460 006a 4146     		mov	r1, r8
 6461 006c E162     		str	r1, [r4, #44]
2830:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 6462              		.loc 1 2830 0
 6463 006e 0E4B     		ldr	r3, .L419+4
 6464 0070 6363     		str	r3, [r4, #52]
2832:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_GET_DIR(hi2c) == I2C_DIRECTION_TRANSMIT)
 6465              		.loc 1 2832 0
 6466 0072 2368     		ldr	r3, [r4]
 6467 0074 9A69     		ldr	r2, [r3, #24]
 6468 0076 D103     		lsl	r1, r2, #15
 6469 0078 01D4     		bmi	.L414
2836:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c,I2C_FLAG_ADDR);
 6470              		.loc 1 2836 0
 6471 007a 0822     		mov	r2, #8
 6472 007c DA61     		str	r2, [r3, #28]
 6473              	.L414:
2840:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 6474              		.loc 1 2840 0
 6475 007e 0022     		mov	r2, #0
 6476 0080 4023     		mov	r3, #64
 6477 0082 E254     		strb	r2, [r4, r3]
2846:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_LISTEN_IT);
 6478              		.loc 1 2846 0
 6479 0084 201C     		mov	r0, r4
 6480 0086 0621     		mov	r1, #6
 6481 0088 FFF7FEFF 		bl	I2C_Enable_IRQ
 6482              	.LVL544:
2848:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
 6483              		.loc 1 2848 0
 6484 008c 0020     		mov	r0, #0
 6485 008e 06E0     		b	.L412
 6486              	.LVL545:
 6487              	.L415:
2852:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_ERROR;
 6488              		.loc 1 2852 0
 6489 0090 0120     		mov	r0, #1
 6490 0092 04E0     		b	.L412
 6491              	.L416:
2801:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       return  HAL_ERROR;
 6492              		.loc 1 2801 0
 6493 0094 0120     		mov	r0, #1
 6494 0096 02E0     		b	.L412
 6495              	.L417:
 6496 0098 0120     		mov	r0, #1
 6497 009a 00E0     		b	.L412
 6498              	.LVL546:
 6499              	.L418:
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 6500              		.loc 1 2808 0
 6501 009c 0220     		mov	r0, #2
 6502              	.L412:
2854:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
ARM GAS  /tmp/cchP46LN.s 			page 217


 6503              		.loc 1 2854 0
 6504              		@ sp needed
 6505              	.LVL547:
 6506              	.LVL548:
 6507              	.LVL549:
 6508 009e 04BC     		pop	{r2}
 6509 00a0 9046     		mov	r8, r2
 6510 00a2 F0BD     		pop	{r4, r5, r6, r7, pc}
 6511              	.L420:
 6512              		.align	2
 6513              	.L419:
 6514 00a4 FF7FFFFF 		.word	-32769
 6515 00a8 00000000 		.word	I2C_Slave_ISR_IT
 6516              		.cfi_endproc
 6517              	.LFE62:
 6519              		.section	.text.HAL_I2C_EnableListen_IT,"ax",%progbits
 6520              		.align	2
 6521              		.global	HAL_I2C_EnableListen_IT
 6522              		.code	16
 6523              		.thumb_func
 6525              	HAL_I2C_EnableListen_IT:
 6526              	.LFB63:
2863:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 6527              		.loc 1 2863 0
 6528              		.cfi_startproc
 6529              	.LVL550:
 6530 0000 08B5     		push	{r3, lr}
 6531              	.LCFI70:
 6532              		.cfi_def_cfa_offset 8
 6533              		.cfi_offset 3, -8
 6534              		.cfi_offset 14, -4
2864:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 6535              		.loc 1 2864 0
 6536 0002 4123     		mov	r3, #65
 6537 0004 C35C     		ldrb	r3, [r0, r3]
 6538 0006 202B     		cmp	r3, #32
 6539 0008 09D1     		bne	.L423
2866:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_LISTEN;
 6540              		.loc 1 2866 0
 6541 000a 2822     		mov	r2, #40
 6542 000c 4123     		mov	r3, #65
 6543 000e C254     		strb	r2, [r0, r3]
2867:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR = I2C_Slave_ISR_IT;
 6544              		.loc 1 2867 0
 6545 0010 044B     		ldr	r3, .L424
 6546 0012 4363     		str	r3, [r0, #52]
2870:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
 6547              		.loc 1 2870 0
 6548 0014 0421     		mov	r1, #4
 6549 0016 FFF7FEFF 		bl	I2C_Enable_IRQ
 6550              	.LVL551:
2872:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
 6551              		.loc 1 2872 0
 6552 001a 0020     		mov	r0, #0
 6553 001c 00E0     		b	.L422
 6554              	.LVL552:
 6555              	.L423:
ARM GAS  /tmp/cchP46LN.s 			page 218


2876:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
 6556              		.loc 1 2876 0
 6557 001e 0220     		mov	r0, #2
 6558              	.LVL553:
 6559              	.L422:
2878:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 6560              		.loc 1 2878 0
 6561              		@ sp needed
 6562 0020 08BD     		pop	{r3, pc}
 6563              	.L425:
 6564 0022 C046     		.align	2
 6565              	.L424:
 6566 0024 00000000 		.word	I2C_Slave_ISR_IT
 6567              		.cfi_endproc
 6568              	.LFE63:
 6570              		.section	.text.HAL_I2C_DisableListen_IT,"ax",%progbits
 6571              		.align	2
 6572              		.global	HAL_I2C_DisableListen_IT
 6573              		.code	16
 6574              		.thumb_func
 6576              	HAL_I2C_DisableListen_IT:
 6577              	.LFB64:
2887:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 6578              		.loc 1 2887 0
 6579              		.cfi_startproc
 6580              	.LVL554:
 6581 0000 10B5     		push	{r4, lr}
 6582              	.LCFI71:
 6583              		.cfi_def_cfa_offset 8
 6584              		.cfi_offset 4, -8
 6585              		.cfi_offset 14, -4
2892:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_LISTEN)
 6586              		.loc 1 2892 0
 6587 0002 4123     		mov	r3, #65
 6588 0004 C35C     		ldrb	r3, [r0, r3]
 6589 0006 282B     		cmp	r3, #40
 6590 0008 11D1     		bne	.L428
2894:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     tmp = (uint32_t)(hi2c->State) & I2C_STATE_MSK;
 6591              		.loc 1 2894 0
 6592 000a 4123     		mov	r3, #65
 6593 000c C15C     		ldrb	r1, [r0, r3]
 6594 000e 0322     		mov	r2, #3
 6595 0010 1140     		and	r1, r2
 6596              	.LVL555:
2895:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->PreviousState = tmp | (uint32_t)(hi2c->Mode);
 6597              		.loc 1 2895 0
 6598 0012 4222     		mov	r2, #66
 6599 0014 845C     		ldrb	r4, [r0, r2]
 6600 0016 2143     		orr	r1, r4
 6601              	.LVL556:
 6602 0018 0163     		str	r1, [r0, #48]
2896:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 6603              		.loc 1 2896 0
 6604 001a 2021     		mov	r1, #32
 6605 001c C154     		strb	r1, [r0, r3]
2897:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
 6606              		.loc 1 2897 0
ARM GAS  /tmp/cchP46LN.s 			page 219


 6607 001e 0023     		mov	r3, #0
 6608 0020 8354     		strb	r3, [r0, r2]
2898:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR = NULL;
 6609              		.loc 1 2898 0
 6610 0022 4363     		str	r3, [r0, #52]
2901:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
 6611              		.loc 1 2901 0
 6612 0024 0421     		mov	r1, #4
 6613 0026 FFF7FEFF 		bl	I2C_Disable_IRQ
 6614              	.LVL557:
2903:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
 6615              		.loc 1 2903 0
 6616 002a 0020     		mov	r0, #0
 6617 002c 00E0     		b	.L427
 6618              	.LVL558:
 6619              	.L428:
2907:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_BUSY;
 6620              		.loc 1 2907 0
 6621 002e 0220     		mov	r0, #2
 6622              	.LVL559:
 6623              	.L427:
2909:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 6624              		.loc 1 2909 0
 6625              		@ sp needed
 6626 0030 10BD     		pop	{r4, pc}
 6627              		.cfi_endproc
 6628              	.LFE64:
 6630 0032 C046     		.section	.text.HAL_I2C_Master_Abort_IT,"ax",%progbits
 6631              		.align	2
 6632              		.global	HAL_I2C_Master_Abort_IT
 6633              		.code	16
 6634              		.thumb_func
 6636              	HAL_I2C_Master_Abort_IT:
 6637              	.LFB65:
2920:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 6638              		.loc 1 2920 0
 6639              		.cfi_startproc
 6640              	.LVL560:
 6641 0000 70B5     		push	{r4, r5, r6, lr}
 6642              	.LCFI72:
 6643              		.cfi_def_cfa_offset 16
 6644              		.cfi_offset 4, -16
 6645              		.cfi_offset 5, -12
 6646              		.cfi_offset 6, -8
 6647              		.cfi_offset 14, -4
 6648 0002 82B0     		sub	sp, sp, #8
 6649              	.LCFI73:
 6650              		.cfi_def_cfa_offset 24
 6651 0004 041C     		mov	r4, r0
 6652 0006 0D1C     		mov	r5, r1
2921:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->Mode == HAL_I2C_MODE_MASTER)
 6653              		.loc 1 2921 0
 6654 0008 4223     		mov	r3, #66
 6655 000a C35C     		ldrb	r3, [r0, r3]
 6656 000c 102B     		cmp	r3, #16
 6657 000e 22D1     		bne	.L431
2924:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
ARM GAS  /tmp/cchP46LN.s 			page 220


 6658              		.loc 1 2924 0
 6659 0010 4023     		mov	r3, #64
 6660 0012 C35C     		ldrb	r3, [r0, r3]
 6661 0014 012B     		cmp	r3, #1
 6662 0016 20D0     		beq	.L432
2924:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 6663              		.loc 1 2924 0 is_stmt 0 discriminator 2
 6664 0018 4026     		mov	r6, #64
 6665 001a 0123     		mov	r3, #1
 6666 001c 8355     		strb	r3, [r0, r6]
2927:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
 6667              		.loc 1 2927 0 is_stmt 1 discriminator 2
 6668 001e 0221     		mov	r1, #2
 6669              	.LVL561:
 6670 0020 FFF7FEFF 		bl	I2C_Disable_IRQ
 6671              	.LVL562:
2928:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
 6672              		.loc 1 2928 0 discriminator 2
 6673 0024 201C     		mov	r0, r4
 6674 0026 0121     		mov	r1, #1
 6675 0028 FFF7FEFF 		bl	I2C_Disable_IRQ
 6676              	.LVL563:
2931:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_ABORT;
 6677              		.loc 1 2931 0 discriminator 2
 6678 002c 6022     		mov	r2, #96
 6679 002e 4123     		mov	r3, #65
 6680 0030 E254     		strb	r2, [r4, r3]
2935:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, 1, I2C_AUTOEND_MODE, I2C_GENERATE_STOP);
 6681              		.loc 1 2935 0 discriminator 2
 6682 0032 8023     		mov	r3, #128
 6683 0034 DB01     		lsl	r3, r3, #7
 6684 0036 0093     		str	r3, [sp]
 6685 0038 201C     		mov	r0, r4
 6686 003a 291C     		mov	r1, r5
 6687 003c 0122     		mov	r2, #1
 6688 003e 8023     		mov	r3, #128
 6689 0040 9B04     		lsl	r3, r3, #18
 6690 0042 FFF7FEFF 		bl	I2C_TransferConfig
 6691              	.LVL564:
2938:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 6692              		.loc 1 2938 0 discriminator 2
 6693 0046 0023     		mov	r3, #0
 6694 0048 A355     		strb	r3, [r4, r6]
2943:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
 6695              		.loc 1 2943 0 discriminator 2
 6696 004a 201C     		mov	r0, r4
 6697 004c 1221     		mov	r1, #18
 6698 004e FFF7FEFF 		bl	I2C_Enable_IRQ
 6699              	.LVL565:
2945:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_OK;
 6700              		.loc 1 2945 0 discriminator 2
 6701 0052 0020     		mov	r0, #0
 6702 0054 02E0     		b	.L430
 6703              	.LVL566:
 6704              	.L431:
2951:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     return HAL_ERROR;
 6705              		.loc 1 2951 0
ARM GAS  /tmp/cchP46LN.s 			page 221


 6706 0056 0120     		mov	r0, #1
 6707              	.LVL567:
 6708 0058 00E0     		b	.L430
 6709              	.LVL568:
 6710              	.L432:
2924:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 6711              		.loc 1 2924 0
 6712 005a 0220     		mov	r0, #2
 6713              	.LVL569:
 6714              	.L430:
2953:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 6715              		.loc 1 2953 0
 6716 005c 02B0     		add	sp, sp, #8
 6717              		@ sp needed
 6718              	.LVL570:
 6719 005e 70BD     		pop	{r4, r5, r6, pc}
 6720              		.cfi_endproc
 6721              	.LFE65:
 6723              		.section	.text.HAL_I2C_EV_IRQHandler,"ax",%progbits
 6724              		.align	2
 6725              		.global	HAL_I2C_EV_IRQHandler
 6726              		.code	16
 6727              		.thumb_func
 6729              	HAL_I2C_EV_IRQHandler:
 6730              	.LFB66:
2970:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 6731              		.loc 1 2970 0
 6732              		.cfi_startproc
 6733              	.LVL571:
 6734 0000 08B5     		push	{r3, lr}
 6735              	.LCFI74:
 6736              		.cfi_def_cfa_offset 8
 6737              		.cfi_offset 3, -8
 6738              		.cfi_offset 14, -4
2972:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint32_t itflags   = READ_REG(hi2c->Instance->ISR);
 6739              		.loc 1 2972 0
 6740 0002 0368     		ldr	r3, [r0]
 6741 0004 9969     		ldr	r1, [r3, #24]
 6742              	.LVL572:
2973:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
 6743              		.loc 1 2973 0
 6744 0006 1A68     		ldr	r2, [r3]
 6745              	.LVL573:
2976:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->XferISR != NULL)
 6746              		.loc 1 2976 0
 6747 0008 436B     		ldr	r3, [r0, #52]
 6748 000a 002B     		cmp	r3, #0
 6749 000c 00D0     		beq	.L433
2978:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR(hi2c, itflags, itsources);
 6750              		.loc 1 2978 0
 6751 000e 9847     		blx	r3
 6752              	.LVL574:
 6753              	.L433:
2980:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 6754              		.loc 1 2980 0
 6755              		@ sp needed
 6756 0010 08BD     		pop	{r3, pc}
ARM GAS  /tmp/cchP46LN.s 			page 222


 6757              		.cfi_endproc
 6758              	.LFE66:
 6760 0012 C046     		.section	.text.HAL_I2C_MasterTxCpltCallback,"ax",%progbits
 6761              		.align	2
 6762              		.weak	HAL_I2C_MasterTxCpltCallback
 6763              		.code	16
 6764              		.thumb_func
 6766              	HAL_I2C_MasterTxCpltCallback:
 6767              	.LFB68:
3034:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 6768              		.loc 1 3034 0
 6769              		.cfi_startproc
 6770              	.LVL575:
3041:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 6771              		.loc 1 3041 0
 6772              		@ sp needed
 6773 0000 7047     		bx	lr
 6774              		.cfi_endproc
 6775              	.LFE68:
 6777 0002 C046     		.section	.text.HAL_I2C_MasterRxCpltCallback,"ax",%progbits
 6778              		.align	2
 6779              		.weak	HAL_I2C_MasterRxCpltCallback
 6780              		.code	16
 6781              		.thumb_func
 6783              	HAL_I2C_MasterRxCpltCallback:
 6784              	.LFB69:
3050:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 6785              		.loc 1 3050 0
 6786              		.cfi_startproc
 6787              	.LVL576:
3057:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 6788              		.loc 1 3057 0
 6789              		@ sp needed
 6790 0000 7047     		bx	lr
 6791              		.cfi_endproc
 6792              	.LFE69:
 6794 0002 C046     		.section	.text.I2C_ITMasterSequentialCplt,"ax",%progbits
 6795              		.align	2
 6796              		.code	16
 6797              		.thumb_func
 6799              	I2C_ITMasterSequentialCplt:
 6800              	.LFB88:
3853:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 6801              		.loc 1 3853 0
 6802              		.cfi_startproc
 6803              	.LVL577:
 6804 0000 38B5     		push	{r3, r4, r5, lr}
 6805              	.LCFI75:
 6806              		.cfi_def_cfa_offset 16
 6807              		.cfi_offset 3, -16
 6808              		.cfi_offset 4, -12
 6809              		.cfi_offset 5, -8
 6810              		.cfi_offset 14, -4
 6811 0002 041C     		mov	r4, r0
3855:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 6812              		.loc 1 3855 0
 6813 0004 0022     		mov	r2, #0
ARM GAS  /tmp/cchP46LN.s 			page 223


 6814 0006 4223     		mov	r3, #66
 6815 0008 C254     		strb	r2, [r0, r3]
3859:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 6816              		.loc 1 3859 0
 6817 000a 4123     		mov	r3, #65
 6818 000c C35C     		ldrb	r3, [r0, r3]
 6819 000e 212B     		cmp	r3, #33
 6820 0010 0FD1     		bne	.L438
3861:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_READY;
 6821              		.loc 1 3861 0
 6822 0012 2022     		mov	r2, #32
 6823 0014 4123     		mov	r3, #65
 6824 0016 C254     		strb	r2, [r0, r3]
3862:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 6825              		.loc 1 3862 0
 6826 0018 1123     		mov	r3, #17
 6827 001a 0363     		str	r3, [r0, #48]
3863:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
 6828              		.loc 1 3863 0
 6829 001c 0025     		mov	r5, #0
 6830 001e 4563     		str	r5, [r0, #52]
3866:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
 6831              		.loc 1 3866 0
 6832 0020 0121     		mov	r1, #1
 6833 0022 FFF7FEFF 		bl	I2C_Disable_IRQ
 6834              	.LVL578:
3869:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 6835              		.loc 1 3869 0
 6836 0026 4023     		mov	r3, #64
 6837 0028 E554     		strb	r5, [r4, r3]
3872:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     HAL_I2C_MasterTxCpltCallback(hi2c);
 6838              		.loc 1 3872 0
 6839 002a 201C     		mov	r0, r4
 6840 002c FFF7FEFF 		bl	HAL_I2C_MasterTxCpltCallback
 6841              	.LVL579:
 6842 0030 0EE0     		b	.L437
 6843              	.LVL580:
 6844              	.L438:
3877:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_READY;
 6845              		.loc 1 3877 0
 6846 0032 2022     		mov	r2, #32
 6847 0034 4123     		mov	r3, #65
 6848 0036 C254     		strb	r2, [r0, r3]
3878:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 6849              		.loc 1 3878 0
 6850 0038 1223     		mov	r3, #18
 6851 003a 0363     		str	r3, [r0, #48]
3879:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
 6852              		.loc 1 3879 0
 6853 003c 0025     		mov	r5, #0
 6854 003e 4563     		str	r5, [r0, #52]
3882:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
 6855              		.loc 1 3882 0
 6856 0040 0221     		mov	r1, #2
 6857 0042 FFF7FEFF 		bl	I2C_Disable_IRQ
 6858              	.LVL581:
3885:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
ARM GAS  /tmp/cchP46LN.s 			page 224


 6859              		.loc 1 3885 0
 6860 0046 4023     		mov	r3, #64
 6861 0048 E554     		strb	r5, [r4, r3]
3888:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     HAL_I2C_MasterRxCpltCallback(hi2c);
 6862              		.loc 1 3888 0
 6863 004a 201C     		mov	r0, r4
 6864 004c FFF7FEFF 		bl	HAL_I2C_MasterRxCpltCallback
 6865              	.LVL582:
 6866              	.L437:
3890:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 6867              		.loc 1 3890 0
 6868              		@ sp needed
 6869              	.LVL583:
 6870 0050 38BD     		pop	{r3, r4, r5, pc}
 6871              		.cfi_endproc
 6872              	.LFE88:
 6874 0052 C046     		.section	.text.HAL_I2C_SlaveTxCpltCallback,"ax",%progbits
 6875              		.align	2
 6876              		.weak	HAL_I2C_SlaveTxCpltCallback
 6877              		.code	16
 6878              		.thumb_func
 6880              	HAL_I2C_SlaveTxCpltCallback:
 6881              	.LFB70:
3065:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 6882              		.loc 1 3065 0
 6883              		.cfi_startproc
 6884              	.LVL584:
3072:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 6885              		.loc 1 3072 0
 6886              		@ sp needed
 6887 0000 7047     		bx	lr
 6888              		.cfi_endproc
 6889              	.LFE70:
 6891 0002 C046     		.section	.text.HAL_I2C_SlaveRxCpltCallback,"ax",%progbits
 6892              		.align	2
 6893              		.weak	HAL_I2C_SlaveRxCpltCallback
 6894              		.code	16
 6895              		.thumb_func
 6897              	HAL_I2C_SlaveRxCpltCallback:
 6898              	.LFB71:
3081:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 6899              		.loc 1 3081 0
 6900              		.cfi_startproc
 6901              	.LVL585:
3088:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 6902              		.loc 1 3088 0
 6903              		@ sp needed
 6904 0000 7047     		bx	lr
 6905              		.cfi_endproc
 6906              	.LFE71:
 6908 0002 C046     		.section	.text.I2C_ITSlaveSequentialCplt,"ax",%progbits
 6909              		.align	2
 6910              		.code	16
 6911              		.thumb_func
 6913              	I2C_ITSlaveSequentialCplt:
 6914              	.LFB89:
3898:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
ARM GAS  /tmp/cchP46LN.s 			page 225


 6915              		.loc 1 3898 0
 6916              		.cfi_startproc
 6917              	.LVL586:
 6918 0000 10B5     		push	{r4, lr}
 6919              	.LCFI76:
 6920              		.cfi_def_cfa_offset 8
 6921              		.cfi_offset 4, -8
 6922              		.cfi_offset 14, -4
 6923 0002 041C     		mov	r4, r0
3900:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 6924              		.loc 1 3900 0
 6925 0004 0022     		mov	r2, #0
 6926 0006 4223     		mov	r3, #66
 6927 0008 C254     		strb	r2, [r0, r3]
3902:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
 6928              		.loc 1 3902 0
 6929 000a 4123     		mov	r3, #65
 6930 000c C35C     		ldrb	r3, [r0, r3]
 6931 000e 292B     		cmp	r3, #41
 6932 0010 0ED1     		bne	.L443
3905:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
 6933              		.loc 1 3905 0
 6934 0012 2822     		mov	r2, #40
 6935 0014 4123     		mov	r3, #65
 6936 0016 C254     		strb	r2, [r0, r3]
3906:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 6937              		.loc 1 3906 0
 6938 0018 2123     		mov	r3, #33
 6939 001a 0363     		str	r3, [r0, #48]
3909:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
 6940              		.loc 1 3909 0
 6941 001c 0121     		mov	r1, #1
 6942 001e FFF7FEFF 		bl	I2C_Disable_IRQ
 6943              	.LVL587:
3912:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 6944              		.loc 1 3912 0
 6945 0022 0022     		mov	r2, #0
 6946 0024 4023     		mov	r3, #64
 6947 0026 E254     		strb	r2, [r4, r3]
3915:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     HAL_I2C_SlaveTxCpltCallback(hi2c);
 6948              		.loc 1 3915 0
 6949 0028 201C     		mov	r0, r4
 6950 002a FFF7FEFF 		bl	HAL_I2C_SlaveTxCpltCallback
 6951              	.LVL588:
 6952 002e 11E0     		b	.L442
 6953              	.LVL589:
 6954              	.L443:
3918:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
 6955              		.loc 1 3918 0
 6956 0030 4123     		mov	r3, #65
 6957 0032 C35C     		ldrb	r3, [r0, r3]
 6958 0034 2A2B     		cmp	r3, #42
 6959 0036 0DD1     		bne	.L442
3921:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
 6960              		.loc 1 3921 0
 6961 0038 2822     		mov	r2, #40
 6962 003a 4123     		mov	r3, #65
ARM GAS  /tmp/cchP46LN.s 			page 226


 6963 003c C254     		strb	r2, [r0, r3]
3922:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 6964              		.loc 1 3922 0
 6965 003e 2223     		mov	r3, #34
 6966 0040 0363     		str	r3, [r0, #48]
3925:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
 6967              		.loc 1 3925 0
 6968 0042 0221     		mov	r1, #2
 6969 0044 FFF7FEFF 		bl	I2C_Disable_IRQ
 6970              	.LVL590:
3928:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 6971              		.loc 1 3928 0
 6972 0048 0022     		mov	r2, #0
 6973 004a 4023     		mov	r3, #64
 6974 004c E254     		strb	r2, [r4, r3]
3931:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     HAL_I2C_SlaveRxCpltCallback(hi2c);
 6975              		.loc 1 3931 0
 6976 004e 201C     		mov	r0, r4
 6977 0050 FFF7FEFF 		bl	HAL_I2C_SlaveRxCpltCallback
 6978              	.LVL591:
 6979              	.L442:
3933:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 6980              		.loc 1 3933 0
 6981              		@ sp needed
 6982              	.LVL592:
 6983 0054 10BD     		pop	{r4, pc}
 6984              		.cfi_endproc
 6985              	.LFE89:
 6987 0056 C046     		.section	.text.HAL_I2C_AddrCallback,"ax",%progbits
 6988              		.align	2
 6989              		.weak	HAL_I2C_AddrCallback
 6990              		.code	16
 6991              		.thumb_func
 6993              	HAL_I2C_AddrCallback:
 6994              	.LFB72:
3099:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 6995              		.loc 1 3099 0
 6996              		.cfi_startproc
 6997              	.LVL593:
3108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 6998              		.loc 1 3108 0
 6999              		@ sp needed
 7000 0000 7047     		bx	lr
 7001              		.cfi_endproc
 7002              	.LFE72:
 7004 0002 C046     		.section	.text.I2C_ITAddrCplt,"ax",%progbits
 7005              		.align	2
 7006              		.code	16
 7007              		.thumb_func
 7009              	I2C_ITAddrCplt:
 7010              	.LFB87:
3770:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 7011              		.loc 1 3770 0
 7012              		.cfi_startproc
 7013              	.LVL594:
 7014 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 7015              	.LCFI77:
ARM GAS  /tmp/cchP46LN.s 			page 227


 7016              		.cfi_def_cfa_offset 20
 7017              		.cfi_offset 4, -20
 7018              		.cfi_offset 5, -16
 7019              		.cfi_offset 6, -12
 7020              		.cfi_offset 7, -8
 7021              		.cfi_offset 14, -4
 7022 0002 4746     		mov	r7, r8
 7023 0004 80B4     		push	{r7}
 7024              	.LCFI78:
 7025              		.cfi_def_cfa_offset 24
 7026              		.cfi_offset 8, -24
 7027 0006 041C     		mov	r4, r0
 7028              	.LVL595:
3780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if((hi2c->State & HAL_I2C_STATE_LISTEN) == HAL_I2C_STATE_LISTEN)
 7029              		.loc 1 3780 0
 7030 0008 4123     		mov	r3, #65
 7031 000a C25C     		ldrb	r2, [r0, r3]
 7032 000c 2823     		mov	r3, #40
 7033 000e 1340     		and	r3, r2
 7034 0010 282B     		cmp	r3, #40
 7035 0012 43D1     		bne	.L447
3782:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     transferdirection = I2C_GET_DIR(hi2c);
 7036              		.loc 1 3782 0
 7037 0014 0368     		ldr	r3, [r0]
 7038 0016 9F69     		ldr	r7, [r3, #24]
 7039 0018 FF03     		lsl	r7, r7, #15
 7040 001a FF0F     		lsr	r7, r7, #31
 7041              	.LVL596:
3783:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     slaveaddrcode     = I2C_GET_ADDR_MATCH(hi2c);
 7042              		.loc 1 3783 0
 7043 001c 9A69     		ldr	r2, [r3, #24]
 7044 001e FE20     		mov	r0, #254
 7045              	.LVL597:
 7046 0020 0004     		lsl	r0, r0, #16
 7047 0022 1040     		and	r0, r2
 7048 0024 000C     		lsr	r0, r0, #16
 7049 0026 81B2     		uxth	r1, r0
 7050              	.LVL598:
 7051 0028 8846     		mov	r8, r1
 7052              	.LVL599:
3784:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     ownadd1code       = I2C_GET_OWN_ADDRESS1(hi2c);
 7053              		.loc 1 3784 0
 7054 002a 9D68     		ldr	r5, [r3, #8]
 7055 002c AD05     		lsl	r5, r5, #22
 7056 002e AA0D     		lsr	r2, r5, #22
 7057              	.LVL600:
3785:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     ownadd2code       = I2C_GET_OWN_ADDRESS2(hi2c);
 7058              		.loc 1 3785 0
 7059 0030 DD68     		ldr	r5, [r3, #12]
 7060 0032 FE26     		mov	r6, #254
 7061 0034 3540     		and	r5, r6
 7062              	.LVL601:
3788:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 7063              		.loc 1 3788 0
 7064 0036 E168     		ldr	r1, [r4, #12]
 7065 0038 0229     		cmp	r1, #2
 7066 003a 22D1     		bne	.L448
ARM GAS  /tmp/cchP46LN.s 			page 228


3790:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if((slaveaddrcode & SlaveAddr_MSK) == ((ownadd1code >> SlaveAddr_SHIFT) & SlaveAddr_MSK))
 7067              		.loc 1 3790 0
 7068 003c D109     		lsr	r1, r2, #7
 7069 003e 4840     		eor	r0, r1
 7070              	.LVL602:
 7071 0040 0621     		mov	r1, #6
 7072 0042 0142     		tst	r1, r0
 7073 0044 10D1     		bne	.L449
 7074              	.LVL603:
3793:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         hi2c->AddrEventCount++;
 7075              		.loc 1 3793 0
 7076 0046 A16C     		ldr	r1, [r4, #72]
 7077 0048 0131     		add	r1, r1, #1
 7078 004a A164     		str	r1, [r4, #72]
3794:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         if(hi2c->AddrEventCount == 2U)
 7079              		.loc 1 3794 0
 7080 004c A16C     		ldr	r1, [r4, #72]
 7081 004e 0229     		cmp	r1, #2
 7082 0050 2AD1     		bne	.L446
3797:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           hi2c->AddrEventCount = 0U;
 7083              		.loc 1 3797 0
 7084 0052 0021     		mov	r1, #0
 7085 0054 A164     		str	r1, [r4, #72]
3800:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           __HAL_I2C_CLEAR_FLAG(hi2c,I2C_FLAG_ADDR);
 7086              		.loc 1 3800 0
 7087 0056 0820     		mov	r0, #8
 7088 0058 D861     		str	r0, [r3, #28]
3803:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           __HAL_UNLOCK(hi2c);
 7089              		.loc 1 3803 0
 7090 005a 4023     		mov	r3, #64
 7091 005c E154     		strb	r1, [r4, r3]
3806:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
 7092              		.loc 1 3806 0
 7093 005e 201C     		mov	r0, r4
 7094 0060 391C     		mov	r1, r7
 7095 0062 FFF7FEFF 		bl	HAL_I2C_AddrCallback
 7096              	.LVL604:
 7097 0066 1FE0     		b	.L446
 7098              	.LVL605:
 7099              	.L449:
3814:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
 7100              		.loc 1 3814 0
 7101 0068 201C     		mov	r0, r4
 7102 006a 0421     		mov	r1, #4
 7103 006c FFF7FEFF 		bl	I2C_Disable_IRQ
 7104              	.LVL606:
3817:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 7105              		.loc 1 3817 0
 7106 0070 0022     		mov	r2, #0
 7107 0072 4023     		mov	r3, #64
 7108 0074 E254     		strb	r2, [r4, r3]
3820:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
 7109              		.loc 1 3820 0
 7110 0076 201C     		mov	r0, r4
 7111 0078 391C     		mov	r1, r7
 7112 007a 2A1C     		mov	r2, r5
 7113 007c FFF7FEFF 		bl	HAL_I2C_AddrCallback
ARM GAS  /tmp/cchP46LN.s 			page 229


 7114              	.LVL607:
 7115 0080 12E0     		b	.L446
 7116              	.LVL608:
 7117              	.L448:
3827:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
 7118              		.loc 1 3827 0
 7119 0082 201C     		mov	r0, r4
 7120              	.LVL609:
 7121 0084 0421     		mov	r1, #4
 7122 0086 FFF7FEFF 		bl	I2C_Disable_IRQ
 7123              	.LVL610:
3830:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
 7124              		.loc 1 3830 0
 7125 008a 0022     		mov	r2, #0
 7126 008c 4023     		mov	r3, #64
 7127 008e E254     		strb	r2, [r4, r3]
3833:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
 7128              		.loc 1 3833 0
 7129 0090 201C     		mov	r0, r4
 7130 0092 391C     		mov	r1, r7
 7131 0094 4246     		mov	r2, r8
 7132 0096 FFF7FEFF 		bl	HAL_I2C_AddrCallback
 7133              	.LVL611:
 7134 009a 05E0     		b	.L446
 7135              	.LVL612:
 7136              	.L447:
3840:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
 7137              		.loc 1 3840 0
 7138 009c 0368     		ldr	r3, [r0]
 7139 009e 0822     		mov	r2, #8
 7140 00a0 DA61     		str	r2, [r3, #28]
3843:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 7141              		.loc 1 3843 0
 7142 00a2 0022     		mov	r2, #0
 7143 00a4 4023     		mov	r3, #64
 7144 00a6 C254     		strb	r2, [r0, r3]
 7145              	.LVL613:
 7146              	.L446:
3845:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 7147              		.loc 1 3845 0
 7148              		@ sp needed
 7149              	.LVL614:
 7150 00a8 04BC     		pop	{r2}
 7151 00aa 9046     		mov	r8, r2
 7152 00ac F0BD     		pop	{r4, r5, r6, r7, pc}
 7153              		.cfi_endproc
 7154              	.LFE87:
 7156 00ae C046     		.section	.text.HAL_I2C_ListenCpltCallback,"ax",%progbits
 7157              		.align	2
 7158              		.weak	HAL_I2C_ListenCpltCallback
 7159              		.code	16
 7160              		.thumb_func
 7162              	HAL_I2C_ListenCpltCallback:
 7163              	.LFB73:
3117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 7164              		.loc 1 3117 0
 7165              		.cfi_startproc
ARM GAS  /tmp/cchP46LN.s 			page 230


 7166              	.LVL615:
3124:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 7167              		.loc 1 3124 0
 7168              		@ sp needed
 7169 0000 7047     		bx	lr
 7170              		.cfi_endproc
 7171              	.LFE73:
 7173 0002 C046     		.section	.text.I2C_ITListenCplt,"ax",%progbits
 7174              		.align	2
 7175              		.code	16
 7176              		.thumb_func
 7178              	I2C_ITListenCplt:
 7179              	.LFB92:
4140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 7180              		.loc 1 4140 0
 7181              		.cfi_startproc
 7182              	.LVL616:
 7183 0000 10B5     		push	{r4, lr}
 7184              	.LCFI79:
 7185              		.cfi_def_cfa_offset 8
 7186              		.cfi_offset 4, -8
 7187              		.cfi_offset 14, -4
 7188 0002 041C     		mov	r4, r0
4142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 7189              		.loc 1 4142 0
 7190 0004 164B     		ldr	r3, .L454
 7191 0006 C362     		str	r3, [r0, #44]
4143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 7192              		.loc 1 4143 0
 7193 0008 0023     		mov	r3, #0
 7194 000a 0363     		str	r3, [r0, #48]
4144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
 7195              		.loc 1 4144 0
 7196 000c 2020     		mov	r0, #32
 7197              	.LVL617:
 7198 000e 4122     		mov	r2, #65
 7199 0010 A054     		strb	r0, [r4, r2]
4145:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 7200              		.loc 1 4145 0
 7201 0012 4222     		mov	r2, #66
 7202 0014 A354     		strb	r3, [r4, r2]
4146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->XferISR = NULL;
 7203              		.loc 1 4146 0
 7204 0016 6363     		str	r3, [r4, #52]
4149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_RXNE) != RESET))
 7205              		.loc 1 4149 0
 7206 0018 4B07     		lsl	r3, r1, #29
 7207 001a 12D5     		bpl	.L453
4152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
 7208              		.loc 1 4152 0
 7209 001c 636A     		ldr	r3, [r4, #36]
 7210 001e 5A1C     		add	r2, r3, #1
 7211 0020 6262     		str	r2, [r4, #36]
 7212 0022 2268     		ldr	r2, [r4]
 7213 0024 526A     		ldr	r2, [r2, #36]
 7214 0026 1A70     		strb	r2, [r3]
4154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((hi2c->XferSize > 0U))
ARM GAS  /tmp/cchP46LN.s 			page 231


 7215              		.loc 1 4154 0
 7216 0028 238D     		ldrh	r3, [r4, #40]
 7217 002a 002B     		cmp	r3, #0
 7218 002c 09D0     		beq	.L453
4156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize--;
 7219              		.loc 1 4156 0
 7220 002e 013B     		sub	r3, r3, #1
 7221 0030 2385     		strh	r3, [r4, #40]
4157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferCount--;
 7222              		.loc 1 4157 0
 7223 0032 638D     		ldrh	r3, [r4, #42]
 7224 0034 013B     		sub	r3, r3, #1
 7225 0036 9BB2     		uxth	r3, r3
 7226 0038 6385     		strh	r3, [r4, #42]
4160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 7227              		.loc 1 4160 0
 7228 003a 626C     		ldr	r2, [r4, #68]
 7229 003c 0423     		mov	r3, #4
 7230 003e 1343     		orr	r3, r2
 7231 0040 6364     		str	r3, [r4, #68]
 7232              	.L453:
4165:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT | I2C_XFER_TX_IT);
 7233              		.loc 1 4165 0
 7234 0042 201C     		mov	r0, r4
 7235 0044 0721     		mov	r1, #7
 7236              	.LVL618:
 7237 0046 FFF7FEFF 		bl	I2C_Disable_IRQ
 7238              	.LVL619:
4168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 7239              		.loc 1 4168 0
 7240 004a 2368     		ldr	r3, [r4]
 7241 004c 1022     		mov	r2, #16
 7242 004e DA61     		str	r2, [r3, #28]
4171:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 7243              		.loc 1 4171 0
 7244 0050 0022     		mov	r2, #0
 7245 0052 4023     		mov	r3, #64
 7246 0054 E254     		strb	r2, [r4, r3]
4174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   HAL_I2C_ListenCpltCallback(hi2c);
 7247              		.loc 1 4174 0
 7248 0056 201C     		mov	r0, r4
 7249 0058 FFF7FEFF 		bl	HAL_I2C_ListenCpltCallback
 7250              	.LVL620:
4175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 7251              		.loc 1 4175 0
 7252              		@ sp needed
 7253              	.LVL621:
 7254 005c 10BD     		pop	{r4, pc}
 7255              	.L455:
 7256 005e C046     		.align	2
 7257              	.L454:
 7258 0060 0000FFFF 		.word	-65536
 7259              		.cfi_endproc
 7260              	.LFE92:
 7262              		.section	.text.HAL_I2C_MemTxCpltCallback,"ax",%progbits
 7263              		.align	2
 7264              		.weak	HAL_I2C_MemTxCpltCallback
ARM GAS  /tmp/cchP46LN.s 			page 232


 7265              		.code	16
 7266              		.thumb_func
 7268              	HAL_I2C_MemTxCpltCallback:
 7269              	.LFB74:
3133:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 7270              		.loc 1 3133 0
 7271              		.cfi_startproc
 7272              	.LVL622:
3140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 7273              		.loc 1 3140 0
 7274              		@ sp needed
 7275 0000 7047     		bx	lr
 7276              		.cfi_endproc
 7277              	.LFE74:
 7279 0002 C046     		.section	.text.HAL_I2C_MemRxCpltCallback,"ax",%progbits
 7280              		.align	2
 7281              		.weak	HAL_I2C_MemRxCpltCallback
 7282              		.code	16
 7283              		.thumb_func
 7285              	HAL_I2C_MemRxCpltCallback:
 7286              	.LFB75:
3149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 7287              		.loc 1 3149 0
 7288              		.cfi_startproc
 7289              	.LVL623:
3156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 7290              		.loc 1 3156 0
 7291              		@ sp needed
 7292 0000 7047     		bx	lr
 7293              		.cfi_endproc
 7294              	.LFE75:
 7296 0002 C046     		.section	.text.HAL_I2C_ErrorCallback,"ax",%progbits
 7297              		.align	2
 7298              		.weak	HAL_I2C_ErrorCallback
 7299              		.code	16
 7300              		.thumb_func
 7302              	HAL_I2C_ErrorCallback:
 7303              	.LFB76:
3165:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 7304              		.loc 1 3165 0
 7305              		.cfi_startproc
 7306              	.LVL624:
3172:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 7307              		.loc 1 3172 0
 7308              		@ sp needed
 7309 0000 7047     		bx	lr
 7310              		.cfi_endproc
 7311              	.LFE76:
 7313 0002 C046     		.section	.text.HAL_I2C_AbortCpltCallback,"ax",%progbits
 7314              		.align	2
 7315              		.weak	HAL_I2C_AbortCpltCallback
 7316              		.code	16
 7317              		.thumb_func
 7319              	HAL_I2C_AbortCpltCallback:
 7320              	.LFB77:
3181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 7321              		.loc 1 3181 0
ARM GAS  /tmp/cchP46LN.s 			page 233


 7322              		.cfi_startproc
 7323              	.LVL625:
3188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 7324              		.loc 1 3188 0
 7325              		@ sp needed
 7326 0000 7047     		bx	lr
 7327              		.cfi_endproc
 7328              	.LFE77:
 7330 0002 C046     		.section	.text.I2C_ITError,"ax",%progbits
 7331              		.align	2
 7332              		.code	16
 7333              		.thumb_func
 7335              	I2C_ITError:
 7336              	.LFB93:
4184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 7337              		.loc 1 4184 0
 7338              		.cfi_startproc
 7339              	.LVL626:
 7340 0000 10B5     		push	{r4, lr}
 7341              	.LCFI80:
 7342              		.cfi_def_cfa_offset 8
 7343              		.cfi_offset 4, -8
 7344              		.cfi_offset 14, -4
 7345 0002 041C     		mov	r4, r0
4186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->Mode          = HAL_I2C_MODE_NONE;
 7346              		.loc 1 4186 0
 7347 0004 0023     		mov	r3, #0
 7348 0006 4222     		mov	r2, #66
 7349 0008 8354     		strb	r3, [r0, r2]
4187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 7350              		.loc 1 4187 0
 7351 000a 364A     		ldr	r2, .L469
 7352 000c C262     		str	r2, [r0, #44]
4188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->XferCount     = 0U;
 7353              		.loc 1 4188 0
 7354 000e 4385     		strh	r3, [r0, #42]
4191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->ErrorCode |= ErrorCode;
 7355              		.loc 1 4191 0
 7356 0010 436C     		ldr	r3, [r0, #68]
 7357 0012 1943     		orr	r1, r3
 7358              	.LVL627:
 7359 0014 4164     		str	r1, [r0, #68]
4194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if((hi2c->State == HAL_I2C_STATE_LISTEN)         ||
 7360              		.loc 1 4194 0
 7361 0016 4123     		mov	r3, #65
 7362 0018 C35C     		ldrb	r3, [r0, r3]
 7363 001a 282B     		cmp	r3, #40
 7364 001c 07D0     		beq	.L461
4195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****      (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN) ||
 7365              		.loc 1 4195 0 discriminator 1
 7366 001e 4123     		mov	r3, #65
 7367 0020 C35C     		ldrb	r3, [r0, r3]
4194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if((hi2c->State == HAL_I2C_STATE_LISTEN)         ||
 7368              		.loc 1 4194 0 discriminator 1
 7369 0022 292B     		cmp	r3, #41
 7370 0024 03D0     		beq	.L461
4196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****      (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN))
ARM GAS  /tmp/cchP46LN.s 			page 234


 7371              		.loc 1 4196 0
 7372 0026 4123     		mov	r3, #65
 7373 0028 C35C     		ldrb	r3, [r0, r3]
4195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****      (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN) ||
 7374              		.loc 1 4195 0
 7375 002a 2A2B     		cmp	r3, #42
 7376 002c 0BD1     		bne	.L462
 7377              	.L461:
4199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_TX_IT);
 7378              		.loc 1 4199 0
 7379 002e 201C     		mov	r0, r4
 7380              	.LVL628:
 7381 0030 0321     		mov	r1, #3
 7382 0032 FFF7FEFF 		bl	I2C_Disable_IRQ
 7383              	.LVL629:
4202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
 7384              		.loc 1 4202 0
 7385 0036 2822     		mov	r2, #40
 7386 0038 4123     		mov	r3, #65
 7387 003a E254     		strb	r2, [r4, r3]
4203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
 7388              		.loc 1 4203 0
 7389 003c 0023     		mov	r3, #0
 7390 003e 2363     		str	r3, [r4, #48]
4204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR       = I2C_Slave_ISR_IT;
 7391              		.loc 1 4204 0
 7392 0040 294B     		ldr	r3, .L469+4
 7393 0042 6363     		str	r3, [r4, #52]
 7394 0044 0CE0     		b	.L463
 7395              	.LVL630:
 7396              	.L462:
4209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT | I2C_XFER_TX_IT);
 7397              		.loc 1 4209 0
 7398 0046 0721     		mov	r1, #7
 7399 0048 FFF7FEFF 		bl	I2C_Disable_IRQ
 7400              	.LVL631:
4213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->State != HAL_I2C_STATE_ABORT)
 7401              		.loc 1 4213 0
 7402 004c 4123     		mov	r3, #65
 7403 004e E35C     		ldrb	r3, [r4, r3]
 7404 0050 602B     		cmp	r3, #96
 7405 0052 02D0     		beq	.L464
4216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->State         = HAL_I2C_STATE_READY;
 7406              		.loc 1 4216 0
 7407 0054 2022     		mov	r2, #32
 7408 0056 4123     		mov	r3, #65
 7409 0058 E254     		strb	r2, [r4, r3]
 7410              	.L464:
4218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
 7411              		.loc 1 4218 0
 7412 005a 0023     		mov	r3, #0
 7413 005c 2363     		str	r3, [r4, #48]
4219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
 7414              		.loc 1 4219 0
 7415 005e 6363     		str	r3, [r4, #52]
 7416              	.L463:
4223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN)
ARM GAS  /tmp/cchP46LN.s 			page 235


 7417              		.loc 1 4223 0
 7418 0060 2368     		ldr	r3, [r4]
 7419 0062 1A68     		ldr	r2, [r3]
 7420 0064 5104     		lsl	r1, r2, #17
 7421 0066 12D5     		bpl	.L465
4225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
 7422              		.loc 1 4225 0
 7423 0068 1968     		ldr	r1, [r3]
 7424 006a 204A     		ldr	r2, .L469+8
 7425 006c 0A40     		and	r2, r1
 7426 006e 1A60     		str	r2, [r3]
4229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 7427              		.loc 1 4229 0
 7428 0070 A36B     		ldr	r3, [r4, #56]
 7429 0072 1F4A     		ldr	r2, .L469+12
 7430 0074 9A63     		str	r2, [r3, #56]
4232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 7431              		.loc 1 4232 0
 7432 0076 0022     		mov	r2, #0
 7433 0078 4023     		mov	r3, #64
 7434 007a E254     		strb	r2, [r4, r3]
4235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 7435              		.loc 1 4235 0
 7436 007c A06B     		ldr	r0, [r4, #56]
 7437 007e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 7438              	.LVL632:
 7439 0082 0028     		cmp	r0, #0
 7440 0084 2DD0     		beq	.L460
4238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 7441              		.loc 1 4238 0
 7442 0086 A06B     		ldr	r0, [r4, #56]
 7443 0088 836B     		ldr	r3, [r0, #56]
 7444 008a 9847     		blx	r3
 7445              	.LVL633:
 7446 008c 29E0     		b	.L460
 7447              	.L465:
4242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN)
 7448              		.loc 1 4242 0
 7449 008e 1A68     		ldr	r2, [r3]
 7450 0090 1104     		lsl	r1, r2, #16
 7451 0092 12D5     		bpl	.L467
4244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
 7452              		.loc 1 4244 0
 7453 0094 1968     		ldr	r1, [r3]
 7454 0096 174A     		ldr	r2, .L469+16
 7455 0098 0A40     		and	r2, r1
 7456 009a 1A60     		str	r2, [r3]
4248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 7457              		.loc 1 4248 0
 7458 009c E36B     		ldr	r3, [r4, #60]
 7459 009e 144A     		ldr	r2, .L469+12
 7460 00a0 9A63     		str	r2, [r3, #56]
4251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 7461              		.loc 1 4251 0
 7462 00a2 0022     		mov	r2, #0
 7463 00a4 4023     		mov	r3, #64
 7464 00a6 E254     		strb	r2, [r4, r3]
ARM GAS  /tmp/cchP46LN.s 			page 236


4254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 7465              		.loc 1 4254 0
 7466 00a8 E06B     		ldr	r0, [r4, #60]
 7467 00aa FFF7FEFF 		bl	HAL_DMA_Abort_IT
 7468              	.LVL634:
 7469 00ae 0028     		cmp	r0, #0
 7470 00b0 17D0     		beq	.L460
4257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 7471              		.loc 1 4257 0
 7472 00b2 E06B     		ldr	r0, [r4, #60]
 7473 00b4 836B     		ldr	r3, [r0, #56]
 7474 00b6 9847     		blx	r3
 7475              	.LVL635:
 7476 00b8 13E0     		b	.L460
 7477              	.L467:
4260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(hi2c->State == HAL_I2C_STATE_ABORT)
 7478              		.loc 1 4260 0
 7479 00ba 4123     		mov	r3, #65
 7480 00bc E35C     		ldrb	r3, [r4, r3]
 7481 00be 602B     		cmp	r3, #96
 7482 00c0 09D1     		bne	.L468
4262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 7483              		.loc 1 4262 0
 7484 00c2 2022     		mov	r2, #32
 7485 00c4 4123     		mov	r3, #65
 7486 00c6 E254     		strb	r2, [r4, r3]
4265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 7487              		.loc 1 4265 0
 7488 00c8 0022     		mov	r2, #0
 7489 00ca 4023     		mov	r3, #64
 7490 00cc E254     		strb	r2, [r4, r3]
4268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     HAL_I2C_AbortCpltCallback(hi2c);
 7491              		.loc 1 4268 0
 7492 00ce 201C     		mov	r0, r4
 7493 00d0 FFF7FEFF 		bl	HAL_I2C_AbortCpltCallback
 7494              	.LVL636:
 7495 00d4 05E0     		b	.L460
 7496              	.L468:
4273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 7497              		.loc 1 4273 0
 7498 00d6 0022     		mov	r2, #0
 7499 00d8 4023     		mov	r3, #64
 7500 00da E254     		strb	r2, [r4, r3]
4276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     HAL_I2C_ErrorCallback(hi2c);
 7501              		.loc 1 4276 0
 7502 00dc 201C     		mov	r0, r4
 7503 00de FFF7FEFF 		bl	HAL_I2C_ErrorCallback
 7504              	.LVL637:
 7505              	.L460:
4278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 7506              		.loc 1 4278 0
 7507              		@ sp needed
 7508              	.LVL638:
 7509 00e2 10BD     		pop	{r4, pc}
 7510              	.L470:
 7511              		.align	2
 7512              	.L469:
ARM GAS  /tmp/cchP46LN.s 			page 237


 7513 00e4 0000FFFF 		.word	-65536
 7514 00e8 00000000 		.word	I2C_Slave_ISR_IT
 7515 00ec FFBFFFFF 		.word	-16385
 7516 00f0 00000000 		.word	I2C_DMAAbort
 7517 00f4 FF7FFFFF 		.word	-32769
 7518              		.cfi_endproc
 7519              	.LFE93:
 7521              		.section	.text.I2C_ITSlaveCplt,"ax",%progbits
 7522              		.align	2
 7523              		.code	16
 7524              		.thumb_func
 7526              	I2C_ITSlaveCplt:
 7527              	.LFB91:
4034:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 7528              		.loc 1 4034 0
 7529              		.cfi_startproc
 7530              	.LVL639:
 7531 0000 38B5     		push	{r3, r4, r5, lr}
 7532              	.LCFI81:
 7533              		.cfi_def_cfa_offset 16
 7534              		.cfi_offset 3, -16
 7535              		.cfi_offset 4, -12
 7536              		.cfi_offset 5, -8
 7537              		.cfi_offset 14, -4
 7538 0002 041C     		mov	r4, r0
 7539 0004 0D1C     		mov	r5, r1
4036:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 7540              		.loc 1 4036 0
 7541 0006 0368     		ldr	r3, [r0]
 7542 0008 2022     		mov	r2, #32
 7543 000a DA61     		str	r2, [r3, #28]
4039:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c,I2C_FLAG_ADDR);
 7544              		.loc 1 4039 0
 7545 000c 0368     		ldr	r3, [r0]
 7546 000e 0822     		mov	r2, #8
 7547 0010 DA61     		str	r2, [r3, #28]
4042:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_TX_IT | I2C_XFER_RX_IT);
 7548              		.loc 1 4042 0
 7549 0012 0721     		mov	r1, #7
 7550              	.LVL640:
 7551 0014 FFF7FEFF 		bl	I2C_Disable_IRQ
 7552              	.LVL641:
4045:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->Instance->CR2 |= I2C_CR2_NACK;
 7553              		.loc 1 4045 0
 7554 0018 2368     		ldr	r3, [r4]
 7555 001a 5968     		ldr	r1, [r3, #4]
 7556 001c 8022     		mov	r2, #128
 7557 001e 1202     		lsl	r2, r2, #8
 7558 0020 0A43     		orr	r2, r1
 7559 0022 5A60     		str	r2, [r3, #4]
4048:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   I2C_RESET_CR2(hi2c);
 7560              		.loc 1 4048 0
 7561 0024 2368     		ldr	r3, [r4]
 7562 0026 5968     		ldr	r1, [r3, #4]
 7563 0028 394A     		ldr	r2, .L482
 7564 002a 0A40     		and	r2, r1
 7565 002c 5A60     		str	r2, [r3, #4]
ARM GAS  /tmp/cchP46LN.s 			page 238


4051:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   I2C_Flush_TXDR(hi2c);
 7566              		.loc 1 4051 0
 7567 002e 201C     		mov	r0, r4
 7568 0030 FFF7FEFF 		bl	I2C_Flush_TXDR
 7569              	.LVL642:
4054:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN) ||
 7570              		.loc 1 4054 0
 7571 0034 2368     		ldr	r3, [r4]
 7572 0036 1A68     		ldr	r2, [r3]
 7573 0038 5104     		lsl	r1, r2, #17
 7574 003a 02D4     		bmi	.L472
4055:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****      ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN))
 7575              		.loc 1 4055 0 discriminator 1
 7576 003c 1A68     		ldr	r2, [r3]
4054:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN) ||
 7577              		.loc 1 4054 0 discriminator 1
 7578 003e 1104     		lsl	r1, r2, #16
 7579 0040 0DD5     		bpl	.L473
 7580              	.L472:
4057:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount = I2C_GET_DMA_REMAIN_DATA(hi2c);
 7581              		.loc 1 4057 0
 7582 0042 4122     		mov	r2, #65
 7583 0044 A25C     		ldrb	r2, [r4, r2]
 7584 0046 212A     		cmp	r2, #33
 7585 0048 04D1     		bne	.L474
4057:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount = I2C_GET_DMA_REMAIN_DATA(hi2c);
 7586              		.loc 1 4057 0 is_stmt 0 discriminator 1
 7587 004a A26B     		ldr	r2, [r4, #56]
 7588 004c 1268     		ldr	r2, [r2]
 7589 004e 5268     		ldr	r2, [r2, #4]
 7590 0050 92B2     		uxth	r2, r2
 7591 0052 03E0     		b	.L475
 7592              	.L474:
4057:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount = I2C_GET_DMA_REMAIN_DATA(hi2c);
 7593              		.loc 1 4057 0 discriminator 2
 7594 0054 E26B     		ldr	r2, [r4, #60]
 7595 0056 1268     		ldr	r2, [r2]
 7596 0058 5268     		ldr	r2, [r2, #4]
 7597 005a 92B2     		uxth	r2, r2
 7598              	.L475:
4057:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount = I2C_GET_DMA_REMAIN_DATA(hi2c);
 7599              		.loc 1 4057 0 discriminator 3
 7600 005c 6285     		strh	r2, [r4, #42]
 7601              	.L473:
4061:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->XferCount != 0U)
 7602              		.loc 1 4061 0 is_stmt 1
 7603 005e 628D     		ldrh	r2, [r4, #42]
 7604 0060 92B2     		uxth	r2, r2
 7605 0062 002A     		cmp	r2, #0
 7606 0064 03D0     		beq	.L476
4064:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 7607              		.loc 1 4064 0
 7608 0066 616C     		ldr	r1, [r4, #68]
 7609 0068 0422     		mov	r2, #4
 7610 006a 0A43     		orr	r2, r1
 7611 006c 6264     		str	r2, [r4, #68]
 7612              	.L476:
ARM GAS  /tmp/cchP46LN.s 			page 239


4068:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_RXNE) != RESET))
 7613              		.loc 1 4068 0
 7614 006e 6A07     		lsl	r2, r5, #29
 7615 0070 11D5     		bpl	.L477
4071:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
 7616              		.loc 1 4071 0
 7617 0072 626A     		ldr	r2, [r4, #36]
 7618 0074 511C     		add	r1, r2, #1
 7619 0076 6162     		str	r1, [r4, #36]
 7620 0078 5B6A     		ldr	r3, [r3, #36]
 7621 007a 1370     		strb	r3, [r2]
4073:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((hi2c->XferSize > 0U))
 7622              		.loc 1 4073 0
 7623 007c 238D     		ldrh	r3, [r4, #40]
 7624 007e 002B     		cmp	r3, #0
 7625 0080 09D0     		beq	.L477
4075:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize--;
 7626              		.loc 1 4075 0
 7627 0082 013B     		sub	r3, r3, #1
 7628 0084 2385     		strh	r3, [r4, #40]
4076:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferCount--;
 7629              		.loc 1 4076 0
 7630 0086 638D     		ldrh	r3, [r4, #42]
 7631 0088 013B     		sub	r3, r3, #1
 7632 008a 9BB2     		uxth	r3, r3
 7633 008c 6385     		strh	r3, [r4, #42]
4079:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 7634              		.loc 1 4079 0
 7635 008e 626C     		ldr	r2, [r4, #68]
 7636 0090 0423     		mov	r3, #4
 7637 0092 1343     		orr	r3, r2
 7638 0094 6364     		str	r3, [r4, #68]
 7639              	.L477:
4083:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 7640              		.loc 1 4083 0
 7641 0096 0023     		mov	r3, #0
 7642 0098 2363     		str	r3, [r4, #48]
4084:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 7643              		.loc 1 4084 0
 7644 009a 4222     		mov	r2, #66
 7645 009c A354     		strb	r3, [r4, r2]
4085:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->XferISR = NULL;
 7646              		.loc 1 4085 0
 7647 009e 6363     		str	r3, [r4, #52]
4087:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 7648              		.loc 1 4087 0
 7649 00a0 636C     		ldr	r3, [r4, #68]
 7650 00a2 002B     		cmp	r3, #0
 7651 00a4 0CD0     		beq	.L478
4090:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_ITError(hi2c, hi2c->ErrorCode);
 7652              		.loc 1 4090 0
 7653 00a6 616C     		ldr	r1, [r4, #68]
 7654 00a8 201C     		mov	r0, r4
 7655 00aa FFF7FEFF 		bl	I2C_ITError
 7656              	.LVL643:
4093:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->State == HAL_I2C_STATE_LISTEN)
 7657              		.loc 1 4093 0
ARM GAS  /tmp/cchP46LN.s 			page 240


 7658 00ae 4123     		mov	r3, #65
 7659 00b0 E35C     		ldrb	r3, [r4, r3]
 7660 00b2 282B     		cmp	r3, #40
 7661 00b4 2AD1     		bne	.L471
4096:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_ITListenCplt(hi2c, ITFlags);
 7662              		.loc 1 4096 0
 7663 00b6 201C     		mov	r0, r4
 7664 00b8 291C     		mov	r1, r5
 7665 00ba FFF7FEFF 		bl	I2C_ITListenCplt
 7666              	.LVL644:
 7667 00be 25E0     		b	.L471
 7668              	.L478:
4099:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(hi2c->XferOptions != I2C_NO_OPTION_FRAME)
 7669              		.loc 1 4099 0
 7670 00c0 E26A     		ldr	r2, [r4, #44]
 7671 00c2 144B     		ldr	r3, .L482+4
 7672 00c4 9A42     		cmp	r2, r3
 7673 00c6 0AD0     		beq	.L480
4101:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 7674              		.loc 1 4101 0
 7675 00c8 E362     		str	r3, [r4, #44]
4102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 7676              		.loc 1 4102 0
 7677 00ca 2022     		mov	r2, #32
 7678 00cc 4123     		mov	r3, #65
 7679 00ce E254     		strb	r2, [r4, r3]
4105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 7680              		.loc 1 4105 0
 7681 00d0 0022     		mov	r2, #0
 7682 00d2 4023     		mov	r3, #64
 7683 00d4 E254     		strb	r2, [r4, r3]
4108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     HAL_I2C_ListenCpltCallback(hi2c);
 7684              		.loc 1 4108 0
 7685 00d6 201C     		mov	r0, r4
 7686 00d8 FFF7FEFF 		bl	HAL_I2C_ListenCpltCallback
 7687              	.LVL645:
 7688 00dc 16E0     		b	.L471
 7689              	.L480:
4111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(hi2c->State == HAL_I2C_STATE_BUSY_RX)
 7690              		.loc 1 4111 0
 7691 00de 4123     		mov	r3, #65
 7692 00e0 E35C     		ldrb	r3, [r4, r3]
 7693 00e2 222B     		cmp	r3, #34
 7694 00e4 09D1     		bne	.L481
4113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 7695              		.loc 1 4113 0
 7696 00e6 2022     		mov	r2, #32
 7697 00e8 4123     		mov	r3, #65
 7698 00ea E254     		strb	r2, [r4, r3]
4116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 7699              		.loc 1 4116 0
 7700 00ec 0022     		mov	r2, #0
 7701 00ee 4023     		mov	r3, #64
 7702 00f0 E254     		strb	r2, [r4, r3]
4119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     HAL_I2C_SlaveRxCpltCallback(hi2c);
 7703              		.loc 1 4119 0
 7704 00f2 201C     		mov	r0, r4
ARM GAS  /tmp/cchP46LN.s 			page 241


 7705 00f4 FFF7FEFF 		bl	HAL_I2C_SlaveRxCpltCallback
 7706              	.LVL646:
 7707 00f8 08E0     		b	.L471
 7708              	.L481:
4123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 7709              		.loc 1 4123 0
 7710 00fa 2022     		mov	r2, #32
 7711 00fc 4123     		mov	r3, #65
 7712 00fe E254     		strb	r2, [r4, r3]
4126:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 7713              		.loc 1 4126 0
 7714 0100 0022     		mov	r2, #0
 7715 0102 4023     		mov	r3, #64
 7716 0104 E254     		strb	r2, [r4, r3]
4129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     HAL_I2C_SlaveTxCpltCallback(hi2c);
 7717              		.loc 1 4129 0
 7718 0106 201C     		mov	r0, r4
 7719 0108 FFF7FEFF 		bl	HAL_I2C_SlaveTxCpltCallback
 7720              	.LVL647:
 7721              	.L471:
4131:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 7722              		.loc 1 4131 0
 7723              		@ sp needed
 7724              	.LVL648:
 7725              	.LVL649:
 7726 010c 38BD     		pop	{r3, r4, r5, pc}
 7727              	.L483:
 7728 010e C046     		.align	2
 7729              	.L482:
 7730 0110 00E800FE 		.word	-33495040
 7731 0114 0000FFFF 		.word	-65536
 7732              		.cfi_endproc
 7733              	.LFE91:
 7735              		.section	.text.I2C_Slave_ISR_IT,"ax",%progbits
 7736              		.align	2
 7737              		.code	16
 7738              		.thumb_func
 7740              	I2C_Slave_ISR_IT:
 7741              	.LFB82:
3385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 7742              		.loc 1 3385 0
 7743              		.cfi_startproc
 7744              	.LVL650:
 7745 0000 70B5     		push	{r4, r5, r6, lr}
 7746              	.LCFI82:
 7747              		.cfi_def_cfa_offset 16
 7748              		.cfi_offset 4, -16
 7749              		.cfi_offset 5, -12
 7750              		.cfi_offset 6, -8
 7751              		.cfi_offset 14, -4
 7752 0002 041C     		mov	r4, r0
 7753 0004 0D1C     		mov	r5, r1
 7754 0006 161C     		mov	r6, r2
3387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 7755              		.loc 1 3387 0
 7756 0008 4023     		mov	r3, #64
 7757 000a C35C     		ldrb	r3, [r0, r3]
ARM GAS  /tmp/cchP46LN.s 			page 242


 7758 000c 012B     		cmp	r3, #1
 7759 000e 00D1     		bne	.LCB7761
 7760 0010 93E0     		b	.L498	@long jump
 7761              	.LCB7761:
3387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 7762              		.loc 1 3387 0 is_stmt 0 discriminator 2
 7763 0012 0122     		mov	r2, #1
 7764              	.LVL651:
 7765 0014 4023     		mov	r3, #64
 7766 0016 C254     		strb	r2, [r0, r3]
3389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_AF) != RESET) && ((ITSources & I2C_IT_NACKI) != RESET))
 7767              		.loc 1 3389 0 is_stmt 1 discriminator 2
 7768 0018 CB06     		lsl	r3, r1, #27
 7769 001a 36D5     		bpl	.L486
3389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_AF) != RESET) && ((ITSources & I2C_IT_NACKI) != RESET))
 7770              		.loc 1 3389 0 is_stmt 0 discriminator 1
 7771 001c F306     		lsl	r3, r6, #27
 7772 001e 34D5     		bpl	.L486
3395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount == 0U)
 7773              		.loc 1 3395 0 is_stmt 1
 7774 0020 438D     		ldrh	r3, [r0, #42]
 7775 0022 9BB2     		uxth	r3, r3
 7776 0024 002B     		cmp	r3, #0
 7777 0026 28D1     		bne	.L487
3397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(((hi2c->XferOptions == I2C_FIRST_AND_LAST_FRAME) || (hi2c->XferOptions == I2C_LAST_FRAME))
 7778              		.loc 1 3397 0
 7779 0028 C26A     		ldr	r2, [r0, #44]
 7780 002a 8023     		mov	r3, #128
 7781 002c 9B04     		lsl	r3, r3, #18
 7782 002e 9A42     		cmp	r2, r3
 7783 0030 04D0     		beq	.L488
3397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(((hi2c->XferOptions == I2C_FIRST_AND_LAST_FRAME) || (hi2c->XferOptions == I2C_LAST_FRAME))
 7784              		.loc 1 3397 0 is_stmt 0 discriminator 2
 7785 0032 C26A     		ldr	r2, [r0, #44]
 7786 0034 8023     		mov	r3, #128
 7787 0036 9B04     		lsl	r3, r3, #18
 7788 0038 9A42     		cmp	r2, r3
 7789 003a 08D1     		bne	.L489
 7790              	.L488:
3398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         (hi2c->State == HAL_I2C_STATE_LISTEN))
 7791              		.loc 1 3398 0 is_stmt 1 discriminator 1
 7792 003c 4123     		mov	r3, #65
 7793 003e E35C     		ldrb	r3, [r4, r3]
3397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(((hi2c->XferOptions == I2C_FIRST_AND_LAST_FRAME) || (hi2c->XferOptions == I2C_LAST_FRAME))
 7794              		.loc 1 3397 0 discriminator 1
 7795 0040 282B     		cmp	r3, #40
 7796 0042 04D1     		bne	.L489
3401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         I2C_ITListenCplt(hi2c, ITFlags);
 7797              		.loc 1 3401 0
 7798 0044 201C     		mov	r0, r4
 7799              	.LVL652:
 7800 0046 291C     		mov	r1, r5
 7801              	.LVL653:
 7802 0048 FFF7FEFF 		bl	I2C_ITListenCplt
 7803              	.LVL654:
 7804 004c 68E0     		b	.L490
 7805              	.LVL655:
ARM GAS  /tmp/cchP46LN.s 			page 243


 7806              	.L489:
3403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       else if((hi2c->XferOptions != I2C_NO_OPTION_FRAME) && (hi2c->State == HAL_I2C_STATE_BUSY_TX_L
 7807              		.loc 1 3403 0
 7808 004e E26A     		ldr	r2, [r4, #44]
 7809 0050 3B4B     		ldr	r3, .L499
 7810 0052 9A42     		cmp	r2, r3
 7811 0054 0DD0     		beq	.L491
3403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       else if((hi2c->XferOptions != I2C_NO_OPTION_FRAME) && (hi2c->State == HAL_I2C_STATE_BUSY_TX_L
 7812              		.loc 1 3403 0 is_stmt 0 discriminator 1
 7813 0056 4123     		mov	r3, #65
 7814 0058 E35C     		ldrb	r3, [r4, r3]
 7815 005a 292B     		cmp	r3, #41
 7816 005c 09D1     		bne	.L491
3406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 7817              		.loc 1 3406 0 is_stmt 1
 7818 005e 2368     		ldr	r3, [r4]
 7819 0060 1022     		mov	r2, #16
 7820 0062 DA61     		str	r2, [r3, #28]
3409:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         I2C_Flush_TXDR(hi2c);
 7821              		.loc 1 3409 0
 7822 0064 201C     		mov	r0, r4
 7823              	.LVL656:
 7824 0066 FFF7FEFF 		bl	I2C_Flush_TXDR
 7825              	.LVL657:
3413:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         I2C_ITSlaveSequentialCplt(hi2c);
 7826              		.loc 1 3413 0
 7827 006a 201C     		mov	r0, r4
 7828 006c FFF7FEFF 		bl	I2C_ITSlaveSequentialCplt
 7829              	.LVL658:
 7830 0070 56E0     		b	.L490
 7831              	.LVL659:
 7832              	.L491:
3418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 7833              		.loc 1 3418 0
 7834 0072 2368     		ldr	r3, [r4]
 7835 0074 1022     		mov	r2, #16
 7836 0076 DA61     		str	r2, [r3, #28]
 7837 0078 52E0     		b	.L490
 7838              	.L487:
3425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 7839              		.loc 1 3425 0
 7840 007a 0368     		ldr	r3, [r0]
 7841 007c 1022     		mov	r2, #16
 7842 007e DA61     		str	r2, [r3, #28]
3428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 7843              		.loc 1 3428 0
 7844 0080 426C     		ldr	r2, [r0, #68]
 7845 0082 0423     		mov	r3, #4
 7846 0084 1343     		orr	r3, r2
 7847 0086 4364     		str	r3, [r0, #68]
 7848 0088 4AE0     		b	.L490
 7849              	.L486:
3431:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_RXNE) != RESET) && ((ITSources & I2C_IT_RXI) != RESET))
 7850              		.loc 1 3431 0
 7851 008a 6B07     		lsl	r3, r5, #29
 7852 008c 1ED5     		bpl	.L492
3431:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_RXNE) != RESET) && ((ITSources & I2C_IT_RXI) != RESET))
ARM GAS  /tmp/cchP46LN.s 			page 244


 7853              		.loc 1 3431 0 is_stmt 0 discriminator 1
 7854 008e 7307     		lsl	r3, r6, #29
 7855 0090 1CD5     		bpl	.L492
3433:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount > 0U)
 7856              		.loc 1 3433 0 is_stmt 1
 7857 0092 638D     		ldrh	r3, [r4, #42]
 7858 0094 9BB2     		uxth	r3, r3
 7859 0096 002B     		cmp	r3, #0
 7860 0098 0CD0     		beq	.L493
3436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
 7861              		.loc 1 3436 0
 7862 009a 636A     		ldr	r3, [r4, #36]
 7863 009c 5A1C     		add	r2, r3, #1
 7864 009e 6262     		str	r2, [r4, #36]
 7865 00a0 2268     		ldr	r2, [r4]
 7866 00a2 526A     		ldr	r2, [r2, #36]
 7867 00a4 1A70     		strb	r2, [r3]
3437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize--;
 7868              		.loc 1 3437 0
 7869 00a6 238D     		ldrh	r3, [r4, #40]
 7870 00a8 013B     		sub	r3, r3, #1
 7871 00aa 2385     		strh	r3, [r4, #40]
3438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferCount--;
 7872              		.loc 1 3438 0
 7873 00ac 638D     		ldrh	r3, [r4, #42]
 7874 00ae 013B     		sub	r3, r3, #1
 7875 00b0 9BB2     		uxth	r3, r3
 7876 00b2 6385     		strh	r3, [r4, #42]
 7877              	.L493:
3441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((hi2c->XferCount == 0U) && \
 7878              		.loc 1 3441 0
 7879 00b4 638D     		ldrh	r3, [r4, #42]
 7880 00b6 9BB2     		uxth	r3, r3
 7881 00b8 002B     		cmp	r3, #0
 7882 00ba 31D1     		bne	.L490
3442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****        (hi2c->XferOptions != I2C_NO_OPTION_FRAME))
 7883              		.loc 1 3442 0 discriminator 1
 7884 00bc E26A     		ldr	r2, [r4, #44]
3441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((hi2c->XferCount == 0U) && \
 7885              		.loc 1 3441 0 discriminator 1
 7886 00be 204B     		ldr	r3, .L499
 7887 00c0 9A42     		cmp	r2, r3
 7888 00c2 2DD0     		beq	.L490
3445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_ITSlaveSequentialCplt(hi2c);
 7889              		.loc 1 3445 0
 7890 00c4 201C     		mov	r0, r4
 7891              	.LVL660:
 7892 00c6 FFF7FEFF 		bl	I2C_ITSlaveSequentialCplt
 7893              	.LVL661:
 7894 00ca 29E0     		b	.L490
 7895              	.LVL662:
 7896              	.L492:
3448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_ADDR) != RESET) && ((ITSources & I2C_IT_ADDRI) != RESET))
 7897              		.loc 1 3448 0
 7898 00cc 2B07     		lsl	r3, r5, #28
 7899 00ce 06D5     		bpl	.L494
3448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_ADDR) != RESET) && ((ITSources & I2C_IT_ADDRI) != RESET))
ARM GAS  /tmp/cchP46LN.s 			page 245


 7900              		.loc 1 3448 0 is_stmt 0 discriminator 1
 7901 00d0 3307     		lsl	r3, r6, #28
 7902 00d2 04D5     		bpl	.L494
3450:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_ITAddrCplt(hi2c, ITFlags);
 7903              		.loc 1 3450 0 is_stmt 1
 7904 00d4 201C     		mov	r0, r4
 7905              	.LVL663:
 7906 00d6 291C     		mov	r1, r5
 7907              	.LVL664:
 7908 00d8 FFF7FEFF 		bl	I2C_ITAddrCplt
 7909              	.LVL665:
 7910 00dc 20E0     		b	.L490
 7911              	.LVL666:
 7912              	.L494:
3452:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_TXIS) != RESET) && ((ITSources & I2C_IT_TXI) != RESET))
 7913              		.loc 1 3452 0
 7914 00de AB07     		lsl	r3, r5, #30
 7915 00e0 1ED5     		bpl	.L490
3452:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_TXIS) != RESET) && ((ITSources & I2C_IT_TXI) != RESET))
 7916              		.loc 1 3452 0 is_stmt 0 discriminator 1
 7917 00e2 B307     		lsl	r3, r6, #30
 7918 00e4 1CD5     		bpl	.L490
3458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount > 0U)
 7919              		.loc 1 3458 0 is_stmt 1
 7920 00e6 638D     		ldrh	r3, [r4, #42]
 7921 00e8 9BB2     		uxth	r3, r3
 7922 00ea 002B     		cmp	r3, #0
 7923 00ec 0DD0     		beq	.L495
3461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Instance->TXDR = (*hi2c->pBuffPtr++);
 7924              		.loc 1 3461 0
 7925 00ee 2268     		ldr	r2, [r4]
 7926 00f0 636A     		ldr	r3, [r4, #36]
 7927 00f2 591C     		add	r1, r3, #1
 7928              	.LVL667:
 7929 00f4 6162     		str	r1, [r4, #36]
 7930 00f6 1B78     		ldrb	r3, [r3]
 7931 00f8 9362     		str	r3, [r2, #40]
3462:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferCount--;
 7932              		.loc 1 3462 0
 7933 00fa 638D     		ldrh	r3, [r4, #42]
 7934 00fc 013B     		sub	r3, r3, #1
 7935 00fe 9BB2     		uxth	r3, r3
 7936 0100 6385     		strh	r3, [r4, #42]
3463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferSize--;
 7937              		.loc 1 3463 0
 7938 0102 238D     		ldrh	r3, [r4, #40]
 7939 0104 013B     		sub	r3, r3, #1
 7940 0106 2385     		strh	r3, [r4, #40]
 7941 0108 0AE0     		b	.L490
 7942              	.LVL668:
 7943              	.L495:
3467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if((hi2c->XferOptions == I2C_NEXT_FRAME) || (hi2c->XferOptions == I2C_FIRST_FRAME))
 7944              		.loc 1 3467 0
 7945 010a E26A     		ldr	r2, [r4, #44]
 7946 010c 8023     		mov	r3, #128
 7947 010e 5B04     		lsl	r3, r3, #17
 7948 0110 9A42     		cmp	r2, r3
ARM GAS  /tmp/cchP46LN.s 			page 246


 7949 0112 02D0     		beq	.L496
3467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if((hi2c->XferOptions == I2C_NEXT_FRAME) || (hi2c->XferOptions == I2C_FIRST_FRAME))
 7950              		.loc 1 3467 0 is_stmt 0 discriminator 1
 7951 0114 E36A     		ldr	r3, [r4, #44]
 7952 0116 002B     		cmp	r3, #0
 7953 0118 02D1     		bne	.L490
 7954              	.L496:
3471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         I2C_ITSlaveSequentialCplt(hi2c);
 7955              		.loc 1 3471 0 is_stmt 1
 7956 011a 201C     		mov	r0, r4
 7957              	.LVL669:
 7958 011c FFF7FEFF 		bl	I2C_ITSlaveSequentialCplt
 7959              	.LVL670:
 7960              	.L490:
3477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_STOPF) != RESET) && ((ITSources & I2C_IT_STOPI) != RESET))
 7961              		.loc 1 3477 0
 7962 0120 AB06     		lsl	r3, r5, #26
 7963 0122 05D5     		bpl	.L497
3477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_STOPF) != RESET) && ((ITSources & I2C_IT_STOPI) != RESET))
 7964              		.loc 1 3477 0 is_stmt 0 discriminator 1
 7965 0124 B306     		lsl	r3, r6, #26
 7966 0126 03D5     		bpl	.L497
3480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_ITSlaveCplt(hi2c, ITFlags);
 7967              		.loc 1 3480 0 is_stmt 1
 7968 0128 201C     		mov	r0, r4
 7969 012a 291C     		mov	r1, r5
 7970 012c FFF7FEFF 		bl	I2C_ITSlaveCplt
 7971              	.LVL671:
 7972              	.L497:
3484:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 7973              		.loc 1 3484 0
 7974 0130 0022     		mov	r2, #0
 7975 0132 4023     		mov	r3, #64
 7976 0134 E254     		strb	r2, [r4, r3]
3486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   return HAL_OK;
 7977              		.loc 1 3486 0
 7978 0136 0020     		mov	r0, #0
 7979 0138 00E0     		b	.L485
 7980              	.LVL672:
 7981              	.L498:
3387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 7982              		.loc 1 3387 0
 7983 013a 0220     		mov	r0, #2
 7984              	.LVL673:
 7985              	.L485:
3487:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 7986              		.loc 1 3487 0
 7987              		@ sp needed
 7988              	.LVL674:
 7989              	.LVL675:
 7990              	.LVL676:
 7991 013c 70BD     		pop	{r4, r5, r6, pc}
 7992              	.L500:
 7993 013e C046     		.align	2
 7994              	.L499:
 7995 0140 0000FFFF 		.word	-65536
 7996              		.cfi_endproc
ARM GAS  /tmp/cchP46LN.s 			page 247


 7997              	.LFE82:
 7999              		.section	.text.I2C_Slave_ISR_DMA,"ax",%progbits
 8000              		.align	2
 8001              		.code	16
 8002              		.thumb_func
 8004              	I2C_Slave_ISR_DMA:
 8005              	.LFB84:
3587:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 8006              		.loc 1 3587 0
 8007              		.cfi_startproc
 8008              	.LVL677:
 8009 0000 10B5     		push	{r4, lr}
 8010              	.LCFI83:
 8011              		.cfi_def_cfa_offset 8
 8012              		.cfi_offset 4, -8
 8013              		.cfi_offset 14, -4
 8014 0002 041C     		mov	r4, r0
3589:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 8015              		.loc 1 3589 0
 8016 0004 4023     		mov	r3, #64
 8017 0006 C35C     		ldrb	r3, [r0, r3]
 8018 0008 012B     		cmp	r3, #1
 8019 000a 39D0     		beq	.L509
3589:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 8020              		.loc 1 3589 0 is_stmt 0 discriminator 2
 8021 000c 0120     		mov	r0, #1
 8022              	.LVL678:
 8023 000e 4023     		mov	r3, #64
 8024 0010 E054     		strb	r0, [r4, r3]
3591:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_AF) != RESET) && ((ITSources & I2C_IT_NACKI) != RESET))
 8025              		.loc 1 3591 0 is_stmt 1 discriminator 2
 8026 0012 CB06     		lsl	r3, r1, #27
 8027 0014 20D5     		bpl	.L503
3591:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_AF) != RESET) && ((ITSources & I2C_IT_NACKI) != RESET))
 8028              		.loc 1 3591 0 is_stmt 0 discriminator 1
 8029 0016 D306     		lsl	r3, r2, #27
 8030 0018 1ED5     		bpl	.L503
3597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_GET_DMA_REMAIN_DATA(hi2c) == 0U)
 8031              		.loc 1 3597 0 is_stmt 1
 8032 001a 4123     		mov	r3, #65
 8033 001c E35C     		ldrb	r3, [r4, r3]
 8034 001e 212B     		cmp	r3, #33
 8035 0020 06D1     		bne	.L504
3597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_GET_DMA_REMAIN_DATA(hi2c) == 0U)
 8036              		.loc 1 3597 0 is_stmt 0 discriminator 1
 8037 0022 A36B     		ldr	r3, [r4, #56]
 8038 0024 1B68     		ldr	r3, [r3]
 8039 0026 5B68     		ldr	r3, [r3, #4]
 8040 0028 5A42     		neg	r2, r3
 8041 002a 5341     		adc	r3, r3, r2
 8042              	.LVL679:
 8043 002c DBB2     		uxtb	r3, r3
 8044 002e 05E0     		b	.L505
 8045              	.LVL680:
 8046              	.L504:
3597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_GET_DMA_REMAIN_DATA(hi2c) == 0U)
 8047              		.loc 1 3597 0 discriminator 2
ARM GAS  /tmp/cchP46LN.s 			page 248


 8048 0030 E36B     		ldr	r3, [r4, #60]
 8049 0032 1B68     		ldr	r3, [r3]
 8050 0034 5B68     		ldr	r3, [r3, #4]
 8051 0036 5A42     		neg	r2, r3
 8052 0038 5341     		adc	r3, r3, r2
 8053              	.LVL681:
 8054 003a DBB2     		uxtb	r3, r3
 8055              	.L505:
3597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(I2C_GET_DMA_REMAIN_DATA(hi2c) == 0U)
 8056              		.loc 1 3597 0 discriminator 3
 8057 003c 002B     		cmp	r3, #0
 8058 003e 03D0     		beq	.L506
3600:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8059              		.loc 1 3600 0 is_stmt 1
 8060 0040 2368     		ldr	r3, [r4]
 8061 0042 1022     		mov	r2, #16
 8062 0044 DA61     		str	r2, [r3, #28]
 8063 0046 16E0     		b	.L507
 8064              	.L506:
3606:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8065              		.loc 1 3606 0
 8066 0048 2368     		ldr	r3, [r4]
 8067 004a 1022     		mov	r2, #16
 8068 004c DA61     		str	r2, [r3, #28]
3609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 8069              		.loc 1 3609 0
 8070 004e 626C     		ldr	r2, [r4, #68]
 8071 0050 0423     		mov	r3, #4
 8072 0052 1343     		orr	r3, r2
 8073 0054 6364     		str	r3, [r4, #68]
 8074 0056 0EE0     		b	.L507
 8075              	.LVL682:
 8076              	.L503:
3612:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_ADDR) != RESET) && ((ITSources & I2C_IT_ADDRI) != RESET))
 8077              		.loc 1 3612 0
 8078 0058 0B07     		lsl	r3, r1, #28
 8079 005a 05D5     		bpl	.L508
3612:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_ADDR) != RESET) && ((ITSources & I2C_IT_ADDRI) != RESET))
 8080              		.loc 1 3612 0 is_stmt 0 discriminator 1
 8081 005c 1307     		lsl	r3, r2, #28
 8082 005e 03D5     		bpl	.L508
3615:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
 8083              		.loc 1 3615 0 is_stmt 1
 8084 0060 2368     		ldr	r3, [r4]
 8085 0062 0822     		mov	r2, #8
 8086              	.LVL683:
 8087 0064 DA61     		str	r2, [r3, #28]
 8088 0066 06E0     		b	.L507
 8089              	.LVL684:
 8090              	.L508:
3617:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_STOPF) != RESET) && ((ITSources & I2C_IT_STOPI) != RESET))
 8091              		.loc 1 3617 0
 8092 0068 8B06     		lsl	r3, r1, #26
 8093 006a 04D5     		bpl	.L507
3617:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_STOPF) != RESET) && ((ITSources & I2C_IT_STOPI) != RESET))
 8094              		.loc 1 3617 0 is_stmt 0 discriminator 1
 8095 006c 9306     		lsl	r3, r2, #26
ARM GAS  /tmp/cchP46LN.s 			page 249


 8096 006e 02D5     		bpl	.L507
3620:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_ITSlaveCplt(hi2c, ITFlags);
 8097              		.loc 1 3620 0 is_stmt 1
 8098 0070 201C     		mov	r0, r4
 8099 0072 FFF7FEFF 		bl	I2C_ITSlaveCplt
 8100              	.LVL685:
 8101              	.L507:
3624:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 8102              		.loc 1 3624 0
 8103 0076 0022     		mov	r2, #0
 8104 0078 4023     		mov	r3, #64
 8105 007a E254     		strb	r2, [r4, r3]
3626:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   return HAL_OK;
 8106              		.loc 1 3626 0
 8107 007c 0020     		mov	r0, #0
 8108 007e 00E0     		b	.L502
 8109              	.LVL686:
 8110              	.L509:
3589:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 8111              		.loc 1 3589 0
 8112 0080 0220     		mov	r0, #2
 8113              	.LVL687:
 8114              	.L502:
3627:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 8115              		.loc 1 3627 0
 8116              		@ sp needed
 8117              	.LVL688:
 8118 0082 10BD     		pop	{r4, pc}
 8119              		.cfi_endproc
 8120              	.LFE84:
 8122              		.section	.text.I2C_ITMasterCplt,"ax",%progbits
 8123              		.align	2
 8124              		.code	16
 8125              		.thumb_func
 8127              	I2C_ITMasterCplt:
 8128              	.LFB90:
3942:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 8129              		.loc 1 3942 0
 8130              		.cfi_startproc
 8131              	.LVL689:
 8132 0000 10B5     		push	{r4, lr}
 8133              	.LCFI84:
 8134              		.cfi_def_cfa_offset 8
 8135              		.cfi_offset 4, -8
 8136              		.cfi_offset 14, -4
 8137 0002 041C     		mov	r4, r0
3944:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8138              		.loc 1 3944 0
 8139 0004 0368     		ldr	r3, [r0]
 8140 0006 2022     		mov	r2, #32
 8141 0008 DA61     		str	r2, [r3, #28]
3947:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   I2C_RESET_CR2(hi2c);
 8142              		.loc 1 3947 0
 8143 000a 0368     		ldr	r3, [r0]
 8144 000c 5868     		ldr	r0, [r3, #4]
 8145              	.LVL690:
 8146 000e 2F4A     		ldr	r2, .L518
ARM GAS  /tmp/cchP46LN.s 			page 250


 8147 0010 0240     		and	r2, r0
 8148 0012 5A60     		str	r2, [r3, #4]
3950:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 8149              		.loc 1 3950 0
 8150 0014 0023     		mov	r3, #0
 8151 0016 2363     		str	r3, [r4, #48]
3951:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->XferISR       = NULL;
 8152              		.loc 1 3951 0
 8153 0018 6363     		str	r3, [r4, #52]
3952:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 8154              		.loc 1 3952 0
 8155 001a 2D4B     		ldr	r3, .L518+4
 8156 001c E362     		str	r3, [r4, #44]
3954:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if((ITFlags & I2C_FLAG_AF) != RESET)
 8157              		.loc 1 3954 0
 8158 001e CB06     		lsl	r3, r1, #27
 8159 0020 06D5     		bpl	.L511
3957:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8160              		.loc 1 3957 0
 8161 0022 2368     		ldr	r3, [r4]
 8162 0024 1022     		mov	r2, #16
 8163 0026 DA61     		str	r2, [r3, #28]
3960:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 8164              		.loc 1 3960 0
 8165 0028 626C     		ldr	r2, [r4, #68]
 8166 002a 0423     		mov	r3, #4
 8167 002c 1343     		orr	r3, r2
 8168 002e 6364     		str	r3, [r4, #68]
 8169              	.L511:
3964:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   I2C_Flush_TXDR(hi2c);
 8170              		.loc 1 3964 0
 8171 0030 201C     		mov	r0, r4
 8172 0032 FFF7FEFF 		bl	I2C_Flush_TXDR
 8173              	.LVL691:
3967:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT| I2C_XFER_RX_IT);
 8174              		.loc 1 3967 0
 8175 0036 201C     		mov	r0, r4
 8176 0038 0321     		mov	r1, #3
 8177 003a FFF7FEFF 		bl	I2C_Disable_IRQ
 8178              	.LVL692:
3970:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if((hi2c->ErrorCode != HAL_I2C_ERROR_NONE) || (hi2c->State == HAL_I2C_STATE_ABORT))
 8179              		.loc 1 3970 0
 8180 003e 636C     		ldr	r3, [r4, #68]
 8181 0040 002B     		cmp	r3, #0
 8182 0042 03D1     		bne	.L512
3970:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if((hi2c->ErrorCode != HAL_I2C_ERROR_NONE) || (hi2c->State == HAL_I2C_STATE_ABORT))
 8183              		.loc 1 3970 0 is_stmt 0 discriminator 1
 8184 0044 4123     		mov	r3, #65
 8185 0046 E35C     		ldrb	r3, [r4, r3]
 8186 0048 602B     		cmp	r3, #96
 8187 004a 04D1     		bne	.L513
 8188              	.L512:
3973:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_ITError(hi2c, hi2c->ErrorCode);
 8189              		.loc 1 3973 0 is_stmt 1
 8190 004c 616C     		ldr	r1, [r4, #68]
 8191 004e 201C     		mov	r0, r4
 8192 0050 FFF7FEFF 		bl	I2C_ITError
ARM GAS  /tmp/cchP46LN.s 			page 251


 8193              	.LVL693:
 8194 0054 38E0     		b	.L510
 8195              	.L513:
3976:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(hi2c->State == HAL_I2C_STATE_BUSY_TX)
 8196              		.loc 1 3976 0
 8197 0056 4123     		mov	r3, #65
 8198 0058 E35C     		ldrb	r3, [r4, r3]
 8199 005a 212B     		cmp	r3, #33
 8200 005c 18D1     		bne	.L515
3978:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 8201              		.loc 1 3978 0
 8202 005e 2022     		mov	r2, #32
 8203 0060 4123     		mov	r3, #65
 8204 0062 E254     		strb	r2, [r4, r3]
3980:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if (hi2c->Mode == HAL_I2C_MODE_MEM)
 8205              		.loc 1 3980 0
 8206 0064 4223     		mov	r3, #66
 8207 0066 E35C     		ldrb	r3, [r4, r3]
 8208 0068 402B     		cmp	r3, #64
 8209 006a 08D1     		bne	.L516
3982:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
 8210              		.loc 1 3982 0
 8211 006c 0023     		mov	r3, #0
 8212 006e 4222     		mov	r2, #66
 8213 0070 A354     		strb	r3, [r4, r2]
3985:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
 8214              		.loc 1 3985 0
 8215 0072 4022     		mov	r2, #64
 8216 0074 A354     		strb	r3, [r4, r2]
3988:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       HAL_I2C_MemTxCpltCallback(hi2c);
 8217              		.loc 1 3988 0
 8218 0076 201C     		mov	r0, r4
 8219 0078 FFF7FEFF 		bl	HAL_I2C_MemTxCpltCallback
 8220              	.LVL694:
 8221 007c 24E0     		b	.L510
 8222              	.L516:
3992:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
 8223              		.loc 1 3992 0
 8224 007e 0023     		mov	r3, #0
 8225 0080 4222     		mov	r2, #66
 8226 0082 A354     		strb	r3, [r4, r2]
3995:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
 8227              		.loc 1 3995 0
 8228 0084 4022     		mov	r2, #64
 8229 0086 A354     		strb	r3, [r4, r2]
3998:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       HAL_I2C_MasterTxCpltCallback(hi2c);
 8230              		.loc 1 3998 0
 8231 0088 201C     		mov	r0, r4
 8232 008a FFF7FEFF 		bl	HAL_I2C_MasterTxCpltCallback
 8233              	.LVL695:
 8234 008e 1BE0     		b	.L510
 8235              	.L515:
4002:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(hi2c->State == HAL_I2C_STATE_BUSY_RX)
 8236              		.loc 1 4002 0
 8237 0090 4123     		mov	r3, #65
 8238 0092 E35C     		ldrb	r3, [r4, r3]
 8239 0094 222B     		cmp	r3, #34
ARM GAS  /tmp/cchP46LN.s 			page 252


 8240 0096 17D1     		bne	.L510
4004:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 8241              		.loc 1 4004 0
 8242 0098 2022     		mov	r2, #32
 8243 009a 4123     		mov	r3, #65
 8244 009c E254     		strb	r2, [r4, r3]
4006:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if (hi2c->Mode == HAL_I2C_MODE_MEM)
 8245              		.loc 1 4006 0
 8246 009e 4223     		mov	r3, #66
 8247 00a0 E35C     		ldrb	r3, [r4, r3]
 8248 00a2 402B     		cmp	r3, #64
 8249 00a4 08D1     		bne	.L517
4008:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
 8250              		.loc 1 4008 0
 8251 00a6 0023     		mov	r3, #0
 8252 00a8 4222     		mov	r2, #66
 8253 00aa A354     		strb	r3, [r4, r2]
4011:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
 8254              		.loc 1 4011 0
 8255 00ac 4022     		mov	r2, #64
 8256 00ae A354     		strb	r3, [r4, r2]
4013:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       HAL_I2C_MemRxCpltCallback(hi2c);
 8257              		.loc 1 4013 0
 8258 00b0 201C     		mov	r0, r4
 8259 00b2 FFF7FEFF 		bl	HAL_I2C_MemRxCpltCallback
 8260              	.LVL696:
 8261 00b6 07E0     		b	.L510
 8262              	.L517:
4017:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
 8263              		.loc 1 4017 0
 8264 00b8 0023     		mov	r3, #0
 8265 00ba 4222     		mov	r2, #66
 8266 00bc A354     		strb	r3, [r4, r2]
4020:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
 8267              		.loc 1 4020 0
 8268 00be 4022     		mov	r2, #64
 8269 00c0 A354     		strb	r3, [r4, r2]
4022:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       HAL_I2C_MasterRxCpltCallback(hi2c);
 8270              		.loc 1 4022 0
 8271 00c2 201C     		mov	r0, r4
 8272 00c4 FFF7FEFF 		bl	HAL_I2C_MasterRxCpltCallback
 8273              	.LVL697:
 8274              	.L510:
4025:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 8275              		.loc 1 4025 0
 8276              		@ sp needed
 8277              	.LVL698:
 8278 00c8 10BD     		pop	{r4, pc}
 8279              	.L519:
 8280 00ca C046     		.align	2
 8281              	.L518:
 8282 00cc 00E800FE 		.word	-33495040
 8283 00d0 0000FFFF 		.word	-65536
 8284              		.cfi_endproc
 8285              	.LFE90:
 8287              		.section	.text.I2C_Master_ISR_IT,"ax",%progbits
 8288              		.align	2
ARM GAS  /tmp/cchP46LN.s 			page 253


 8289              		.code	16
 8290              		.thumb_func
 8292              	I2C_Master_ISR_IT:
 8293              	.LFB81:
3264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 8294              		.loc 1 3264 0
 8295              		.cfi_startproc
 8296              	.LVL699:
 8297 0000 70B5     		push	{r4, r5, r6, lr}
 8298              	.LCFI85:
 8299              		.cfi_def_cfa_offset 16
 8300              		.cfi_offset 4, -16
 8301              		.cfi_offset 5, -12
 8302              		.cfi_offset 6, -8
 8303              		.cfi_offset 14, -4
 8304 0002 82B0     		sub	sp, sp, #8
 8305              	.LCFI86:
 8306              		.cfi_def_cfa_offset 24
 8307 0004 041C     		mov	r4, r0
 8308 0006 0D1C     		mov	r5, r1
 8309 0008 161C     		mov	r6, r2
 8310              	.LVL700:
3268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 8311              		.loc 1 3268 0
 8312 000a 4023     		mov	r3, #64
 8313 000c C35C     		ldrb	r3, [r0, r3]
 8314 000e 012B     		cmp	r3, #1
 8315 0010 00D1     		bne	.LCB8334
 8316 0012 A3E0     		b	.L534	@long jump
 8317              	.LCB8334:
3268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 8318              		.loc 1 3268 0 is_stmt 0 discriminator 2
 8319 0014 0122     		mov	r2, #1
 8320              	.LVL701:
 8321 0016 4023     		mov	r3, #64
 8322 0018 C254     		strb	r2, [r0, r3]
3270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_AF) != RESET) && ((ITSources & I2C_IT_NACKI) != RESET))
 8323              		.loc 1 3270 0 is_stmt 1 discriminator 2
 8324 001a E906     		lsl	r1, r5, #27
 8325 001c 0BD5     		bpl	.L522
 8326              	.LVL702:
3270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_AF) != RESET) && ((ITSources & I2C_IT_NACKI) != RESET))
 8327              		.loc 1 3270 0 is_stmt 0 discriminator 1
 8328 001e F206     		lsl	r2, r6, #27
 8329 0020 09D5     		bpl	.L522
3273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8330              		.loc 1 3273 0 is_stmt 1
 8331 0022 0368     		ldr	r3, [r0]
 8332 0024 1022     		mov	r2, #16
 8333 0026 DA61     		str	r2, [r3, #28]
3278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 8334              		.loc 1 3278 0
 8335 0028 426C     		ldr	r2, [r0, #68]
 8336 002a 0423     		mov	r3, #4
 8337 002c 1343     		orr	r3, r2
 8338 002e 4364     		str	r3, [r0, #68]
3281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
ARM GAS  /tmp/cchP46LN.s 			page 254


 8339              		.loc 1 3281 0
 8340 0030 FFF7FEFF 		bl	I2C_Flush_TXDR
 8341              	.LVL703:
 8342 0034 85E0     		b	.L523
 8343              	.LVL704:
 8344              	.L522:
3283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_RXNE) != RESET) && ((ITSources & I2C_IT_RXI) != RESET))
 8345              		.loc 1 3283 0
 8346 0036 6B07     		lsl	r3, r5, #29
 8347 0038 0FD5     		bpl	.L524
3283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_RXNE) != RESET) && ((ITSources & I2C_IT_RXI) != RESET))
 8348              		.loc 1 3283 0 is_stmt 0 discriminator 1
 8349 003a 7107     		lsl	r1, r6, #29
 8350 003c 0DD5     		bpl	.L524
3286:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
 8351              		.loc 1 3286 0 is_stmt 1
 8352 003e 636A     		ldr	r3, [r4, #36]
 8353 0040 5A1C     		add	r2, r3, #1
 8354 0042 6262     		str	r2, [r4, #36]
 8355 0044 2268     		ldr	r2, [r4]
 8356 0046 526A     		ldr	r2, [r2, #36]
 8357 0048 1A70     		strb	r2, [r3]
3287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferSize--;
 8358              		.loc 1 3287 0
 8359 004a 238D     		ldrh	r3, [r4, #40]
 8360 004c 013B     		sub	r3, r3, #1
 8361 004e 2385     		strh	r3, [r4, #40]
3288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount--;
 8362              		.loc 1 3288 0
 8363 0050 638D     		ldrh	r3, [r4, #42]
 8364 0052 013B     		sub	r3, r3, #1
 8365 0054 9BB2     		uxth	r3, r3
 8366 0056 6385     		strh	r3, [r4, #42]
 8367 0058 73E0     		b	.L523
 8368              	.L524:
3290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_TXIS) != RESET) && ((ITSources & I2C_IT_TXI) != RESET))
 8369              		.loc 1 3290 0
 8370 005a AA07     		lsl	r2, r5, #30
 8371 005c 0FD5     		bpl	.L525
3290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_TXIS) != RESET) && ((ITSources & I2C_IT_TXI) != RESET))
 8372              		.loc 1 3290 0 is_stmt 0 discriminator 1
 8373 005e B307     		lsl	r3, r6, #30
 8374 0060 0DD5     		bpl	.L525
3293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->Instance->TXDR = (*hi2c->pBuffPtr++);
 8375              		.loc 1 3293 0 is_stmt 1
 8376 0062 2268     		ldr	r2, [r4]
 8377 0064 636A     		ldr	r3, [r4, #36]
 8378 0066 591C     		add	r1, r3, #1
 8379 0068 6162     		str	r1, [r4, #36]
 8380 006a 1B78     		ldrb	r3, [r3]
 8381 006c 9362     		str	r3, [r2, #40]
3294:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferSize--;
 8382              		.loc 1 3294 0
 8383 006e 238D     		ldrh	r3, [r4, #40]
 8384 0070 013B     		sub	r3, r3, #1
 8385 0072 2385     		strh	r3, [r4, #40]
3295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->XferCount--;	
ARM GAS  /tmp/cchP46LN.s 			page 255


 8386              		.loc 1 3295 0
 8387 0074 638D     		ldrh	r3, [r4, #42]
 8388 0076 013B     		sub	r3, r3, #1
 8389 0078 9BB2     		uxth	r3, r3
 8390 007a 6385     		strh	r3, [r4, #42]
 8391 007c 61E0     		b	.L523
 8392              	.L525:
3297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_TCR) != RESET) && ((ITSources & I2C_IT_TCI) != RESET))
 8393              		.loc 1 3297 0
 8394 007e 2906     		lsl	r1, r5, #24
 8395 0080 41D5     		bpl	.L526
3297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_TCR) != RESET) && ((ITSources & I2C_IT_TCI) != RESET))
 8396              		.loc 1 3297 0 is_stmt 0 discriminator 1
 8397 0082 7206     		lsl	r2, r6, #25
 8398 0084 3FD5     		bpl	.L526
3299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((hi2c->XferSize == 0U) && (hi2c->XferCount != 0U))
 8399              		.loc 1 3299 0 is_stmt 1
 8400 0086 238D     		ldrh	r3, [r4, #40]
 8401 0088 002B     		cmp	r3, #0
 8402 008a 2FD1     		bne	.L527
3299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if((hi2c->XferSize == 0U) && (hi2c->XferCount != 0U))
 8403              		.loc 1 3299 0 is_stmt 0 discriminator 1
 8404 008c 638D     		ldrh	r3, [r4, #42]
 8405 008e 9BB2     		uxth	r3, r3
 8406 0090 002B     		cmp	r3, #0
 8407 0092 2BD0     		beq	.L527
3301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       devaddress = (hi2c->Instance->CR2 & I2C_CR2_SADD);
 8408              		.loc 1 3301 0 is_stmt 1
 8409 0094 2368     		ldr	r3, [r4]
 8410 0096 5968     		ldr	r1, [r3, #4]
 8411 0098 8905     		lsl	r1, r1, #22
 8412 009a 890D     		lsr	r1, r1, #22
 8413              	.LVL705:
3303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(hi2c->XferCount > MAX_NBYTE_SIZE)
 8414              		.loc 1 3303 0
 8415 009c 638D     		ldrh	r3, [r4, #42]
 8416 009e 9BB2     		uxth	r3, r3
 8417 00a0 FF2B     		cmp	r3, #255
 8418 00a2 0AD9     		bls	.L528
3305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         hi2c->XferSize = MAX_NBYTE_SIZE;
 8419              		.loc 1 3305 0
 8420 00a4 FF23     		mov	r3, #255
 8421 00a6 2385     		strh	r3, [r4, #40]
3306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, devaddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 8422              		.loc 1 3306 0
 8423 00a8 0023     		mov	r3, #0
 8424 00aa 0093     		str	r3, [sp]
 8425 00ac 201C     		mov	r0, r4
 8426              	.LVL706:
 8427 00ae FF22     		mov	r2, #255
 8428 00b0 8023     		mov	r3, #128
 8429 00b2 5B04     		lsl	r3, r3, #17
 8430 00b4 FFF7FEFF 		bl	I2C_TransferConfig
 8431              	.LVL707:
 8432 00b8 43E0     		b	.L523
 8433              	.LVL708:
 8434              	.L528:
ARM GAS  /tmp/cchP46LN.s 			page 256


3310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         hi2c->XferSize = hi2c->XferCount;
 8435              		.loc 1 3310 0
 8436 00ba 638D     		ldrh	r3, [r4, #42]
 8437 00bc 2385     		strh	r3, [r4, #40]
3311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         if(hi2c->XferOptions != I2C_NO_OPTION_FRAME)
 8438              		.loc 1 3311 0
 8439 00be E26A     		ldr	r2, [r4, #44]
 8440 00c0 284B     		ldr	r3, .L535
 8441 00c2 9A42     		cmp	r2, r3
 8442 00c4 08D0     		beq	.L529
3313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, devaddress, hi2c->XferSize, hi2c->XferOptions, I2C_NO_STARTSTOP)
 8443              		.loc 1 3313 0
 8444 00c6 228D     		ldrh	r2, [r4, #40]
 8445 00c8 E36A     		ldr	r3, [r4, #44]
 8446 00ca D2B2     		uxtb	r2, r2
 8447 00cc 0020     		mov	r0, #0
 8448              	.LVL709:
 8449 00ce 0090     		str	r0, [sp]
 8450 00d0 201C     		mov	r0, r4
 8451 00d2 FFF7FEFF 		bl	I2C_TransferConfig
 8452              	.LVL710:
 8453 00d6 34E0     		b	.L523
 8454              	.LVL711:
 8455              	.L529:
3317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, devaddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8456              		.loc 1 3317 0
 8457 00d8 228D     		ldrh	r2, [r4, #40]
 8458 00da D2B2     		uxtb	r2, r2
 8459 00dc 0023     		mov	r3, #0
 8460 00de 0093     		str	r3, [sp]
 8461 00e0 201C     		mov	r0, r4
 8462              	.LVL712:
 8463 00e2 8023     		mov	r3, #128
 8464 00e4 9B04     		lsl	r3, r3, #18
 8465 00e6 FFF7FEFF 		bl	I2C_TransferConfig
 8466              	.LVL713:
 8467 00ea 2AE0     		b	.L523
 8468              	.LVL714:
 8469              	.L527:
3324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
 8470              		.loc 1 3324 0
 8471 00ec 2368     		ldr	r3, [r4]
 8472 00ee 5B68     		ldr	r3, [r3, #4]
 8473 00f0 9901     		lsl	r1, r3, #6
 8474 00f2 03D4     		bmi	.L530
3327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         I2C_ITMasterSequentialCplt(hi2c);
 8475              		.loc 1 3327 0
 8476 00f4 201C     		mov	r0, r4
 8477              	.LVL715:
 8478 00f6 FFF7FEFF 		bl	I2C_ITMasterSequentialCplt
 8479              	.LVL716:
 8480 00fa 22E0     		b	.L523
 8481              	.LVL717:
 8482              	.L530:
3333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
 8483              		.loc 1 3333 0
 8484 00fc 201C     		mov	r0, r4
ARM GAS  /tmp/cchP46LN.s 			page 257


 8485              	.LVL718:
 8486 00fe 4021     		mov	r1, #64
 8487 0100 FFF7FEFF 		bl	I2C_ITError
 8488              	.LVL719:
 8489 0104 1DE0     		b	.L523
 8490              	.LVL720:
 8491              	.L526:
3337:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_TC) != RESET) && ((ITSources & I2C_IT_TCI) != RESET))
 8492              		.loc 1 3337 0
 8493 0106 6A06     		lsl	r2, r5, #25
 8494 0108 1BD5     		bpl	.L523
3337:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_TC) != RESET) && ((ITSources & I2C_IT_TCI) != RESET))
 8495              		.loc 1 3337 0 is_stmt 0 discriminator 1
 8496 010a 7306     		lsl	r3, r6, #25
 8497 010c 19D5     		bpl	.L523
3339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount == 0U)
 8498              		.loc 1 3339 0 is_stmt 1
 8499 010e 638D     		ldrh	r3, [r4, #42]
 8500 0110 9BB2     		uxth	r3, r3
 8501 0112 002B     		cmp	r3, #0
 8502 0114 11D1     		bne	.L531
3341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
 8503              		.loc 1 3341 0
 8504 0116 2368     		ldr	r3, [r4]
 8505 0118 5A68     		ldr	r2, [r3, #4]
 8506 011a 9101     		lsl	r1, r2, #6
 8507 011c 11D4     		bmi	.L523
3344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         if(hi2c->XferOptions == I2C_NO_OPTION_FRAME)
 8508              		.loc 1 3344 0
 8509 011e E16A     		ldr	r1, [r4, #44]
 8510 0120 104A     		ldr	r2, .L535
 8511 0122 9142     		cmp	r1, r2
 8512 0124 05D1     		bne	.L532
3347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           hi2c->Instance->CR2 |= I2C_CR2_STOP;
 8513              		.loc 1 3347 0
 8514 0126 5968     		ldr	r1, [r3, #4]
 8515 0128 8022     		mov	r2, #128
 8516 012a D201     		lsl	r2, r2, #7
 8517 012c 0A43     		orr	r2, r1
 8518 012e 5A60     		str	r2, [r3, #4]
 8519 0130 07E0     		b	.L523
 8520              	.L532:
3352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****           I2C_ITMasterSequentialCplt(hi2c);
 8521              		.loc 1 3352 0
 8522 0132 201C     		mov	r0, r4
 8523              	.LVL721:
 8524 0134 FFF7FEFF 		bl	I2C_ITMasterSequentialCplt
 8525              	.LVL722:
 8526 0138 03E0     		b	.L523
 8527              	.LVL723:
 8528              	.L531:
3360:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
 8529              		.loc 1 3360 0
 8530 013a 201C     		mov	r0, r4
 8531              	.LVL724:
 8532 013c 4021     		mov	r1, #64
 8533 013e FFF7FEFF 		bl	I2C_ITError
ARM GAS  /tmp/cchP46LN.s 			page 258


 8534              	.LVL725:
 8535              	.L523:
3364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_STOPF) != RESET) && ((ITSources & I2C_IT_STOPI) != RESET))
 8536              		.loc 1 3364 0
 8537 0142 AA06     		lsl	r2, r5, #26
 8538 0144 05D5     		bpl	.L533
3364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_STOPF) != RESET) && ((ITSources & I2C_IT_STOPI) != RESET))
 8539              		.loc 1 3364 0 is_stmt 0 discriminator 1
 8540 0146 B306     		lsl	r3, r6, #26
 8541 0148 03D5     		bpl	.L533
3367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_ITMasterCplt(hi2c, ITFlags);
 8542              		.loc 1 3367 0 is_stmt 1
 8543 014a 201C     		mov	r0, r4
 8544 014c 291C     		mov	r1, r5
 8545 014e FFF7FEFF 		bl	I2C_ITMasterCplt
 8546              	.LVL726:
 8547              	.L533:
3371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 8548              		.loc 1 3371 0
 8549 0152 0022     		mov	r2, #0
 8550 0154 4023     		mov	r3, #64
 8551 0156 E254     		strb	r2, [r4, r3]
3373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   return HAL_OK;
 8552              		.loc 1 3373 0
 8553 0158 0020     		mov	r0, #0
 8554 015a 00E0     		b	.L521
 8555              	.LVL727:
 8556              	.L534:
3268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 8557              		.loc 1 3268 0
 8558 015c 0220     		mov	r0, #2
 8559              	.LVL728:
 8560              	.L521:
3374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 8561              		.loc 1 3374 0
 8562 015e 02B0     		add	sp, sp, #8
 8563              		@ sp needed
 8564              	.LVL729:
 8565              	.LVL730:
 8566              	.LVL731:
 8567 0160 70BD     		pop	{r4, r5, r6, pc}
 8568              	.L536:
 8569 0162 C046     		.align	2
 8570              	.L535:
 8571 0164 0000FFFF 		.word	-65536
 8572              		.cfi_endproc
 8573              	.LFE81:
 8575              		.section	.text.I2C_Master_ISR_DMA,"ax",%progbits
 8576              		.align	2
 8577              		.code	16
 8578              		.thumb_func
 8580              	I2C_Master_ISR_DMA:
 8581              	.LFB83:
3498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 8582              		.loc 1 3498 0
 8583              		.cfi_startproc
 8584              	.LVL732:
ARM GAS  /tmp/cchP46LN.s 			page 259


 8585 0000 10B5     		push	{r4, lr}
 8586              	.LCFI87:
 8587              		.cfi_def_cfa_offset 8
 8588              		.cfi_offset 4, -8
 8589              		.cfi_offset 14, -4
 8590 0002 82B0     		sub	sp, sp, #8
 8591              	.LCFI88:
 8592              		.cfi_def_cfa_offset 16
 8593 0004 041C     		mov	r4, r0
 8594              	.LVL733:
3503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 8595              		.loc 1 3503 0
 8596 0006 4023     		mov	r3, #64
 8597 0008 C35C     		ldrb	r3, [r0, r3]
 8598 000a 012B     		cmp	r3, #1
 8599 000c 62D0     		beq	.L546
3503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 8600              		.loc 1 3503 0 is_stmt 0 discriminator 2
 8601 000e 0120     		mov	r0, #1
 8602              	.LVL734:
 8603 0010 4023     		mov	r3, #64
 8604 0012 E054     		strb	r0, [r4, r3]
3505:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_AF) != RESET) && ((ITSources & I2C_IT_NACKI) != RESET))
 8605              		.loc 1 3505 0 is_stmt 1 discriminator 2
 8606 0014 CB06     		lsl	r3, r1, #27
 8607 0016 10D5     		bpl	.L539
3505:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_AF) != RESET) && ((ITSources & I2C_IT_NACKI) != RESET))
 8608              		.loc 1 3505 0 is_stmt 0 discriminator 1
 8609 0018 D306     		lsl	r3, r2, #27
 8610 001a 0ED5     		bpl	.L539
3508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8611              		.loc 1 3508 0 is_stmt 1
 8612 001c 2368     		ldr	r3, [r4]
 8613 001e 1022     		mov	r2, #16
 8614              	.LVL735:
 8615 0020 DA61     		str	r2, [r3, #28]
3511:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 8616              		.loc 1 3511 0
 8617 0022 626C     		ldr	r2, [r4, #68]
 8618 0024 0423     		mov	r3, #4
 8619 0026 1343     		orr	r3, r2
 8620 0028 6364     		str	r3, [r4, #68]
3516:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
 8621              		.loc 1 3516 0
 8622 002a 201C     		mov	r0, r4
 8623 002c 1221     		mov	r1, #18
 8624              	.LVL736:
 8625 002e FFF7FEFF 		bl	I2C_Enable_IRQ
 8626              	.LVL737:
3519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
 8627              		.loc 1 3519 0
 8628 0032 201C     		mov	r0, r4
 8629 0034 FFF7FEFF 		bl	I2C_Flush_TXDR
 8630              	.LVL738:
 8631 0038 47E0     		b	.L540
 8632              	.LVL739:
 8633              	.L539:
ARM GAS  /tmp/cchP46LN.s 			page 260


3521:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_TCR) != RESET) && ((ITSources & I2C_IT_TCI) != RESET))
 8634              		.loc 1 3521 0
 8635 003a 0B06     		lsl	r3, r1, #24
 8636 003c 3ED5     		bpl	.L541
3521:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_TCR) != RESET) && ((ITSources & I2C_IT_TCI) != RESET))
 8637              		.loc 1 3521 0 is_stmt 0 discriminator 1
 8638 003e 5306     		lsl	r3, r2, #25
 8639 0040 3CD5     		bpl	.L541
3524:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_TCI);
 8640              		.loc 1 3524 0 is_stmt 1
 8641 0042 2368     		ldr	r3, [r4]
 8642 0044 1A68     		ldr	r2, [r3]
 8643              	.LVL740:
 8644 0046 4021     		mov	r1, #64
 8645              	.LVL741:
 8646 0048 8A43     		bic	r2, r1
 8647 004a 1A60     		str	r2, [r3]
3526:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     if(hi2c->XferCount != 0U)
 8648              		.loc 1 3526 0
 8649 004c 638D     		ldrh	r3, [r4, #42]
 8650 004e 9BB2     		uxth	r3, r3
 8651 0050 002B     		cmp	r3, #0
 8652 0052 2ED0     		beq	.L542
3529:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       devaddress = (hi2c->Instance->CR2 & I2C_CR2_SADD);
 8653              		.loc 1 3529 0
 8654 0054 2368     		ldr	r3, [r4]
 8655 0056 5968     		ldr	r1, [r3, #4]
 8656 0058 8905     		lsl	r1, r1, #22
 8657 005a 890D     		lsr	r1, r1, #22
 8658              	.LVL742:
3532:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(hi2c->XferCount > MAX_NBYTE_SIZE)
 8659              		.loc 1 3532 0
 8660 005c 638D     		ldrh	r3, [r4, #42]
 8661 005e 9BB2     		uxth	r3, r3
 8662 0060 FF2B     		cmp	r3, #255
 8663 0062 04D9     		bls	.L543
3534:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         hi2c->XferSize = MAX_NBYTE_SIZE;
 8664              		.loc 1 3534 0
 8665 0064 FF23     		mov	r3, #255
 8666 0066 2385     		strh	r3, [r4, #40]
 8667              	.LVL743:
3535:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         xfermode = I2C_RELOAD_MODE;
 8668              		.loc 1 3535 0
 8669 0068 8023     		mov	r3, #128
 8670 006a 5B04     		lsl	r3, r3, #17
 8671 006c 03E0     		b	.L544
 8672              	.LVL744:
 8673              	.L543:
3539:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         hi2c->XferSize = hi2c->XferCount;
 8674              		.loc 1 3539 0
 8675 006e 638D     		ldrh	r3, [r4, #42]
 8676 0070 2385     		strh	r3, [r4, #40]
 8677              	.LVL745:
3540:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         xfermode = I2C_AUTOEND_MODE;
 8678              		.loc 1 3540 0
 8679 0072 8023     		mov	r3, #128
 8680 0074 9B04     		lsl	r3, r3, #18
ARM GAS  /tmp/cchP46LN.s 			page 261


 8681              	.LVL746:
 8682              	.L544:
3544:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, devaddress, hi2c->XferSize, xfermode, I2C_NO_STARTSTOP);
 8683              		.loc 1 3544 0
 8684 0076 228D     		ldrh	r2, [r4, #40]
 8685 0078 D2B2     		uxtb	r2, r2
 8686 007a 0020     		mov	r0, #0
 8687 007c 0090     		str	r0, [sp]
 8688 007e 201C     		mov	r0, r4
 8689 0080 FFF7FEFF 		bl	I2C_TransferConfig
 8690              	.LVL747:
3547:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
 8691              		.loc 1 3547 0
 8692 0084 628D     		ldrh	r2, [r4, #42]
 8693 0086 238D     		ldrh	r3, [r4, #40]
 8694 0088 D31A     		sub	r3, r2, r3
 8695 008a 9BB2     		uxth	r3, r3
 8696 008c 6385     		strh	r3, [r4, #42]
3550:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       if(hi2c->State == HAL_I2C_STATE_BUSY_RX)
 8697              		.loc 1 3550 0
 8698 008e 4123     		mov	r3, #65
 8699 0090 E35C     		ldrb	r3, [r4, r3]
 8700 0092 222B     		cmp	r3, #34
 8701 0094 06D1     		bne	.L545
3552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
 8702              		.loc 1 3552 0
 8703 0096 2368     		ldr	r3, [r4]
 8704 0098 1968     		ldr	r1, [r3]
 8705 009a 8022     		mov	r2, #128
 8706 009c 1202     		lsl	r2, r2, #8
 8707 009e 0A43     		orr	r2, r1
 8708 00a0 1A60     		str	r2, [r3]
 8709 00a2 12E0     		b	.L540
 8710              	.L545:
3556:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
 8711              		.loc 1 3556 0
 8712 00a4 2368     		ldr	r3, [r4]
 8713 00a6 1968     		ldr	r1, [r3]
 8714 00a8 8022     		mov	r2, #128
 8715 00aa D201     		lsl	r2, r2, #7
 8716 00ac 0A43     		orr	r2, r1
 8717 00ae 1A60     		str	r2, [r3]
 8718 00b0 0BE0     		b	.L540
 8719              	.LVL748:
 8720              	.L542:
3563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
 8721              		.loc 1 3563 0
 8722 00b2 201C     		mov	r0, r4
 8723 00b4 4021     		mov	r1, #64
 8724 00b6 FFF7FEFF 		bl	I2C_ITError
 8725              	.LVL749:
 8726 00ba 06E0     		b	.L540
 8727              	.LVL750:
 8728              	.L541:
3566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_STOPF) != RESET) && ((ITSources & I2C_IT_STOPI) != RESET))
 8729              		.loc 1 3566 0
 8730 00bc 8B06     		lsl	r3, r1, #26
ARM GAS  /tmp/cchP46LN.s 			page 262


 8731 00be 04D5     		bpl	.L540
3566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_STOPF) != RESET) && ((ITSources & I2C_IT_STOPI) != RESET))
 8732              		.loc 1 3566 0 is_stmt 0 discriminator 1
 8733 00c0 9306     		lsl	r3, r2, #26
 8734 00c2 02D5     		bpl	.L540
3569:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_ITMasterCplt(hi2c, ITFlags);
 8735              		.loc 1 3569 0 is_stmt 1
 8736 00c4 201C     		mov	r0, r4
 8737 00c6 FFF7FEFF 		bl	I2C_ITMasterCplt
 8738              	.LVL751:
 8739              	.L540:
3573:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 8740              		.loc 1 3573 0
 8741 00ca 0022     		mov	r2, #0
 8742 00cc 4023     		mov	r3, #64
 8743 00ce E254     		strb	r2, [r4, r3]
3575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   return HAL_OK;
 8744              		.loc 1 3575 0
 8745 00d0 0020     		mov	r0, #0
 8746 00d2 00E0     		b	.L538
 8747              	.LVL752:
 8748              	.L546:
3503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 8749              		.loc 1 3503 0
 8750 00d4 0220     		mov	r0, #2
 8751              	.LVL753:
 8752              	.L538:
3576:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 8753              		.loc 1 3576 0
 8754 00d6 02B0     		add	sp, sp, #8
 8755              		@ sp needed
 8756              	.LVL754:
 8757 00d8 10BD     		pop	{r4, pc}
 8758              		.cfi_endproc
 8759              	.LFE83:
 8761 00da C046     		.section	.text.I2C_DMAError,"ax",%progbits
 8762              		.align	2
 8763              		.code	16
 8764              		.thumb_func
 8766              	I2C_DMAError:
 8767              	.LFB99:
4421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 8768              		.loc 1 4421 0
 8769              		.cfi_startproc
 8770              	.LVL755:
 8771 0000 08B5     		push	{r3, lr}
 8772              	.LCFI89:
 8773              		.cfi_def_cfa_offset 8
 8774              		.cfi_offset 3, -8
 8775              		.cfi_offset 14, -4
4422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   I2C_HandleTypeDef* hi2c = ( I2C_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 8776              		.loc 1 4422 0
 8777 0002 806A     		ldr	r0, [r0, #40]
 8778              	.LVL756:
4425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->Instance->CR2 |= I2C_CR2_NACK;
 8779              		.loc 1 4425 0
 8780 0004 0368     		ldr	r3, [r0]
ARM GAS  /tmp/cchP46LN.s 			page 263


 8781 0006 5968     		ldr	r1, [r3, #4]
 8782 0008 8022     		mov	r2, #128
 8783 000a 1202     		lsl	r2, r2, #8
 8784 000c 0A43     		orr	r2, r1
 8785 000e 5A60     		str	r2, [r3, #4]
4428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   I2C_ITError(hi2c, HAL_I2C_ERROR_DMA);
 8786              		.loc 1 4428 0
 8787 0010 1021     		mov	r1, #16
 8788 0012 FFF7FEFF 		bl	I2C_ITError
 8789              	.LVL757:
4429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 8790              		.loc 1 4429 0
 8791              		@ sp needed
 8792 0016 08BD     		pop	{r3, pc}
 8793              		.cfi_endproc
 8794              	.LFE99:
 8796              		.section	.text.HAL_I2C_ER_IRQHandler,"ax",%progbits
 8797              		.align	2
 8798              		.global	HAL_I2C_ER_IRQHandler
 8799              		.code	16
 8800              		.thumb_func
 8802              	HAL_I2C_ER_IRQHandler:
 8803              	.LFB67:
2989:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 8804              		.loc 1 2989 0
 8805              		.cfi_startproc
 8806              	.LVL758:
 8807 0000 38B5     		push	{r3, r4, r5, lr}
 8808              	.LCFI90:
 8809              		.cfi_def_cfa_offset 16
 8810              		.cfi_offset 3, -16
 8811              		.cfi_offset 4, -12
 8812              		.cfi_offset 5, -8
 8813              		.cfi_offset 14, -4
2990:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint32_t itflags   = READ_REG(hi2c->Instance->ISR);
 8814              		.loc 1 2990 0
 8815 0002 0268     		ldr	r2, [r0]
 8816 0004 9369     		ldr	r3, [r2, #24]
 8817              	.LVL759:
2991:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
 8818              		.loc 1 2991 0
 8819 0006 1168     		ldr	r1, [r2]
 8820              	.LVL760:
2994:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(((itflags & I2C_FLAG_BERR) != RESET) && ((itsources & I2C_IT_ERRI) != RESET))
 8821              		.loc 1 2994 0
 8822 0008 DC05     		lsl	r4, r3, #23
 8823 000a 08D5     		bpl	.L549
2994:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(((itflags & I2C_FLAG_BERR) != RESET) && ((itsources & I2C_IT_ERRI) != RESET))
 8824              		.loc 1 2994 0 is_stmt 0 discriminator 1
 8825 000c 0C06     		lsl	r4, r1, #24
 8826 000e 06D5     		bpl	.L549
2996:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_BERR;
 8827              		.loc 1 2996 0 is_stmt 1
 8828 0010 456C     		ldr	r5, [r0, #68]
 8829 0012 0124     		mov	r4, #1
 8830 0014 2C43     		orr	r4, r5
 8831 0016 4464     		str	r4, [r0, #68]
ARM GAS  /tmp/cchP46LN.s 			page 264


2999:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 8832              		.loc 1 2999 0
 8833 0018 8024     		mov	r4, #128
 8834 001a 6400     		lsl	r4, r4, #1
 8835 001c D461     		str	r4, [r2, #28]
 8836              	.L549:
3003:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(((itflags & I2C_FLAG_OVR) != RESET) && ((itsources & I2C_IT_ERRI) != RESET))
 8837              		.loc 1 3003 0
 8838 001e 5A05     		lsl	r2, r3, #21
 8839 0020 09D5     		bpl	.L550
3003:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(((itflags & I2C_FLAG_OVR) != RESET) && ((itsources & I2C_IT_ERRI) != RESET))
 8840              		.loc 1 3003 0 is_stmt 0 discriminator 1
 8841 0022 0C06     		lsl	r4, r1, #24
 8842 0024 07D5     		bpl	.L550
3005:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_OVR;
 8843              		.loc 1 3005 0 is_stmt 1
 8844 0026 446C     		ldr	r4, [r0, #68]
 8845 0028 0822     		mov	r2, #8
 8846 002a 2243     		orr	r2, r4
 8847 002c 4264     		str	r2, [r0, #68]
3008:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 8848              		.loc 1 3008 0
 8849 002e 0268     		ldr	r2, [r0]
 8850 0030 8024     		mov	r4, #128
 8851 0032 E400     		lsl	r4, r4, #3
 8852 0034 D461     		str	r4, [r2, #28]
 8853              	.L550:
3012:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(((itflags & I2C_FLAG_ARLO) != RESET) && ((itsources & I2C_IT_ERRI) != RESET))
 8854              		.loc 1 3012 0
 8855 0036 9A05     		lsl	r2, r3, #22
 8856 0038 09D5     		bpl	.L551
3012:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(((itflags & I2C_FLAG_ARLO) != RESET) && ((itsources & I2C_IT_ERRI) != RESET))
 8857              		.loc 1 3012 0 is_stmt 0 discriminator 1
 8858 003a 0B06     		lsl	r3, r1, #24
 8859 003c 07D5     		bpl	.L551
 8860              	.LVL761:
3014:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_ARLO;
 8861              		.loc 1 3014 0 is_stmt 1
 8862 003e 426C     		ldr	r2, [r0, #68]
 8863 0040 0223     		mov	r3, #2
 8864 0042 1343     		orr	r3, r2
 8865 0044 4364     		str	r3, [r0, #68]
3017:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 8866              		.loc 1 3017 0
 8867 0046 0368     		ldr	r3, [r0]
 8868 0048 8022     		mov	r2, #128
 8869 004a 9200     		lsl	r2, r2, #2
 8870 004c DA61     		str	r2, [r3, #28]
 8871              	.L551:
3021:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if((hi2c->ErrorCode & (HAL_I2C_ERROR_BERR | HAL_I2C_ERROR_OVR | HAL_I2C_ERROR_ARLO)) !=  HAL_I2C_
 8872              		.loc 1 3021 0
 8873 004e 436C     		ldr	r3, [r0, #68]
 8874 0050 0B22     		mov	r2, #11
 8875 0052 1A42     		tst	r2, r3
 8876 0054 02D0     		beq	.L548
3023:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     I2C_ITError(hi2c, hi2c->ErrorCode);
 8877              		.loc 1 3023 0
ARM GAS  /tmp/cchP46LN.s 			page 265


 8878 0056 416C     		ldr	r1, [r0, #68]
 8879              	.LVL762:
 8880 0058 FFF7FEFF 		bl	I2C_ITError
 8881              	.LVL763:
 8882              	.L548:
3025:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 8883              		.loc 1 3025 0
 8884              		@ sp needed
 8885 005c 38BD     		pop	{r3, r4, r5, pc}
 8886              		.cfi_endproc
 8887              	.LFE67:
 8889 005e C046     		.section	.text.I2C_DMAAbort,"ax",%progbits
 8890              		.align	2
 8891              		.code	16
 8892              		.thumb_func
 8894              	I2C_DMAAbort:
 8895              	.LFB100:
4438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 8896              		.loc 1 4438 0
 8897              		.cfi_startproc
 8898              	.LVL764:
 8899 0000 08B5     		push	{r3, lr}
 8900              	.LCFI91:
 8901              		.cfi_def_cfa_offset 8
 8902              		.cfi_offset 3, -8
 8903              		.cfi_offset 14, -4
4439:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   I2C_HandleTypeDef* hi2c = ( I2C_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 8904              		.loc 1 4439 0
 8905 0002 806A     		ldr	r0, [r0, #40]
 8906              	.LVL765:
4442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->Instance->CR2 |= I2C_CR2_NACK;
 8907              		.loc 1 4442 0
 8908 0004 0368     		ldr	r3, [r0]
 8909 0006 5968     		ldr	r1, [r3, #4]
 8910 0008 8022     		mov	r2, #128
 8911 000a 1202     		lsl	r2, r2, #8
 8912 000c 0A43     		orr	r2, r1
 8913 000e 5A60     		str	r2, [r3, #4]
4445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->hdmatx->XferAbortCallback = NULL;
 8914              		.loc 1 4445 0
 8915 0010 826B     		ldr	r2, [r0, #56]
 8916 0012 0023     		mov	r3, #0
 8917 0014 9363     		str	r3, [r2, #56]
4446:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   hi2c->hdmarx->XferAbortCallback = NULL;
 8918              		.loc 1 4446 0
 8919 0016 C26B     		ldr	r2, [r0, #60]
 8920 0018 9363     		str	r3, [r2, #56]
4449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_ABORT)
 8921              		.loc 1 4449 0
 8922 001a 4123     		mov	r3, #65
 8923 001c C35C     		ldrb	r3, [r0, r3]
 8924 001e 602B     		cmp	r3, #96
 8925 0020 05D1     		bne	.L554
4451:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 8926              		.loc 1 4451 0
 8927 0022 2022     		mov	r2, #32
 8928 0024 4123     		mov	r3, #65
ARM GAS  /tmp/cchP46LN.s 			page 266


 8929 0026 C254     		strb	r2, [r0, r3]
4454:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     HAL_I2C_AbortCpltCallback(hi2c);
 8930              		.loc 1 4454 0
 8931 0028 FFF7FEFF 		bl	HAL_I2C_AbortCpltCallback
 8932              	.LVL766:
 8933 002c 01E0     		b	.L553
 8934              	.LVL767:
 8935              	.L554:
4459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****     HAL_I2C_ErrorCallback(hi2c);
 8936              		.loc 1 4459 0
 8937 002e FFF7FEFF 		bl	HAL_I2C_ErrorCallback
 8938              	.LVL768:
 8939              	.L553:
4461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 8940              		.loc 1 4461 0
 8941              		@ sp needed
 8942 0032 08BD     		pop	{r3, pc}
 8943              		.cfi_endproc
 8944              	.LFE100:
 8946              		.section	.text.HAL_I2C_GetState,"ax",%progbits
 8947              		.align	2
 8948              		.global	HAL_I2C_GetState
 8949              		.code	16
 8950              		.thumb_func
 8952              	HAL_I2C_GetState:
 8953              	.LFB78:
3216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 8954              		.loc 1 3216 0
 8955              		.cfi_startproc
 8956              	.LVL769:
3218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   return hi2c->State;
 8957              		.loc 1 3218 0
 8958 0000 4123     		mov	r3, #65
 8959 0002 C05C     		ldrb	r0, [r0, r3]
 8960              	.LVL770:
 8961 0004 C0B2     		uxtb	r0, r0
3219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 8962              		.loc 1 3219 0
 8963              		@ sp needed
 8964 0006 7047     		bx	lr
 8965              		.cfi_endproc
 8966              	.LFE78:
 8968              		.section	.text.HAL_I2C_GetMode,"ax",%progbits
 8969              		.align	2
 8970              		.global	HAL_I2C_GetMode
 8971              		.code	16
 8972              		.thumb_func
 8974              	HAL_I2C_GetMode:
 8975              	.LFB79:
3228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 8976              		.loc 1 3228 0
 8977              		.cfi_startproc
 8978              	.LVL771:
3229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   return hi2c->Mode;
 8979              		.loc 1 3229 0
 8980 0000 4223     		mov	r3, #66
 8981 0002 C05C     		ldrb	r0, [r0, r3]
ARM GAS  /tmp/cchP46LN.s 			page 267


 8982              	.LVL772:
 8983 0004 C0B2     		uxtb	r0, r0
3230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 8984              		.loc 1 3230 0
 8985              		@ sp needed
 8986 0006 7047     		bx	lr
 8987              		.cfi_endproc
 8988              	.LFE79:
 8990              		.section	.text.HAL_I2C_GetError,"ax",%progbits
 8991              		.align	2
 8992              		.global	HAL_I2C_GetError
 8993              		.code	16
 8994              		.thumb_func
 8996              	HAL_I2C_GetError:
 8997              	.LFB80:
3239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** {
 8998              		.loc 1 3239 0
 8999              		.cfi_startproc
 9000              	.LVL773:
3240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c ****   return hi2c->ErrorCode;
 9001              		.loc 1 3240 0
 9002 0000 406C     		ldr	r0, [r0, #68]
 9003              	.LVL774:
3241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_i2c.c **** }
 9004              		.loc 1 3241 0
 9005              		@ sp needed
 9006 0002 7047     		bx	lr
 9007              		.cfi_endproc
 9008              	.LFE80:
 9010              		.text
 9011              	.Letext0:
 9012              		.file 2 "/home/niklas/Downloads/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/machine/_defaul
 9013              		.file 3 "/home/niklas/Downloads/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/stdint.h"
 9014              		.file 4 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l053xx.h"
 9015              		.file 5 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l0xx.h"
 9016              		.file 6 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 9017              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_dma.h"
 9018              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_i2c.h"
 9019              		.file 9 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
ARM GAS  /tmp/cchP46LN.s 			page 268


DEFINED SYMBOLS
                            *ABS*:00000000 stm32l0xx_hal_i2c.c
     /tmp/cchP46LN.s:18     .text.I2C_Flush_TXDR:00000000 $t
     /tmp/cchP46LN.s:22     .text.I2C_Flush_TXDR:00000000 I2C_Flush_TXDR
     /tmp/cchP46LN.s:55     .text.I2C_DMASlaveTransmitCplt:00000000 $t
     /tmp/cchP46LN.s:59     .text.I2C_DMASlaveTransmitCplt:00000000 I2C_DMASlaveTransmitCplt
     /tmp/cchP46LN.s:71     .text.I2C_DMASlaveReceiveCplt:00000000 $t
     /tmp/cchP46LN.s:75     .text.I2C_DMASlaveReceiveCplt:00000000 I2C_DMASlaveReceiveCplt
     /tmp/cchP46LN.s:87     .text.I2C_TransferConfig:00000000 $t
     /tmp/cchP46LN.s:91     .text.I2C_TransferConfig:00000000 I2C_TransferConfig
     /tmp/cchP46LN.s:133    .text.I2C_TransferConfig:00000020 $d
     /tmp/cchP46LN.s:138    .text.I2C_Enable_IRQ:00000000 $t
     /tmp/cchP46LN.s:142    .text.I2C_Enable_IRQ:00000000 I2C_Enable_IRQ
     /tmp/cchP46LN.s:251    .text.I2C_Enable_IRQ:0000006c $d
     /tmp/cchP46LN.s:8580   .text.I2C_Master_ISR_DMA:00000000 I2C_Master_ISR_DMA
     /tmp/cchP46LN.s:8004   .text.I2C_Slave_ISR_DMA:00000000 I2C_Slave_ISR_DMA
     /tmp/cchP46LN.s:257    .text.I2C_Disable_IRQ:00000000 $t
     /tmp/cchP46LN.s:261    .text.I2C_Disable_IRQ:00000000 I2C_Disable_IRQ
     /tmp/cchP46LN.s:375    .text.I2C_IsAcknowledgeFailed:00000000 $t
     /tmp/cchP46LN.s:379    .text.I2C_IsAcknowledgeFailed:00000000 I2C_IsAcknowledgeFailed
     /tmp/cchP46LN.s:494    .text.I2C_IsAcknowledgeFailed:00000080 $d
     /tmp/cchP46LN.s:499    .text.I2C_WaitOnTXISFlagUntilTimeout:00000000 $t
     /tmp/cchP46LN.s:503    .text.I2C_WaitOnTXISFlagUntilTimeout:00000000 I2C_WaitOnTXISFlagUntilTimeout
     /tmp/cchP46LN.s:587    .text.I2C_WaitOnFlagUntilTimeout:00000000 $t
     /tmp/cchP46LN.s:591    .text.I2C_WaitOnFlagUntilTimeout:00000000 I2C_WaitOnFlagUntilTimeout
     /tmp/cchP46LN.s:664    .text.I2C_RequestMemoryWrite:00000000 $t
     /tmp/cchP46LN.s:668    .text.I2C_RequestMemoryWrite:00000000 I2C_RequestMemoryWrite
     /tmp/cchP46LN.s:780    .text.I2C_RequestMemoryRead:00000000 $t
     /tmp/cchP46LN.s:784    .text.I2C_RequestMemoryRead:00000000 I2C_RequestMemoryRead
     /tmp/cchP46LN.s:895    .text.I2C_WaitOnSTOPFlagUntilTimeout:00000000 $t
     /tmp/cchP46LN.s:899    .text.I2C_WaitOnSTOPFlagUntilTimeout:00000000 I2C_WaitOnSTOPFlagUntilTimeout
     /tmp/cchP46LN.s:980    .text.I2C_WaitOnRXNEFlagUntilTimeout:00000000 $t
     /tmp/cchP46LN.s:984    .text.I2C_WaitOnRXNEFlagUntilTimeout:00000000 I2C_WaitOnRXNEFlagUntilTimeout
     /tmp/cchP46LN.s:1103   .text.I2C_WaitOnRXNEFlagUntilTimeout:00000088 $d
     /tmp/cchP46LN.s:1108   .text.I2C_DMAMasterTransmitCplt:00000000 $t
     /tmp/cchP46LN.s:1112   .text.I2C_DMAMasterTransmitCplt:00000000 I2C_DMAMasterTransmitCplt
     /tmp/cchP46LN.s:1185   .text.I2C_DMAMasterTransmitCplt:00000050 $d
     /tmp/cchP46LN.s:1190   .text.I2C_DMAMasterReceiveCplt:00000000 $t
     /tmp/cchP46LN.s:1194   .text.I2C_DMAMasterReceiveCplt:00000000 I2C_DMAMasterReceiveCplt
     /tmp/cchP46LN.s:1267   .text.I2C_DMAMasterReceiveCplt:00000050 $d
     /tmp/cchP46LN.s:1272   .text.HAL_I2C_MspInit:00000000 $t
     /tmp/cchP46LN.s:1277   .text.HAL_I2C_MspInit:00000000 HAL_I2C_MspInit
     /tmp/cchP46LN.s:1289   .text.HAL_I2C_Init:00000000 $t
     /tmp/cchP46LN.s:1294   .text.HAL_I2C_Init:00000000 HAL_I2C_Init
     /tmp/cchP46LN.s:1434   .text.HAL_I2C_Init:000000bc $d
     /tmp/cchP46LN.s:1441   .text.HAL_I2C_MspDeInit:00000000 $t
     /tmp/cchP46LN.s:1446   .text.HAL_I2C_MspDeInit:00000000 HAL_I2C_MspDeInit
     /tmp/cchP46LN.s:1458   .text.HAL_I2C_DeInit:00000000 $t
     /tmp/cchP46LN.s:1463   .text.HAL_I2C_DeInit:00000000 HAL_I2C_DeInit
     /tmp/cchP46LN.s:1521   .text.HAL_I2C_Master_Transmit:00000000 $t
     /tmp/cchP46LN.s:1526   .text.HAL_I2C_Master_Transmit:00000000 HAL_I2C_Master_Transmit
     /tmp/cchP46LN.s:1830   .text.HAL_I2C_Master_Transmit:00000190 $d
     /tmp/cchP46LN.s:1835   .text.HAL_I2C_Master_Receive:00000000 $t
     /tmp/cchP46LN.s:1840   .text.HAL_I2C_Master_Receive:00000000 HAL_I2C_Master_Receive
     /tmp/cchP46LN.s:2144   .text.HAL_I2C_Master_Receive:00000190 $d
     /tmp/cchP46LN.s:2149   .text.HAL_I2C_Slave_Transmit:00000000 $t
     /tmp/cchP46LN.s:2154   .text.HAL_I2C_Slave_Transmit:00000000 HAL_I2C_Slave_Transmit
ARM GAS  /tmp/cchP46LN.s 			page 269


     /tmp/cchP46LN.s:2469   .text.HAL_I2C_Slave_Transmit:000001a8 $d
     /tmp/cchP46LN.s:2474   .text.HAL_I2C_Slave_Receive:00000000 $t
     /tmp/cchP46LN.s:2479   .text.HAL_I2C_Slave_Receive:00000000 HAL_I2C_Slave_Receive
     /tmp/cchP46LN.s:2780   .text.HAL_I2C_Slave_Receive:00000190 $d
     /tmp/cchP46LN.s:2785   .text.HAL_I2C_Master_Transmit_IT:00000000 $t
     /tmp/cchP46LN.s:2790   .text.HAL_I2C_Master_Transmit_IT:00000000 HAL_I2C_Master_Transmit_IT
     /tmp/cchP46LN.s:2918   .text.HAL_I2C_Master_Transmit_IT:0000008c $d
     /tmp/cchP46LN.s:8292   .text.I2C_Master_ISR_IT:00000000 I2C_Master_ISR_IT
     /tmp/cchP46LN.s:2924   .text.HAL_I2C_Master_Receive_IT:00000000 $t
     /tmp/cchP46LN.s:2929   .text.HAL_I2C_Master_Receive_IT:00000000 HAL_I2C_Master_Receive_IT
     /tmp/cchP46LN.s:3057   .text.HAL_I2C_Master_Receive_IT:0000008c $d
     /tmp/cchP46LN.s:3063   .text.HAL_I2C_Slave_Transmit_IT:00000000 $t
     /tmp/cchP46LN.s:3068   .text.HAL_I2C_Slave_Transmit_IT:00000000 HAL_I2C_Slave_Transmit_IT
     /tmp/cchP46LN.s:3156   .text.HAL_I2C_Slave_Transmit_IT:00000058 $d
     /tmp/cchP46LN.s:7740   .text.I2C_Slave_ISR_IT:00000000 I2C_Slave_ISR_IT
     /tmp/cchP46LN.s:3163   .text.HAL_I2C_Slave_Receive_IT:00000000 $t
     /tmp/cchP46LN.s:3168   .text.HAL_I2C_Slave_Receive_IT:00000000 HAL_I2C_Slave_Receive_IT
     /tmp/cchP46LN.s:3256   .text.HAL_I2C_Slave_Receive_IT:00000058 $d
     /tmp/cchP46LN.s:3263   .text.HAL_I2C_Master_Transmit_DMA:00000000 $t
     /tmp/cchP46LN.s:3268   .text.HAL_I2C_Master_Transmit_DMA:00000000 HAL_I2C_Master_Transmit_DMA
     /tmp/cchP46LN.s:3474   .text.HAL_I2C_Master_Transmit_DMA:00000100 $d
     /tmp/cchP46LN.s:8766   .text.I2C_DMAError:00000000 I2C_DMAError
     /tmp/cchP46LN.s:3483   .text.HAL_I2C_Master_Receive_DMA:00000000 $t
     /tmp/cchP46LN.s:3488   .text.HAL_I2C_Master_Receive_DMA:00000000 HAL_I2C_Master_Receive_DMA
     /tmp/cchP46LN.s:3689   .text.HAL_I2C_Master_Receive_DMA:000000f8 $d
     /tmp/cchP46LN.s:3698   .text.HAL_I2C_Slave_Transmit_DMA:00000000 $t
     /tmp/cchP46LN.s:3703   .text.HAL_I2C_Slave_Transmit_DMA:00000000 HAL_I2C_Slave_Transmit_DMA
     /tmp/cchP46LN.s:3836   .text.HAL_I2C_Slave_Transmit_DMA:00000098 $d
     /tmp/cchP46LN.s:3845   .text.HAL_I2C_Slave_Receive_DMA:00000000 $t
     /tmp/cchP46LN.s:3850   .text.HAL_I2C_Slave_Receive_DMA:00000000 HAL_I2C_Slave_Receive_DMA
     /tmp/cchP46LN.s:3989   .text.HAL_I2C_Slave_Receive_DMA:0000009c $d
     /tmp/cchP46LN.s:3998   .text.HAL_I2C_Mem_Write:00000000 $t
     /tmp/cchP46LN.s:4003   .text.HAL_I2C_Mem_Write:00000000 HAL_I2C_Mem_Write
     /tmp/cchP46LN.s:4354   .text.HAL_I2C_Mem_Write:000001d8 $d
     /tmp/cchP46LN.s:4359   .text.HAL_I2C_Mem_Read:00000000 $t
     /tmp/cchP46LN.s:4364   .text.HAL_I2C_Mem_Read:00000000 HAL_I2C_Mem_Read
     /tmp/cchP46LN.s:4712   .text.HAL_I2C_Mem_Read:000001d8 $d
     /tmp/cchP46LN.s:4717   .text.HAL_I2C_Mem_Write_IT:00000000 $t
     /tmp/cchP46LN.s:4722   .text.HAL_I2C_Mem_Write_IT:00000000 HAL_I2C_Mem_Write_IT
     /tmp/cchP46LN.s:4922   .text.HAL_I2C_Mem_Write_IT:000000f0 $d
     /tmp/cchP46LN.s:4928   .text.HAL_I2C_Mem_Read_IT:00000000 $t
     /tmp/cchP46LN.s:4933   .text.HAL_I2C_Mem_Read_IT:00000000 HAL_I2C_Mem_Read_IT
     /tmp/cchP46LN.s:5135   .text.HAL_I2C_Mem_Read_IT:000000f4 $d
     /tmp/cchP46LN.s:5141   .text.HAL_I2C_Mem_Write_DMA:00000000 $t
     /tmp/cchP46LN.s:5146   .text.HAL_I2C_Mem_Write_DMA:00000000 HAL_I2C_Mem_Write_DMA
     /tmp/cchP46LN.s:5382   .text.HAL_I2C_Mem_Write_DMA:00000128 $d
     /tmp/cchP46LN.s:5390   .text.HAL_I2C_Mem_Read_DMA:00000000 $t
     /tmp/cchP46LN.s:5395   .text.HAL_I2C_Mem_Read_DMA:00000000 HAL_I2C_Mem_Read_DMA
     /tmp/cchP46LN.s:5632   .text.HAL_I2C_Mem_Read_DMA:0000012c $d
     /tmp/cchP46LN.s:5640   .text.HAL_I2C_IsDeviceReady:00000000 $t
     /tmp/cchP46LN.s:5645   .text.HAL_I2C_IsDeviceReady:00000000 HAL_I2C_IsDeviceReady
     /tmp/cchP46LN.s:5933   .text.HAL_I2C_IsDeviceReady:00000168 $d
     /tmp/cchP46LN.s:5938   .text.HAL_I2C_Master_Sequential_Transmit_IT:00000000 $t
     /tmp/cchP46LN.s:5943   .text.HAL_I2C_Master_Sequential_Transmit_IT:00000000 HAL_I2C_Master_Sequential_Transmit_IT
     /tmp/cchP46LN.s:6072   .text.HAL_I2C_Master_Sequential_Transmit_IT:00000088 $d
     /tmp/cchP46LN.s:6077   .text.HAL_I2C_Master_Sequential_Receive_IT:00000000 $t
     /tmp/cchP46LN.s:6082   .text.HAL_I2C_Master_Sequential_Receive_IT:00000000 HAL_I2C_Master_Sequential_Receive_IT
ARM GAS  /tmp/cchP46LN.s 			page 270


     /tmp/cchP46LN.s:6211   .text.HAL_I2C_Master_Sequential_Receive_IT:00000088 $d
     /tmp/cchP46LN.s:6216   .text.HAL_I2C_Slave_Sequential_Transmit_IT:00000000 $t
     /tmp/cchP46LN.s:6221   .text.HAL_I2C_Slave_Sequential_Transmit_IT:00000000 HAL_I2C_Slave_Sequential_Transmit_IT
     /tmp/cchP46LN.s:6362   .text.HAL_I2C_Slave_Sequential_Transmit_IT:000000a4 $d
     /tmp/cchP46LN.s:6368   .text.HAL_I2C_Slave_Sequential_Receive_IT:00000000 $t
     /tmp/cchP46LN.s:6373   .text.HAL_I2C_Slave_Sequential_Receive_IT:00000000 HAL_I2C_Slave_Sequential_Receive_IT
     /tmp/cchP46LN.s:6514   .text.HAL_I2C_Slave_Sequential_Receive_IT:000000a4 $d
     /tmp/cchP46LN.s:6520   .text.HAL_I2C_EnableListen_IT:00000000 $t
     /tmp/cchP46LN.s:6525   .text.HAL_I2C_EnableListen_IT:00000000 HAL_I2C_EnableListen_IT
     /tmp/cchP46LN.s:6566   .text.HAL_I2C_EnableListen_IT:00000024 $d
     /tmp/cchP46LN.s:6571   .text.HAL_I2C_DisableListen_IT:00000000 $t
     /tmp/cchP46LN.s:6576   .text.HAL_I2C_DisableListen_IT:00000000 HAL_I2C_DisableListen_IT
     /tmp/cchP46LN.s:6631   .text.HAL_I2C_Master_Abort_IT:00000000 $t
     /tmp/cchP46LN.s:6636   .text.HAL_I2C_Master_Abort_IT:00000000 HAL_I2C_Master_Abort_IT
     /tmp/cchP46LN.s:6724   .text.HAL_I2C_EV_IRQHandler:00000000 $t
     /tmp/cchP46LN.s:6729   .text.HAL_I2C_EV_IRQHandler:00000000 HAL_I2C_EV_IRQHandler
     /tmp/cchP46LN.s:6761   .text.HAL_I2C_MasterTxCpltCallback:00000000 $t
     /tmp/cchP46LN.s:6766   .text.HAL_I2C_MasterTxCpltCallback:00000000 HAL_I2C_MasterTxCpltCallback
     /tmp/cchP46LN.s:6778   .text.HAL_I2C_MasterRxCpltCallback:00000000 $t
     /tmp/cchP46LN.s:6783   .text.HAL_I2C_MasterRxCpltCallback:00000000 HAL_I2C_MasterRxCpltCallback
     /tmp/cchP46LN.s:6795   .text.I2C_ITMasterSequentialCplt:00000000 $t
     /tmp/cchP46LN.s:6799   .text.I2C_ITMasterSequentialCplt:00000000 I2C_ITMasterSequentialCplt
     /tmp/cchP46LN.s:6875   .text.HAL_I2C_SlaveTxCpltCallback:00000000 $t
     /tmp/cchP46LN.s:6880   .text.HAL_I2C_SlaveTxCpltCallback:00000000 HAL_I2C_SlaveTxCpltCallback
     /tmp/cchP46LN.s:6892   .text.HAL_I2C_SlaveRxCpltCallback:00000000 $t
     /tmp/cchP46LN.s:6897   .text.HAL_I2C_SlaveRxCpltCallback:00000000 HAL_I2C_SlaveRxCpltCallback
     /tmp/cchP46LN.s:6909   .text.I2C_ITSlaveSequentialCplt:00000000 $t
     /tmp/cchP46LN.s:6913   .text.I2C_ITSlaveSequentialCplt:00000000 I2C_ITSlaveSequentialCplt
     /tmp/cchP46LN.s:6988   .text.HAL_I2C_AddrCallback:00000000 $t
     /tmp/cchP46LN.s:6993   .text.HAL_I2C_AddrCallback:00000000 HAL_I2C_AddrCallback
     /tmp/cchP46LN.s:7005   .text.I2C_ITAddrCplt:00000000 $t
     /tmp/cchP46LN.s:7009   .text.I2C_ITAddrCplt:00000000 I2C_ITAddrCplt
     /tmp/cchP46LN.s:7157   .text.HAL_I2C_ListenCpltCallback:00000000 $t
     /tmp/cchP46LN.s:7162   .text.HAL_I2C_ListenCpltCallback:00000000 HAL_I2C_ListenCpltCallback
     /tmp/cchP46LN.s:7174   .text.I2C_ITListenCplt:00000000 $t
     /tmp/cchP46LN.s:7178   .text.I2C_ITListenCplt:00000000 I2C_ITListenCplt
     /tmp/cchP46LN.s:7258   .text.I2C_ITListenCplt:00000060 $d
     /tmp/cchP46LN.s:7263   .text.HAL_I2C_MemTxCpltCallback:00000000 $t
     /tmp/cchP46LN.s:7268   .text.HAL_I2C_MemTxCpltCallback:00000000 HAL_I2C_MemTxCpltCallback
     /tmp/cchP46LN.s:7280   .text.HAL_I2C_MemRxCpltCallback:00000000 $t
     /tmp/cchP46LN.s:7285   .text.HAL_I2C_MemRxCpltCallback:00000000 HAL_I2C_MemRxCpltCallback
     /tmp/cchP46LN.s:7297   .text.HAL_I2C_ErrorCallback:00000000 $t
     /tmp/cchP46LN.s:7302   .text.HAL_I2C_ErrorCallback:00000000 HAL_I2C_ErrorCallback
     /tmp/cchP46LN.s:7314   .text.HAL_I2C_AbortCpltCallback:00000000 $t
     /tmp/cchP46LN.s:7319   .text.HAL_I2C_AbortCpltCallback:00000000 HAL_I2C_AbortCpltCallback
     /tmp/cchP46LN.s:7331   .text.I2C_ITError:00000000 $t
     /tmp/cchP46LN.s:7335   .text.I2C_ITError:00000000 I2C_ITError
     /tmp/cchP46LN.s:7513   .text.I2C_ITError:000000e4 $d
     /tmp/cchP46LN.s:8894   .text.I2C_DMAAbort:00000000 I2C_DMAAbort
     /tmp/cchP46LN.s:7522   .text.I2C_ITSlaveCplt:00000000 $t
     /tmp/cchP46LN.s:7526   .text.I2C_ITSlaveCplt:00000000 I2C_ITSlaveCplt
     /tmp/cchP46LN.s:7730   .text.I2C_ITSlaveCplt:00000110 $d
     /tmp/cchP46LN.s:7736   .text.I2C_Slave_ISR_IT:00000000 $t
     /tmp/cchP46LN.s:7995   .text.I2C_Slave_ISR_IT:00000140 $d
     /tmp/cchP46LN.s:8000   .text.I2C_Slave_ISR_DMA:00000000 $t
     /tmp/cchP46LN.s:8123   .text.I2C_ITMasterCplt:00000000 $t
     /tmp/cchP46LN.s:8127   .text.I2C_ITMasterCplt:00000000 I2C_ITMasterCplt
ARM GAS  /tmp/cchP46LN.s 			page 271


     /tmp/cchP46LN.s:8282   .text.I2C_ITMasterCplt:000000cc $d
     /tmp/cchP46LN.s:8288   .text.I2C_Master_ISR_IT:00000000 $t
     /tmp/cchP46LN.s:8571   .text.I2C_Master_ISR_IT:00000164 $d
     /tmp/cchP46LN.s:8576   .text.I2C_Master_ISR_DMA:00000000 $t
     /tmp/cchP46LN.s:8762   .text.I2C_DMAError:00000000 $t
     /tmp/cchP46LN.s:8797   .text.HAL_I2C_ER_IRQHandler:00000000 $t
     /tmp/cchP46LN.s:8802   .text.HAL_I2C_ER_IRQHandler:00000000 HAL_I2C_ER_IRQHandler
     /tmp/cchP46LN.s:8890   .text.I2C_DMAAbort:00000000 $t
     /tmp/cchP46LN.s:8947   .text.HAL_I2C_GetState:00000000 $t
     /tmp/cchP46LN.s:8952   .text.HAL_I2C_GetState:00000000 HAL_I2C_GetState
     /tmp/cchP46LN.s:8969   .text.HAL_I2C_GetMode:00000000 $t
     /tmp/cchP46LN.s:8974   .text.HAL_I2C_GetMode:00000000 HAL_I2C_GetMode
     /tmp/cchP46LN.s:8991   .text.HAL_I2C_GetError:00000000 $t
     /tmp/cchP46LN.s:8996   .text.HAL_I2C_GetError:00000000 HAL_I2C_GetError
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort_IT
