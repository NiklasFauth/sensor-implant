ARM GAS  /tmp/ccm1sdDn.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"stm32l0xx_hal_rcc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.RCC_SetFlashLatencyFromMSIRange,"ax",%progbits
  18              		.align	2
  19              		.code	16
  20              		.thumb_func
  22              	RCC_SetFlashLatencyFromMSIRange:
  23              	.LFB49:
  24              		.file 1 "Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c"
   1:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @file    stm32l0xx_hal_rcc.c
   4:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @version V1.8.1
   6:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @date    14-April-2017
   7:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   8:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following 
   9:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
  10:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
  11:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *           + Peripheral Control functions
  12:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *       
  13:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   @verbatim                
  14:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****                       ##### RCC specific features #####
  16:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   ==============================================================================
  17:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     [..]  
  18:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       After reset the device is running from multispeed internal oscillator clock 
  19:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       (MSI 2.097MHz) with Flash 0 wait state and Flash prefetch buffer is disabled, 
  20:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       and all peripherals are off except internal SRAM, Flash and JTAG.
  21:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) buses;
  22:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           all peripherals mapped on these buses are running at MSI speed.
  23:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  24:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  25:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  26:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     [..] Once the device started from reset, the user application has to:
  27:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  28:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  29:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings  
  30:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       (+) Configure the AHB and APB buses prescalers
  31:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  32:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals whose clocks are not
  33:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           derived from the System clock (I2S, RTC, ADC, USB OTG FS/SDIO/RNG) 
  34:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           (*) SDIO only for STM32L0xxxD devices
ARM GAS  /tmp/ccm1sdDn.s 			page 2


  35:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
  36:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****                       ##### RCC Limitations #####
  37:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   ==============================================================================
  38:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     [..]  
  39:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral 
  40:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write 
  41:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       from/to registers.
  42:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  43:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  44:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
  45:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     [..]  
  46:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       Workarounds:
  47:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  48:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  49:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
  50:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   @endverbatim
  51:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   ******************************************************************************
  52:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @attention
  53:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *
  54:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  55:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *
  56:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * Redistribution and use in source and binary forms, with or without modification,
  57:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * are permitted provided that the following conditions are met:
  58:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  59:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer.
  60:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  61:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer in the documentation
  62:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *      and/or other materials provided with the distribution.
  63:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  64:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *      may be used to endorse or promote products derived from this software
  65:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *      without specific prior written permission.
  66:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *
  67:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  68:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  69:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  70:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  71:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  72:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  73:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  74:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  75:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  76:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  77:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *
  78:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   ******************************************************************************  
  79:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** */
  80:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
  81:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  82:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** #include "stm32l0xx_hal.h"
  83:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
  84:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /** @addtogroup STM32L0xx_HAL_Driver
  85:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @{
  86:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   */
  87:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
  88:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /** @defgroup RCC RCC
  89:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** * @brief RCC HAL module driver
  90:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @{
  91:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   */
ARM GAS  /tmp/ccm1sdDn.s 			page 3


  92:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
  93:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  94:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
  95:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  96:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  97:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /** @defgroup RCC_Private_Constants RCC Private Constants
  98:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****  * @{
  99:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****  */
 100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /* Bits position in  in the CFGR register */
 101:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** #define RCC_CFGR_PLLMUL_BITNUMBER         RCC_CFGR_PLLMUL_Pos
 102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** #define RCC_CFGR_PLLDIV_BITNUMBER         RCC_CFGR_PLLDIV_Pos
 103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** #define RCC_CFGR_HPRE_BITNUMBER           RCC_CFGR_HPRE_Pos
 104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** #define RCC_CFGR_PPRE1_BITNUMBER          RCC_CFGR_PPRE1_Pos
 105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** #define RCC_CFGR_PPRE2_BITNUMBER          RCC_CFGR_PPRE2_Pos
 106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /* Bits position in  in the ICSCR register */
 107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** #define RCC_ICSCR_MSIRANGE_BITNUMBER      RCC_ICSCR_MSIRANGE_Pos
 108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** #define RCC_ICSCR_MSITRIM_BITNUMBER       RCC_ICSCR_MSITRIM_Pos
 109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /**
 110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @}
 111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   */
 112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
 113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /** @defgroup RCC_Private_Macros RCC Private Macros
 114:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @{
 115:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   */
 116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** #define MCO1_CLK_ENABLE()     __HAL_RCC_GPIOA_CLK_ENABLE()
 118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
 119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
 120:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** #define MCO2_CLK_ENABLE()     __HAL_RCC_GPIOA_CLK_ENABLE()
 122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** #define MCO2_GPIO_PORT        GPIOA
 123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** #define MCO2_PIN              GPIO_PIN_9
 124:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** #if  defined(STM32L031xx) || defined(STM32L041xx) || defined(STM32L073xx) || defined(STM32L083xx) \
 126:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   || defined(STM32L072xx) || defined(STM32L082xx) || defined(STM32L071xx) || defined(STM32L081xx) 
 127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** #define MCO3_CLK_ENABLE()     __HAL_RCC_GPIOB_CLK_ENABLE()
 128:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** #define MCO3_GPIO_PORT        GPIOB
 129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** #define MCO3_PIN              GPIO_PIN_13
 130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** #endif
 131:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 132:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /**
 133:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @}
 134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   */
 135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 136:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
 137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
 138:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @{
 139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   */
 140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** extern const uint8_t PLLMulTable[];          /* Defined in CMSIS (system_stm32l0xx.c)*/
 141:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /**
 142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @}
 143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   */
 144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 145:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /** @defgroup RCC_Private_Functions RCC Private Functions
 147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @{
 148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   */
ARM GAS  /tmp/ccm1sdDn.s 			page 4


 149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** static HAL_StatusTypeDef RCC_SetFlashLatencyFromMSIRange(uint32_t MSIrange);
 150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /**
 151:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @}
 152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   */
 153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /* Exported functions ---------------------------------------------------------*/
 155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @{
 158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   */
 159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions 
 161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *  @brief    Initialization and Configuration functions 
 162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *
 163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   @verbatim    
 164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   ===============================================================================
 165:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   ===============================================================================
 167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     [..]
 168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       (MSI, HSE, HSI, LSE, LSI, PLL, CSS and MCO) and the System buses clocks (SYSCLK, AHB, APB1 
 170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       and APB2).
 171:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 172:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       (#) MSI (Multispeed internal), Seven frequency ranges are available: 65.536 kHz, 
 174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           131.072 kHz, 262.144 kHz, 524.288 kHz, 1.048 MHz, 2.097 MHz (default value) and 4.194 MHz
 175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       (#) HSI (high-speed internal), 16 MHz factory-trimmed RC used directly or through
 177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           the PLL as System clock source.
 178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       (#) LSI (low-speed internal), ~37 KHz low consumption RC used as IWDG and/or RTC
 179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           clock source.
 180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       (#) HSE (high-speed external), 1 to 24 MHz crystal oscillator used directly or
 182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           through the PLL as System clock source. Can be used also as RTC clock source.
 183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.   
 185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       (#) PLL (clocked by HSI or HSE), featuring different output clocks:
 187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         (++) The first output is used to generate the high speed system clock (up to 32 MHz)
 188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         (++) The second output is used to generate the clock for the USB OTG FS (48 MHz)
 189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 190:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       (#) CSS (Clock security system), once enable using the macro __HAL_RCC_CSS_ENABLE()
 191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           and if a HSE clock failure occurs(HSE used directly or through PLL as System 
 192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           clock source), the System clocks automatically switched to MSI and an interrupt
 193:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           is generated if enabled. The interrupt is linked to the Cortex-M0+ NMI 
 194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           (Non-Maskable Interrupt) exception vector.   
 195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       (#) MCO1/MCO2/MCO3 (microcontroller clock output), used to output SYSCLK, HSI, LSI, MSI, LSE,
 197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           HSE, HSI48 or PLL clock (through a configurable prescaler) on PA8/PA9/PB13 pins.
 198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     [..] System, AHB and APB buses clocks configuration
 200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       (#) Several clock sources can be used to drive the System clock (SYSCLK): MSI, HSI,
 201:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           HSE and PLL.
 202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           The AHB clock (HCLK) is derived from System clock through configurable
 203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           prescaler and used to clock the CPU, memory and peripherals mapped
 204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived
 205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           from AHB clock through configurable prescalers and used to clock
ARM GAS  /tmp/ccm1sdDn.s 			page 5


 206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           the peripherals mapped on these buses. You can use
 207:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           "@ref HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 208:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       -@- All the peripheral clocks are derived from the System clock (SYSCLK) except:
 210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           (+@) RTC: RTC clock can be derived either from the LSI, LSE or HSE clock
 211:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****               divided by 2 to 16. You have to use @ref __HAL_RCC_RTC_CONFIG() and @ref __HAL_RCC_RT
 212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****               macros to configure this clock. 
 213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           (+@) LCD: LCD clock can be derived either from the LSI, LSE or HSE clock
 214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****               divided by 2 to 16. You have to use @ref __HAL_RCC_LCD_CONFIG()
 215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****               macros to configure this clock. 
 216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           (+@) USB FS and RNG: USB FS require a frequency equal to 48 MHz to work correctly. 
 217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****                This clock is derived of the main PLL through PLL Multiplier or HSI48 RC oscillator.
 218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           (+@) IWDG clock which is always the LSI clock.
 220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       (#) The maximum frequency of the SYSCLK and HCLK is 32 MHz, PCLK2 32 MHz 
 222:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           and PCLK1 32 MHz. Depending on the device voltage range, the maximum 
 223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           frequency should be adapted accordingly.
 224:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   @endverbatim
 225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @{
 226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   */
 227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   
 228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /*
 229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   Additional consideration on the HCLK based on Latency settings:
 230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   +----------------------------------------------------------------------+     
 231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   | Latency       |                HCLK clock frequency (MHz)            |
 232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   |               |------------------------------------------------------|     
 233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   |               | voltage range 1  | voltage range 2 | voltage range 3 |
 234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   |               |      1.8 V       |     1.5 V       |      1.2 V      |
 235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   |---------------|------------------|-----------------|-----------------|              
 236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   |0WS(1CPU cycle)| 0 < HCLK <= 16   | 0 < HCLK <= 8   | 0 < HCLK <= 2   |
 237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   |---------------|------------------|-----------------|-----------------| 
 238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   |1WS(2CPU cycle)| 16 < HCLK <= 32  | 8 < HCLK <= 16  | 2 < HCLK <= 4   | 
 239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   +----------------------------------------------------------------------+     
 240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   The following table gives the different clock source frequencies depending on the product
 242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   voltage range:
 243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   +------------------------------------------------------------------------------------------+     
 244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   | Product voltage |                    Clock frequency                                     |
 245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   |                 |------------------|-----------------------------|-----------------------|     
 246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   |      range      |   MSI   |   HSI  |              HSE            |          PLL          |
 247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   |-----------------|---------|--------|-----------------------------|-----------------------|     
 248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   | Range 1 (1.8 V) | 4.2 MHz | 16 MHz | HSE 32 MHz (external clock) |         32 MHz        |
 249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   |                 |         |        |      or 24 MHz (crystal)    | (PLLVCO max = 96 MHz) |
 250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   |-----------------|---------|--------|-----------------------------|-----------------------|     
 251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   | Range 2 (1.5 V) | 4.2 MHz | 16 MHz |         16 MHz              |         16 MHz        |
 252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   |                 |         |        |                             | (PLLVCO max = 48 MHz) |
 253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   |-----------------|---------|--------|-----------------------------|-----------------------|     
 254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   | Range 3 (1.2 V) | 4.2 MHz |   NA   |         8 MHz               |           4 MHz       |
 255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   |                 |         |        |                             | (PLLVCO max = 24 MHz) |
 256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   +------------------------------------------------------------------------------------------+     
 257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   */
 258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /**
 260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *            - MSI ON and used as system clock source
ARM GAS  /tmp/ccm1sdDn.s 			page 6


 263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *            - HSI, HSE and PLL  OFF
 264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *            - CSS and MCO1/MCO2/MCO3 OFF
 266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *            - All interrupts disabled
 267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @note   This function does not modify the configuration of the
 268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *            - Peripheral clocks
 269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *            - HSI48 clock
 271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @retval None
 272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   */
 273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** void HAL_RCC_DeInit(void)
 274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** {
 275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   __IO uint32_t tmpreg;
 276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* Set MSION bit */
 278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_MSION);
 279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   
 280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* Switch SYSCLK to MSI*/
 281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   CLEAR_BIT(RCC->CFGR, RCC_CFGR_SW);
 282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* Reset HSE, HSI, CSS, PLL */
 284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** #if defined(RCC_CR_CSSHSEON) && defined(RCC_CR_HSIOUTEN)
 285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSION| RCC_CR_HSIKERON| RCC_CR_HSIDIVEN | RCC_CR_HSIOUTEN | \
 286:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****                      RCC_CR_HSEON | RCC_CR_CSSHSEON | RCC_CR_PLLON); 
 287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** #elif !defined(RCC_CR_CSSHSEON) && defined(RCC_CR_HSIOUTEN)
 288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSION| RCC_CR_HSIKERON| RCC_CR_HSIDIVEN | RCC_CR_HSIOUTEN | \
 289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****                      RCC_CR_HSEON | RCC_CR_PLLON);    
 290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** #elif defined(RCC_CR_CSSHSEON) && !defined(RCC_CR_HSIOUTEN)
 291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSION| RCC_CR_HSIKERON| RCC_CR_HSIDIVEN | \
 292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****                      RCC_CR_HSEON | RCC_CR_CSSHSEON | RCC_CR_PLLON); 
 293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** #endif
 294:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* Delay after an RCC peripheral clock */ \
 296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   tmpreg = READ_BIT(RCC->CR, RCC_CR_HSEON);      \
 297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   UNUSED(tmpreg); 
 298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* Reset HSEBYP bit */
 300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
 301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   
 302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* Reset CFGR register */
 303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
 304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   
 305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* Set MSIClockRange & MSITRIM[4:0] bits to the reset value */
 306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   MODIFY_REG(RCC->ICSCR, (RCC_ICSCR_MSIRANGE | RCC_ICSCR_MSITRIM), (((uint32_t)0 << RCC_ICSCR_MSITR
 307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   
 308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* Set HSITRIM bits to the reset value */
 309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   MODIFY_REG(RCC->ICSCR, RCC_ICSCR_HSITRIM, ((uint32_t)0x10 << 8));
 310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   
 311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* Disable all interrupts */
 312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   CLEAR_REG(RCC->CIER); 
 313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   SystemCoreClock = MSI_VALUE;
 316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** }
 317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 318:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /**
 319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
ARM GAS  /tmp/ccm1sdDn.s 			page 7


 320:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to LSE Off
 326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to HSE Off
 329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @retval HAL status
 331:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   */
 332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** {
 334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****    uint32_t tickstart = 0U;
 335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   
 336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* Check the parameters */
 337:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
 338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 340:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/ 
 341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 342:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   {
 343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     /* Check the parameters */
 344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowe
 347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     {
 350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       {
 352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         return HAL_ERROR;
 353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       }
 354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     }
 355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     else
 356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     {
 357:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 359:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       
 360:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 361:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****        /* Check the HSE State */
 362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 363:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       {
 364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         /* Get Start Tick */
 365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 366:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         
 367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         /* Wait till HSE is ready */
 368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         {
 370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           {
 372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           }
 374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         }
 375:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       }
 376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       else
ARM GAS  /tmp/ccm1sdDn.s 			page 8


 377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       {
 378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         /* Get Start Tick */
 379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         
 381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         /* Wait till HSE is disabled */
 382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         {
 384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****            if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           {
 386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           }
 388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         }
 389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       }
 390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     }
 391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   }
 392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/ 
 393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 394:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   {
 395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     /* Check the parameters */
 396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     
 399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     {
 403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       {
 406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         return HAL_ERROR;
 407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       }
 408:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 409:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       else
 410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       {
 411:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 413:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       }
 414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     }
 415:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     else
 416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     {
 417:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       /* Check the HSI State */
 418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       {
 420:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (HSI or HSIdiv4) */
 421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         
 423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         /* Get Start Tick */
 424:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         
 426:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         /* Wait till HSI is ready */
 427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         {
 429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 430:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           {
 431:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 432:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           }
 433:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         }
ARM GAS  /tmp/ccm1sdDn.s 			page 9


 434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****                 
 435:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       }
 438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       else
 439:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       {
 440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         
 443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         /* Get Start Tick */
 444:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         
 446:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         /* Wait till HSI is disabled */
 447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         {
 449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 450:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           {
 451:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 452:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           }
 453:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         }
 454:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       }
 455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     }
 456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   }
 457:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /*----------------------------- MSI Configuration --------------------------*/ 
 458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   {
 460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     /* When the MSI is used as system clock it will not be disabled */
 461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_MSI) )
 462:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     {
 463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) != RESET) && (RCC_OscInitStruct->MSIState == RCC_MSI_
 464:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       {
 465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         return HAL_ERROR;
 466:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       }
 467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       /* Otherwise, just the calibration and MSI range change are allowed */
 468:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       else
 469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       {
 470:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****        /* Check MSICalibrationValue and MSIClockRange input parameters */
 471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         assert_param(IS_RCC_MSICALIBRATION_VALUE(RCC_OscInitStruct->MSICalibrationValue));
 472:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         assert_param(IS_RCC_MSI_CLOCK_RANGE(RCC_OscInitStruct->MSIClockRange));
 473:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
 475:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****            must be correctly programmed according to the frequency of the CPU clock
 476:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****            (HCLK) and the supply voltage of the device. */
 477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         if(RCC_OscInitStruct->MSIClockRange > __HAL_RCC_GET_MSI_RANGE())
 478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         {
 479:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           /* First increase number of wait states update if necessary */
 480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           if(RCC_SetFlashLatencyFromMSIRange(RCC_OscInitStruct->MSIClockRange) != HAL_OK)
 481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           {
 482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****             return HAL_ERROR;
 483:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           }
 484:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 485:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           /* Selects the Multiple Speed oscillator (MSI) clock range .*/
 486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 487:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
 488:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 489:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         }
 490:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         else
ARM GAS  /tmp/ccm1sdDn.s 			page 10


 491:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         {
 492:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           /* Else, keep current flash latency while decreasing applies */
 493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           /* Selects the Multiple Speed oscillator (MSI) clock range .*/
 494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 495:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
 496:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 497:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           /* Decrease number of wait states update if necessary */
 499:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           if(RCC_SetFlashLatencyFromMSIRange(RCC_OscInitStruct->MSIClockRange) != HAL_OK)
 500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           {
 501:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****             return HAL_ERROR;
 502:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           }          
 503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         }
 504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 505:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         /* Update the SystemCoreClock global variable */
 506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         SystemCoreClock =  (32768U * (1U << ((RCC_OscInitStruct->MSIClockRange >> RCC_ICSCR_MSIRANG
 507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****                            >> AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_BITNUMBER
 508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 509:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         /* Configure the source of time base considering new system clocks settings*/
 510:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         HAL_InitTick (TICK_INT_PRIORITY);
 511:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       }
 512:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     }
 513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     else
 514:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     {
 515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       /* Check MSI State */
 516:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       assert_param(IS_RCC_MSI(RCC_OscInitStruct->MSIState));
 517:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 518:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       /* Check the MSI State */
 519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       if(RCC_OscInitStruct->MSIState != RCC_MSI_OFF)
 520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       {
 521:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         /* Enable the Multi Speed oscillator (MSI). */
 522:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         __HAL_RCC_MSI_ENABLE();
 523:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 524:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         /* Get Start Tick */
 525:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 526:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 527:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         /* Wait till MSI is ready */
 528:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) == RESET)
 529:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         {
 530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 531:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           {
 532:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 533:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           }
 534:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         }
 535:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         /* Check MSICalibrationValue and MSIClockRange input parameters */
 536:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         assert_param(IS_RCC_MSICALIBRATION_VALUE(RCC_OscInitStruct->MSICalibrationValue));
 537:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         assert_param(IS_RCC_MSI_CLOCK_RANGE(RCC_OscInitStruct->MSIClockRange));
 538:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 539:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         /* Selects the Multiple Speed oscillator (MSI) clock range .*/
 540:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 541:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****          /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
 542:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 543:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 544:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       }
 545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       else
 546:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       {
 547:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         /* Disable the Multi Speed oscillator (MSI). */
ARM GAS  /tmp/ccm1sdDn.s 			page 11


 548:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         __HAL_RCC_MSI_DISABLE();
 549:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 550:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         /* Get Start Tick */
 551:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 553:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         /* Wait till MSI is ready */
 554:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) != RESET)
 555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         {
 556:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 557:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           {
 558:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 559:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           }
 560:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         }
 561:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       }
 562:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     }
 563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   }  
 564:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/ 
 565:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   {
 567:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     /* Check the parameters */
 568:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 569:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     
 570:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     /* Check the LSI State */
 571:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 572:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     {
 573:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 574:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       
 576:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       /* Get Start Tick */
 577:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 578:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       
 579:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       /* Wait till LSI is ready */  
 580:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 581:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       {
 582:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 583:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         {
 584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 585:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         }
 586:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       }
 587:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     }
 588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     else
 589:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     {
 590:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 591:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 592:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       
 593:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       /* Get Start Tick */
 594:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       
 596:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       /* Wait till LSI is disabled */  
 597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       {
 599:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 600:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         {
 601:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 602:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         }
 603:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       }
 604:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     }
ARM GAS  /tmp/ccm1sdDn.s 			page 12


 605:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   }
 606:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/ 
 607:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 608:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   {
 609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 610:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     
 611:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     /* Check the parameters */
 612:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 613:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 614:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 615:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 616:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 617:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     {
 618:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 619:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       pwrclkchanged = SET;
 620:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     }
 621:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     
 622:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 623:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     {
 624:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 625:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 626:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       
 627:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 628:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 629:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 630:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 631:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       {
 632:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 633:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         {
 634:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 635:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         }
 636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       }
 637:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     }
 638:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 639:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 640:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 641:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     /* Check the LSE State */
 642:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 643:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     {
 644:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       /* Get Start Tick */
 645:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 646:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       
 647:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       /* Wait till LSE is ready */  
 648:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 649:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       {
 650:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 651:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         {
 652:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 653:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         }
 654:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       }
 655:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     }
 656:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     else
 657:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     {
 658:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       /* Get Start Tick */
 659:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 660:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       
 661:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       /* Wait till LSE is disabled */  
ARM GAS  /tmp/ccm1sdDn.s 			page 13


 662:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 663:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       {
 664:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 665:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         {
 666:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 667:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         }
 668:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       }
 669:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     }
 670:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 671:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     /* Require to disable power clock if necessary */
 672:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     if(pwrclkchanged == SET)
 673:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     {
 674:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 675:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     }
 676:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   }
 677:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 678:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
 679:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /*----------------------------- HSI48 Configuration --------------------------*/
 680:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 681:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   {
 682:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     /* Check the parameters */
 683:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));
 684:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 685:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       /* Check the HSI48 State */
 686:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 687:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       {
 688:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (HSI48). */
 689:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         __HAL_RCC_HSI48_ENABLE();
 690:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 691:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         /* Get Start Tick */
 692:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 693:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       
 694:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         /* Wait till HSI48 is ready */  
 695:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 696:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         {
 697:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 698:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           {
 699:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 700:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           }
 701:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         } 
 702:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       }
 703:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       else
 704:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       {
 705:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI48). */
 706:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         __HAL_RCC_HSI48_DISABLE();
 707:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 708:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         /* Get Start Tick */
 709:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 710:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       
 711:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         /* Wait till HSI48 is ready */  
 712:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET)
 713:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         {
 714:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 715:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           {
 716:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 717:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           }
 718:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         }
ARM GAS  /tmp/ccm1sdDn.s 			page 14


 719:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       }
 720:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   }
 721:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
 722:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****        
 723:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 724:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* Check the parameters */
 725:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 726:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 727:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   {
 728:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 729:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 730:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     { 
 731:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 732:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       {
 733:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         /* Check the parameters */
 734:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 735:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
 736:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         assert_param(IS_RCC_PLL_DIV(RCC_OscInitStruct->PLL.PLLDIV));
 737:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   
 738:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         /* Disable the main PLL. */
 739:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 740:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         
 741:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         /* Get Start Tick */
 742:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 743:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         
 744:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 745:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 746:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         {
 747:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 748:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           {
 749:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 750:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           }
 751:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         }
 752:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 753:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         /* Configure the main PLL clock source, multiplication and division factors. */
 754:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 755:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLMUL,
 756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLDIV);
 757:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         /* Enable the main PLL. */
 758:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 759:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         
 760:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         /* Get Start Tick */
 761:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 762:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         
 763:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         /* Wait till PLL is ready */
 764:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 765:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         {
 766:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 767:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           {
 768:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 769:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           }
 770:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         }
 771:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       }
 772:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       else
 773:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       {
 774:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         /* Disable the main PLL. */
 775:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
ARM GAS  /tmp/ccm1sdDn.s 			page 15


 776:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****  
 777:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         /* Get Start Tick */
 778:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 779:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         
 780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         /* Wait till PLL is disabled */  
 781:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 782:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         {
 783:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 784:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           {
 785:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 786:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           }
 787:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         }
 788:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       }
 789:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     }
 790:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     else
 791:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     {
 792:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       return HAL_ERROR;
 793:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     }
 794:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   }
 795:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   
 796:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   return HAL_OK;
 797:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** }
 798:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 799:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /**
 800:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB buses clocks according to the specified 
 801:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 802:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 803:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 804:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @param  FLatency FLASH Latency                   
 805:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *          The value of this parameter depend on device used within the same series
 806:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
 807:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *         and updated by @ref HAL_RCC_GetHCLKFreq() function called within this function
 808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *
 809:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @note   The MSI is used (enabled by hardware) as system clock source after
 810:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *         start-up from Reset, wake-up from STOP and STANDBY mode, or in case
 811:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 812:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 813:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *           
 814:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 815:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *         clock source is ready (clock stable after start-up delay or PLL locked). 
 816:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 817:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *         occur when the clock source will be ready. 
 818:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
 819:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *         currently used as system clock source.
 820:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @note   Depending on the device voltage range, the software has to set correctly
 821:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
 822:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *         (for more details refer to section above "Initialization/de-initialization functions")
 823:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @retval HAL status
 824:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   */
 825:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 826:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** {
 827:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   uint32_t tickstart = 0U;
 828:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   
 829:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* Check the parameters */
 830:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
 831:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 832:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
ARM GAS  /tmp/ccm1sdDn.s 			page 16


 833:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 834:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
 835:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   must be correctly programmed according to the frequency of the CPU clock 
 836:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   (HCLK) and the supply voltage of the device. */
 837:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 838:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 839:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if(FLatency > (FLASH->ACR & FLASH_ACR_LATENCY))
 840:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   {    
 841:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 842:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 843:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     
 844:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 845:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 846:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 847:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     {
 848:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       return HAL_ERROR;
 849:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     }
 850:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   }
 851:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 852:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 853:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 854:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   {
 855:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 856:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 857:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   }
 858:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 859:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/ 
 860:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 861:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   {    
 862:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 863:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     
 864:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
 865:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 866:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     {
 867:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       /* Check the HSE ready flag */  
 868:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 869:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       {
 870:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         return HAL_ERROR;
 871:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       }
 872:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     }
 873:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 874:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 875:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     {
 876:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       /* Check the PLL ready flag */  
 877:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 878:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       {
 879:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         return HAL_ERROR;
 880:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       }
 881:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     }
 882:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
 883:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI)
 884:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     {
 885:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       /* Check the HSI ready flag */  
 886:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 887:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       {
 888:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         return HAL_ERROR;
 889:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       }
ARM GAS  /tmp/ccm1sdDn.s 			page 17


 890:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     }
 891:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     /* MSI is selected as System Clock Source */
 892:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     else
 893:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     {
 894:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       /* Check the MSI ready flag */  
 895:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) == RESET)
 896:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       {
 897:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         return HAL_ERROR;
 898:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       }
 899:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     }
 900:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 901:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 902:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     /* Get Start Tick */
 903:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 904:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     
 905:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 906:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     {
 907:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 908:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       {
 909:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 910:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         {
 911:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 912:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         }
 913:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       }
 914:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     }
 915:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 916:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     {
 917:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 918:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       {
 919:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 920:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         {
 921:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 922:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         }
 923:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       }
 924:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     }
 925:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI)
 926:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     {
 927:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 928:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       {
 929:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 930:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         {
 931:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 932:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         }
 933:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       }
 934:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     }      
 935:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     else
 936:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     {
 937:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       while(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_MSI)
 938:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       {
 939:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 940:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         {
 941:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 942:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         }
 943:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       }
 944:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     }
 945:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   }    
 946:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
ARM GAS  /tmp/ccm1sdDn.s 			page 18


 947:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if(FLatency < (FLASH->ACR & FLASH_ACR_LATENCY))
 948:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   {    
 949:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 950:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 951:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     
 952:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 953:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 954:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 955:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     {
 956:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       return HAL_ERROR;
 957:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     }
 958:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   }    
 959:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 960:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/ 
 961:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 962:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   {
 963:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 964:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 965:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   }
 966:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   
 967:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/ 
 968:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 969:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   {
 970:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 971:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 972:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   }
 973:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****  
 974:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 975:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CF
 976:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 977:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
 978:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   HAL_InitTick (TICK_INT_PRIORITY);
 979:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   
 980:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   return HAL_OK;
 981:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** }
 982:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 983:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /**
 984:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @}
 985:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   */
 986:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 987:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 988:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *  @brief   RCC clocks control functions
 989:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *
 990:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   @verbatim   
 991:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   ===============================================================================
 992:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****                   ##### Peripheral Control functions #####
 993:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   ===============================================================================  
 994:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     [..]
 995:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks 
 996:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     frequencies.
 997:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
 998:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   @endverbatim
 999:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @{
1000:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   */
1001:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
1002:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /**
1003:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
ARM GAS  /tmp/ccm1sdDn.s 			page 19


1004:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
1005:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
1006:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
1007:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
1008:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO2 Clock source to output on MCO2 pin(PA9).
1009:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   @if STM32L031xx
1010:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO3 Clock source to output on MCO3 pin(PB13)
1011:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   @elseif STM32L041xx
1012:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO3 Clock source to output on MCO3 pin(PB13)
1013:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   @elseif STM32L073xx
1014:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO3 Clock source to output on MCO3 pin(PB13)
1015:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   @elseif STM32L083xx
1016:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO3 Clock source to output on MCO3 pin(PB13)
1017:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   @elseif STM32L072xx
1018:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO3 Clock source to output on MCO3 pin(PB13)
1019:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   @elseif STM32L082xx
1020:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO3 Clock source to output on MCO3 pin(PB13)
1021:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   @elseif STM32L071xx
1022:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO3 Clock source to output on MCO3 pin(PB13)
1023:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   @elseif STM32L081xx
1024:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO3 Clock source to output on MCO3 pin(PB13)
1025:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   @endif
1026:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
1027:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
1028:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected as MCO clock
1029:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System clock selected as MCO clock
1030:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
1031:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
1032:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_MSI         MSI oscillator clock selected as MCO clock 
1033:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLL clock selected as MCO clock
1034:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI         LSI clock selected as MCO clock
1035:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE         LSE clock selected as MCO clock
1036:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   @if STM32L052xx
1037:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 clock selected as MCO clock
1038:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   @elseif STM32L053xx
1039:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 clock selected as MCO clock
1040:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   @elseif STM32L062xx
1041:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 clock selected as MCO clock
1042:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   @elseif STM32L063xx
1043:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 clock selected as MCO clock
1044:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   @elseif STM32L072xx
1045:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 clock selected as MCO clock
1046:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   @elseif STM32L073xx
1047:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 clock selected as MCO clock
1048:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   @elseif STM32L082xx
1049:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 clock selected as MCO clock
1050:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   @elseif STM32L083xx
1051:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 clock selected as MCO clock
1052:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   @endif
1053:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
1054:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
1055:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1 no division applied to MCO clock
1056:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_2  division by 2 applied to MCO clock
1057:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_4  division by 4 applied to MCO clock
1058:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_8  division by 8 applied to MCO clock
1059:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_16 division by 16 applied to MCO clock
1060:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @retval None
ARM GAS  /tmp/ccm1sdDn.s 			page 20


1061:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   */
1062:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
1063:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** {
1064:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   GPIO_InitTypeDef gpio = {0};
1065:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
1066:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* Check the parameters */
1067:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
1068:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
1069:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
1070:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   
1071:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* Configure the MCO1 pin in alternate function mode */
1072:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   gpio.Mode      = GPIO_MODE_AF_PP;
1073:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   gpio.Speed     = GPIO_SPEED_FREQ_HIGH;
1074:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   gpio.Pull      = GPIO_NOPULL;
1075:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if(RCC_MCOx == RCC_MCO1)
1076:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   {    
1077:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     gpio.Pin       = MCO1_PIN;
1078:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     gpio.Alternate = GPIO_AF0_MCO;
1079:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     
1080:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     /* MCO1 Clock Enable */
1081:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     MCO1_CLK_ENABLE();
1082:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     HAL_GPIO_Init(MCO1_GPIO_PORT, &gpio);
1083:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   }
1084:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** #if  defined(STM32L031xx) || defined(STM32L041xx) || defined(STM32L073xx) || defined(STM32L083xx) \
1085:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   || defined(STM32L072xx) || defined(STM32L082xx) || defined(STM32L071xx) || defined(STM32L081xx) 
1086:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   else if (RCC_MCOx == RCC_MCO3)
1087:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   {
1088:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     gpio.Pin       = MCO3_PIN;
1089:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     gpio.Alternate = GPIO_AF2_MCO;
1090:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     
1091:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     /* MCO3 Clock Enable */
1092:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     MCO3_CLK_ENABLE();    
1093:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     HAL_GPIO_Init(MCO3_GPIO_PORT, &gpio);
1094:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   }
1095:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** #endif
1096:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   else
1097:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   {    
1098:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     gpio.Pin       = MCO2_PIN;
1099:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     gpio.Alternate = GPIO_AF0_MCO;
1100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     
1101:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     /* MCO2 Clock Enable */
1102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     MCO2_CLK_ENABLE();
1103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     HAL_GPIO_Init(MCO2_GPIO_PORT, &gpio);
1104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   }    
1105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   
1106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* Configure the MCO clock source */
1107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   __HAL_RCC_MCO1_CONFIG(RCC_MCOSource, RCC_MCODiv);
1108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** }
1109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
1110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** #if defined(RCC_HSECSS_SUPPORT)
1111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /**
1112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
1113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
1114:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
1115:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
1116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to 
1117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *         the Cortex-M0+ NMI (Non-Maskable Interrupt) exception vector.  
ARM GAS  /tmp/ccm1sdDn.s 			page 21


1118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @retval None
1119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   */
1120:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
1121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** {
1122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_CSSON) ;
1123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** }
1124:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
1125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** #endif /* RCC_HSECSS_SUPPORT */
1126:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /**
1127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency     
1128:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real 
1129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined 
1130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *         constant and the selected clock source:
1131:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @note     If SYSCLK source is MSI, function returns a value based on MSI
1132:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *             Value as defined by the MSI range.
1133:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
1134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns a value based on HSE_VALUE(**)
1135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns a value based on HSE_VALUE(**) 
1136:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *           or HSI_VALUE(*) multiplied/divided by the PLL factors.         
1137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32l0xx_hal_conf.h file (default value
1138:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *               16 MHz) but the real value may vary depending on the variations
1139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *               in voltage and temperature.
1140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32l0xx_hal_conf.h file (default value
1141:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *                8 MHz), user has to ensure that HSE_VALUE is same as the real
1142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
1143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *                have wrong result.
1144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *                  
1145:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
1146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *         value for HSE crystal.
1147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *           
1148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the 
1149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *         baud-rate for the communication peripherals or configure other parameters.
1150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *           
1151:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
1152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
1153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *         
1154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @retval SYSCLK frequency
1155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   */
1156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
1157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** {
1158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   uint32_t tmpreg = 0, pllm = 0, plld = 0, pllvco = 0, msiclkrange = 0;
1159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   uint32_t sysclockfreq = 0;
1160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   
1161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   tmpreg = RCC->CFGR;
1162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   
1163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
1164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   switch (tmpreg & RCC_CFGR_SWS)
1165:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   {
1166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
1167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     {
1168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       if ((RCC->CR & RCC_CR_HSIDIVF) != 0)
1169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       {
1170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         sysclockfreq =  (HSI_VALUE >> 2);
1171:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       }
1172:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       else 
1173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       {
1174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         sysclockfreq =  HSI_VALUE;
ARM GAS  /tmp/ccm1sdDn.s 			page 22


1175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       }
1176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       break;
1177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     }
1178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
1179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     {
1180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
1181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       break;
1182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     }
1183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
1184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     {
1185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       pllm = PLLMulTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_BITNUMBER];
1186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       plld = ((uint32_t)(tmpreg & RCC_CFGR_PLLDIV) >> RCC_CFGR_PLLDIV_BITNUMBER) + 1;
1187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
1188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       {
1189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         /* HSE used as PLL clock source */
1190:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         pllvco = (HSE_VALUE * pllm) / plld;
1191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       }
1192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       else
1193:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       {
1194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         if ((RCC->CR & RCC_CR_HSIDIVF) != 0)
1195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         {
1196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           pllvco = ((HSI_VALUE >> 2) * pllm) / plld;
1197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         }
1198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         else 
1199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         {
1200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****          pllvco = (HSI_VALUE * pllm) / plld;
1201:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         }
1202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       }
1203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       sysclockfreq = pllvco;
1204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       break;
1205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     }
1206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_MSI:  /* MSI used as system clock source */
1207:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     default: /* MSI used as system clock */
1208:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     {
1209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       msiclkrange = (RCC->ICSCR & RCC_ICSCR_MSIRANGE ) >> RCC_ICSCR_MSIRANGE_BITNUMBER;
1210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       sysclockfreq = (32768 * (1 << (msiclkrange + 1)));
1211:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       break;
1212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     }
1213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   }
1214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   return sysclockfreq;
1215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** }
1216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
1217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /**
1218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency     
1219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
1220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
1221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * 
1222:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
1223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *         and updated within this function
1224:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @retval HCLK frequency
1225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   */
1226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
1227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** {
1228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   return SystemCoreClock;
1229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** }
1230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
1231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /**
ARM GAS  /tmp/ccm1sdDn.s 			page 23


1232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency     
1233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
1234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
1235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @retval PCLK1 frequency
1236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   */
1237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
1238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** {
1239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_BIT
1241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** }    
1242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
1243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /**
1244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @brief  Returns the PCLK2 frequency     
1245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
1246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
1247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @retval PCLK2 frequency
1248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   */
1249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
1250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** {
1251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
1252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_BITN
1253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** } 
1254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
1255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /**
1256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal 
1257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * RCC configuration registers.
1258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that 
1259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * will be configured.
1260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @retval None
1261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   */
1262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** {
1264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* Check the parameters */
1265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
1266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
1267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI  \
1269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****                   | RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI | RCC_OSCILLATORTYPE_MSI;
1270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
1271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType |= RCC_OSCILLATORTYPE_HSI48;
1272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
1273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
1274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
1275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
1277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   {
1278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
1279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   }
1280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
1281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   {
1282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
1283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   }
1284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   else
1285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   {
1286:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
1287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   }
1288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
ARM GAS  /tmp/ccm1sdDn.s 			page 24


1289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
1291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   {
1292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
1293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   }
1294:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   else
1295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   {
1296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
1297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   }
1298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   
1299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->ICSCR & RCC_ICSCR_HSITRIM) >> 8);
1300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   
1301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* Get the MSI configuration -----------------------------------------------*/
1302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_MSION) == RCC_CR_MSION)
1303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   {
1304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     RCC_OscInitStruct->MSIState = RCC_MSI_ON;
1305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   }
1306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   else
1307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   {
1308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     RCC_OscInitStruct->MSIState = RCC_MSI_OFF;
1309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   }
1310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   
1311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   RCC_OscInitStruct->MSICalibrationValue = (uint32_t)((RCC->ICSCR & RCC_ICSCR_MSITRIM) >> RCC_ICSCR
1312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   RCC_OscInitStruct->MSIClockRange = (uint32_t)((RCC->ICSCR & RCC_ICSCR_MSIRANGE));
1313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   
1314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSEBYP) == RCC_CSR_LSEBYP)
1316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   {
1317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
1318:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   }
1319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   else if((RCC->CSR &RCC_CSR_LSEON) == RCC_CSR_LSEON)
1320:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   {
1321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
1322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   }
1323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   else
1324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   {
1325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
1326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   }
1327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   
1328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
1330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   {
1331:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
1332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   }
1333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   else
1334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   {
1335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
1336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   }
1337:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   
1338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
1339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* Get the HSI48 configuration if any-----------------------------------------*/
1340:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   RCC_OscInitStruct->HSI48State = __HAL_RCC_GET_HSI48_STATE();
1341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
1342:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
1343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
1345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   {
ARM GAS  /tmp/ccm1sdDn.s 			page 25


1346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
1347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   }
1348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   else
1349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   {
1350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
1351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   }
1352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLSRC);
1353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLMUL = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLMUL);
1354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLDIV = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLDIV);
1355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** }
1356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
1357:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /**
1358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @brief  Get the RCC_ClkInitStruct according to the internal 
1359:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * RCC configuration registers.
1360:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_ClkInitTypeDef structure that 
1361:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * contains the current clock configuration.
1362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @param  pFLatency Pointer on the Flash Latency.
1363:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @retval None
1364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   */
1365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1366:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** {
1367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* Check the parameters */
1368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
1369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   assert_param(pFLatency != NULL);
1370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
1371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
1373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   
1374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/ 
1375:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
1376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   
1377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/ 
1378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE); 
1379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   
1380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/ 
1381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);   
1382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   
1383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/ 
1384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3);
1385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   
1386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/   
1387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY); 
1388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** }
1389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
1390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** #if defined(RCC_HSECSS_SUPPORT)
1391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /**
1392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1394:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @retval None
1395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   */
1396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** {
1398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
1400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   {
1401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
ARM GAS  /tmp/ccm1sdDn.s 			page 26


1403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     
1404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
1406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   }
1407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** }
1408:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
1409:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /**
1410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1411:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @retval none
1412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   */
1413:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** {
1415:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     the HAL_RCC_CSSCallback could be implemented in the user file
1417:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     */ 
1418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** }
1419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
1420:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** #endif /* RCC_HSECSS_SUPPORT */
1421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /**
1422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @}
1423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   */
1424:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
1425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /**
1426:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @}
1427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   */
1428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
1429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
1430:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /** @addtogroup RCC_Private_Functions
1431:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @{
1432:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   */
1433:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** /**
1434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @brief  Update number of Flash wait states in line with MSI range and current 
1435:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****             voltage range
1436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @param  MSIrange  MSI range value from RCC_MSIRANGE_0 to RCC_MSIRANGE_6
1437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   * @retval HAL status
1438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   */
1439:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** static HAL_StatusTypeDef RCC_SetFlashLatencyFromMSIRange(uint32_t MSIrange)
1440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** {
  25              		.loc 1 1440 0
  26              		.cfi_startproc
  27              	.LVL0:
  28 0000 10B5     		push	{r4, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 4, -8
  32              		.cfi_offset 14, -4
  33              	.LVL1:
1441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   uint32_t vos = 0;
1442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   uint32_t latency = FLASH_LATENCY_0;  /* default value 0WS */
1443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** 
1444:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* HCLK can reach 4 MHz only if AHB prescaler = 1 */
1445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if (READ_BIT(RCC->CFGR, RCC_CFGR_HPRE) == RCC_SYSCLK_DIV1)
  34              		.loc 1 1445 0
  35 0002 1D4B     		ldr	r3, .L10
  36 0004 DB68     		ldr	r3, [r3, #12]
  37 0006 F022     		mov	r2, #240
  38 0008 1A42     		tst	r2, r3
ARM GAS  /tmp/ccm1sdDn.s 			page 27


  39 000a 22D1     		bne	.L6
1446:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   {
1447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     if(__HAL_RCC_PWR_IS_CLK_ENABLED())
  40              		.loc 1 1447 0
  41 000c 1A4B     		ldr	r3, .L10
  42 000e 9B6B     		ldr	r3, [r3, #56]
  43 0010 DA00     		lsl	r2, r3, #3
  44 0012 05D5     		bpl	.L3
1448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     {
1449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       vos = READ_BIT(PWR->CR, PWR_CR_VOS);
  45              		.loc 1 1449 0
  46 0014 194B     		ldr	r3, .L10+4
  47 0016 1B68     		ldr	r3, [r3]
  48 0018 C022     		mov	r2, #192
  49 001a 5201     		lsl	r2, r2, #5
  50 001c 1A40     		and	r2, r3
  51              	.LVL2:
  52 001e 0EE0     		b	.L4
  53              	.LVL3:
  54              	.L3:
1450:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     }
1451:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     else
1452:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     {
1453:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
  55              		.loc 1 1453 0
  56 0020 154B     		ldr	r3, .L10
  57 0022 996B     		ldr	r1, [r3, #56]
  58 0024 8022     		mov	r2, #128
  59 0026 5205     		lsl	r2, r2, #21
  60 0028 0A43     		orr	r2, r1
  61 002a 9A63     		str	r2, [r3, #56]
1454:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       vos = READ_BIT(PWR->CR, PWR_CR_VOS);
  62              		.loc 1 1454 0
  63 002c 134A     		ldr	r2, .L10+4
  64 002e 1168     		ldr	r1, [r2]
  65 0030 C022     		mov	r2, #192
  66 0032 5201     		lsl	r2, r2, #5
  67 0034 0A40     		and	r2, r1
  68              	.LVL4:
1455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
  69              		.loc 1 1455 0
  70 0036 9C6B     		ldr	r4, [r3, #56]
  71 0038 1149     		ldr	r1, .L10+8
  72 003a 2140     		and	r1, r4
  73 003c 9963     		str	r1, [r3, #56]
  74              	.L4:
1456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     }
1457:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     
1458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     /* Check if need to set latency 1 only for Range 3 & HCLK = 4MHz */
1459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     if((vos == PWR_REGULATOR_VOLTAGE_SCALE3) && (MSIrange == RCC_MSIRANGE_6))
  75              		.loc 1 1459 0
  76 003e C023     		mov	r3, #192
  77 0040 5B01     		lsl	r3, r3, #5
  78 0042 9A42     		cmp	r2, r3
  79 0044 07D1     		bne	.L7
  80              		.loc 1 1459 0 is_stmt 0 discriminator 1
  81 0046 C023     		mov	r3, #192
ARM GAS  /tmp/ccm1sdDn.s 			page 28


  82 0048 1B02     		lsl	r3, r3, #8
  83 004a 9842     		cmp	r0, r3
  84 004c 05D0     		beq	.L8
1442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   uint32_t latency = FLASH_LATENCY_0;  /* default value 0WS */
  85              		.loc 1 1442 0 is_stmt 1
  86 004e 0021     		mov	r1, #0
  87 0050 04E0     		b	.L2
  88              	.LVL5:
  89              	.L6:
  90 0052 0021     		mov	r1, #0
  91 0054 02E0     		b	.L2
  92              	.LVL6:
  93              	.L7:
  94 0056 0021     		mov	r1, #0
  95 0058 00E0     		b	.L2
  96              	.L8:
1460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     {
1461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       latency = FLASH_LATENCY_1; /* 1WS */
  97              		.loc 1 1461 0
  98 005a 0121     		mov	r1, #1
  99              	.LVL7:
 100              	.L2:
1462:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     }
1463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   }
1464:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   
1465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   __HAL_FLASH_SET_LATENCY(latency);
 101              		.loc 1 1465 0
 102 005c 094B     		ldr	r3, .L10+12
 103 005e 1868     		ldr	r0, [r3]
 104              	.LVL8:
 105 0060 0122     		mov	r2, #1
 106 0062 9043     		bic	r0, r2
 107 0064 0843     		orr	r0, r1
 108 0066 1860     		str	r0, [r3]
1466:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   
1467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   /* Check that the new number of wait states is taken into account to access the Flash
1468:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****      memory by reading the FLASH_ACR register */
1469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if((FLASH->ACR & FLASH_ACR_LATENCY) != latency)
 109              		.loc 1 1469 0
 110 0068 1B68     		ldr	r3, [r3]
 111 006a 1A40     		and	r2, r3
 112 006c 8A42     		cmp	r2, r1
 113 006e 01D0     		beq	.L9
1470:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   {
1471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     return HAL_ERROR;
 114              		.loc 1 1471 0
 115 0070 0120     		mov	r0, #1
 116 0072 00E0     		b	.L5
 117              	.L9:
1472:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   }
1473:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   
1474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   return HAL_OK;
 118              		.loc 1 1474 0
 119 0074 0020     		mov	r0, #0
 120              	.L5:
1475:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** }
 121              		.loc 1 1475 0
ARM GAS  /tmp/ccm1sdDn.s 			page 29


 122              		@ sp needed
 123 0076 10BD     		pop	{r4, pc}
 124              	.L11:
 125              		.align	2
 126              	.L10:
 127 0078 00100240 		.word	1073876992
 128 007c 00700040 		.word	1073770496
 129 0080 FFFFFFEF 		.word	-268435457
 130 0084 00200240 		.word	1073881088
 131              		.cfi_endproc
 132              	.LFE49:
 134              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
 135              		.align	2
 136              		.global	HAL_RCC_DeInit
 137              		.code	16
 138              		.thumb_func
 140              	HAL_RCC_DeInit:
 141              	.LFB36:
 274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** {
 142              		.loc 1 274 0
 143              		.cfi_startproc
 144 0000 82B0     		sub	sp, sp, #8
 145              	.LCFI1:
 146              		.cfi_def_cfa_offset 8
 278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_MSION);
 147              		.loc 1 278 0
 148 0002 174B     		ldr	r3, .L13
 149 0004 1968     		ldr	r1, [r3]
 150 0006 8022     		mov	r2, #128
 151 0008 5200     		lsl	r2, r2, #1
 152 000a 0A43     		orr	r2, r1
 153 000c 1A60     		str	r2, [r3]
 281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   CLEAR_BIT(RCC->CFGR, RCC_CFGR_SW);
 154              		.loc 1 281 0
 155 000e DA68     		ldr	r2, [r3, #12]
 156 0010 0321     		mov	r1, #3
 157 0012 8A43     		bic	r2, r1
 158 0014 DA60     		str	r2, [r3, #12]
 291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSION| RCC_CR_HSIKERON| RCC_CR_HSIDIVEN | \
 159              		.loc 1 291 0
 160 0016 1968     		ldr	r1, [r3]
 161 0018 124A     		ldr	r2, .L13+4
 162 001a 0A40     		and	r2, r1
 163 001c 1A60     		str	r2, [r3]
 296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   tmpreg = READ_BIT(RCC->CR, RCC_CR_HSEON);      \
 164              		.loc 1 296 0
 165 001e 1968     		ldr	r1, [r3]
 166 0020 8022     		mov	r2, #128
 167 0022 5202     		lsl	r2, r2, #9
 168 0024 0A40     		and	r2, r1
 169 0026 0192     		str	r2, [sp, #4]
 297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   UNUSED(tmpreg); 
 170              		.loc 1 297 0
 171 0028 019A     		ldr	r2, [sp, #4]
 300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
 172              		.loc 1 300 0
 173 002a 1968     		ldr	r1, [r3]
ARM GAS  /tmp/ccm1sdDn.s 			page 30


 174 002c 0E4A     		ldr	r2, .L13+8
 175 002e 0A40     		and	r2, r1
 176 0030 1A60     		str	r2, [r3]
 303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
 177              		.loc 1 303 0
 178 0032 0022     		mov	r2, #0
 179 0034 DA60     		str	r2, [r3, #12]
 306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   MODIFY_REG(RCC->ICSCR, (RCC_ICSCR_MSIRANGE | RCC_ICSCR_MSITRIM), (((uint32_t)0 << RCC_ICSCR_MSITR
 180              		.loc 1 306 0
 181 0036 5868     		ldr	r0, [r3, #4]
 182 0038 0C49     		ldr	r1, .L13+12
 183 003a 0140     		and	r1, r0
 184 003c A020     		mov	r0, #160
 185 003e 0002     		lsl	r0, r0, #8
 186 0040 0143     		orr	r1, r0
 187 0042 5960     		str	r1, [r3, #4]
 309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   MODIFY_REG(RCC->ICSCR, RCC_ICSCR_HSITRIM, ((uint32_t)0x10 << 8));
 188              		.loc 1 309 0
 189 0044 5868     		ldr	r0, [r3, #4]
 190 0046 0A49     		ldr	r1, .L13+16
 191 0048 0140     		and	r1, r0
 192 004a 8020     		mov	r0, #128
 193 004c 4001     		lsl	r0, r0, #5
 194 004e 0143     		orr	r1, r0
 195 0050 5960     		str	r1, [r3, #4]
 312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   CLEAR_REG(RCC->CIER); 
 196              		.loc 1 312 0
 197 0052 1A61     		str	r2, [r3, #16]
 315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   SystemCoreClock = MSI_VALUE;
 198              		.loc 1 315 0
 199 0054 074A     		ldr	r2, .L13+20
 200 0056 084B     		ldr	r3, .L13+24
 201 0058 1A60     		str	r2, [r3]
 316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** }
 202              		.loc 1 316 0
 203 005a 02B0     		add	sp, sp, #8
 204              		@ sp needed
 205 005c 7047     		bx	lr
 206              	.L14:
 207 005e C046     		.align	2
 208              	.L13:
 209 0060 00100240 		.word	1073876992
 210 0064 F4FFF6FE 		.word	-17367052
 211 0068 FFFFFBFF 		.word	-262145
 212 006c FF1FFF00 		.word	16719871
 213 0070 FFE0FFFF 		.word	-7937
 214 0074 68FF1F00 		.word	2097000
 215 0078 00000000 		.word	SystemCoreClock
 216              		.cfi_endproc
 217              	.LFE36:
 219              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
 220              		.align	2
 221              		.global	HAL_RCC_OscConfig
 222              		.code	16
 223              		.thumb_func
 225              	HAL_RCC_OscConfig:
 226              	.LFB37:
ARM GAS  /tmp/ccm1sdDn.s 			page 31


 333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** {
 227              		.loc 1 333 0
 228              		.cfi_startproc
 229              	.LVL9:
 230 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 231              	.LCFI2:
 232              		.cfi_def_cfa_offset 20
 233              		.cfi_offset 4, -20
 234              		.cfi_offset 5, -16
 235              		.cfi_offset 6, -12
 236              		.cfi_offset 7, -8
 237              		.cfi_offset 14, -4
 238 0002 4F46     		mov	r7, r9
 239 0004 4646     		mov	r6, r8
 240 0006 C0B4     		push	{r6, r7}
 241              	.LCFI3:
 242              		.cfi_def_cfa_offset 28
 243              		.cfi_offset 8, -28
 244              		.cfi_offset 9, -24
 245 0008 83B0     		sub	sp, sp, #12
 246              	.LCFI4:
 247              		.cfi_def_cfa_offset 40
 248 000a 041C     		mov	r4, r0
 249              	.LVL10:
 341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 250              		.loc 1 341 0
 251 000c 0068     		ldr	r0, [r0]
 252              	.LVL11:
 253 000e C007     		lsl	r0, r0, #31
 254 0010 65D5     		bpl	.L16
 347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 255              		.loc 1 347 0
 256 0012 C74B     		ldr	r3, .L105
 257 0014 DB68     		ldr	r3, [r3, #12]
 258 0016 0C22     		mov	r2, #12
 259 0018 1340     		and	r3, r2
 260 001a 082B     		cmp	r3, #8
 261 001c 08D0     		beq	.L17
 348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 262              		.loc 1 348 0
 263 001e C44B     		ldr	r3, .L105
 264 0020 DB68     		ldr	r3, [r3, #12]
 265 0022 1340     		and	r3, r2
 266 0024 0C2B     		cmp	r3, #12
 267 0026 0BD1     		bne	.L18
 348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 268              		.loc 1 348 0 is_stmt 0 discriminator 1
 269 0028 C14B     		ldr	r3, .L105
 270 002a DB68     		ldr	r3, [r3, #12]
 271 002c D903     		lsl	r1, r3, #15
 272 002e 07D5     		bpl	.L18
 273              	.L17:
 350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 274              		.loc 1 350 0 is_stmt 1
 275 0030 BF4B     		ldr	r3, .L105
 276 0032 1B68     		ldr	r3, [r3]
 277 0034 9A03     		lsl	r2, r3, #14
ARM GAS  /tmp/ccm1sdDn.s 			page 32


 278 0036 52D5     		bpl	.L16
 350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 279              		.loc 1 350 0 is_stmt 0 discriminator 1
 280 0038 6368     		ldr	r3, [r4, #4]
 281 003a 002B     		cmp	r3, #0
 282 003c 4FD1     		bne	.L16
 283 003e 96E2     		b	.L81
 284              	.L18:
 285              	.LBB2:
 358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 286              		.loc 1 358 0 is_stmt 1
 287 0040 6368     		ldr	r3, [r4, #4]
 288 0042 8022     		mov	r2, #128
 289 0044 5202     		lsl	r2, r2, #9
 290 0046 9342     		cmp	r3, r2
 291 0048 06D1     		bne	.L20
 358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 292              		.loc 1 358 0 is_stmt 0 discriminator 1
 293 004a B94B     		ldr	r3, .L105
 294 004c 1968     		ldr	r1, [r3]
 295 004e 8022     		mov	r2, #128
 296 0050 5202     		lsl	r2, r2, #9
 297 0052 0A43     		orr	r2, r1
 298 0054 1A60     		str	r2, [r3]
 299 0056 1EE0     		b	.L21
 300              	.L20:
 358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 301              		.loc 1 358 0 discriminator 2
 302 0058 A022     		mov	r2, #160
 303 005a D202     		lsl	r2, r2, #11
 304 005c 9342     		cmp	r3, r2
 305 005e 0BD1     		bne	.L22
 358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 306              		.loc 1 358 0 discriminator 1
 307 0060 B34B     		ldr	r3, .L105
 308 0062 1968     		ldr	r1, [r3]
 309 0064 8022     		mov	r2, #128
 310 0066 D202     		lsl	r2, r2, #11
 311 0068 0A43     		orr	r2, r1
 312 006a 1A60     		str	r2, [r3]
 313 006c 1968     		ldr	r1, [r3]
 314 006e 8022     		mov	r2, #128
 315 0070 5202     		lsl	r2, r2, #9
 316 0072 0A43     		orr	r2, r1
 317 0074 1A60     		str	r2, [r3]
 318 0076 0EE0     		b	.L21
 319              	.L22:
 358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 320              		.loc 1 358 0 discriminator 2
 321 0078 AD4B     		ldr	r3, .L105
 322 007a 1968     		ldr	r1, [r3]
 323 007c AD4A     		ldr	r2, .L105+4
 324 007e 0A40     		and	r2, r1
 325 0080 1A60     		str	r2, [r3]
 326 0082 1968     		ldr	r1, [r3]
 327 0084 8022     		mov	r2, #128
 328 0086 5202     		lsl	r2, r2, #9
ARM GAS  /tmp/ccm1sdDn.s 			page 33


 329 0088 0A40     		and	r2, r1
 330 008a 0192     		str	r2, [sp, #4]
 331 008c 019A     		ldr	r2, [sp, #4]
 332 008e 1968     		ldr	r1, [r3]
 333 0090 A94A     		ldr	r2, .L105+8
 334 0092 0A40     		and	r2, r1
 335 0094 1A60     		str	r2, [r3]
 336              	.L21:
 337              	.LBE2:
 362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 338              		.loc 1 362 0 is_stmt 1
 339 0096 6068     		ldr	r0, [r4, #4]
 340 0098 0028     		cmp	r0, #0
 341 009a 10D0     		beq	.L23
 365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 342              		.loc 1 365 0
 343 009c FFF7FEFF 		bl	HAL_GetTick
 344              	.LVL12:
 345 00a0 071C     		mov	r7, r0
 346              	.LVL13:
 368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 347              		.loc 1 368 0
 348 00a2 A34E     		ldr	r6, .L105
 349 00a4 8025     		mov	r5, #128
 350 00a6 AD02     		lsl	r5, r5, #10
 351 00a8 05E0     		b	.L24
 352              	.LVL14:
 353              	.L25:
 370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 354              		.loc 1 370 0
 355 00aa FFF7FEFF 		bl	HAL_GetTick
 356              	.LVL15:
 357 00ae C31B     		sub	r3, r0, r7
 358 00b0 642B     		cmp	r3, #100
 359 00b2 00D9     		bls	.LCB331
 360 00b4 5DE2     		b	.L82	@long jump
 361              	.LCB331:
 362              	.L24:
 368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 363              		.loc 1 368 0 discriminator 1
 364 00b6 3368     		ldr	r3, [r6]
 365 00b8 2B42     		tst	r3, r5
 366 00ba F6D0     		beq	.L25
 367 00bc 0FE0     		b	.L16
 368              	.LVL16:
 369              	.L23:
 379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 370              		.loc 1 379 0
 371 00be FFF7FEFF 		bl	HAL_GetTick
 372              	.LVL17:
 373 00c2 071C     		mov	r7, r0
 374              	.LVL18:
 382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 375              		.loc 1 382 0
 376 00c4 9A4E     		ldr	r6, .L105
 377 00c6 8025     		mov	r5, #128
 378 00c8 AD02     		lsl	r5, r5, #10
ARM GAS  /tmp/ccm1sdDn.s 			page 34


 379 00ca 05E0     		b	.L26
 380              	.LVL19:
 381              	.L27:
 384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****            if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 382              		.loc 1 384 0
 383 00cc FFF7FEFF 		bl	HAL_GetTick
 384              	.LVL20:
 385 00d0 C31B     		sub	r3, r0, r7
 386 00d2 642B     		cmp	r3, #100
 387 00d4 00D9     		bls	.LCB359
 388 00d6 4EE2     		b	.L83	@long jump
 389              	.LCB359:
 390              	.L26:
 382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 391              		.loc 1 382 0 discriminator 1
 392 00d8 3368     		ldr	r3, [r6]
 393 00da 2B42     		tst	r3, r5
 394 00dc F6D1     		bne	.L27
 395              	.LVL21:
 396              	.L16:
 393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 397              		.loc 1 393 0
 398 00de 2168     		ldr	r1, [r4]
 399 00e0 8907     		lsl	r1, r1, #30
 400 00e2 54D5     		bpl	.L28
 400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 401              		.loc 1 400 0
 402 00e4 924B     		ldr	r3, .L105
 403 00e6 DB68     		ldr	r3, [r3, #12]
 404 00e8 0C22     		mov	r2, #12
 405 00ea 1340     		and	r3, r2
 406 00ec 042B     		cmp	r3, #4
 407 00ee 08D0     		beq	.L29
 401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 408              		.loc 1 401 0
 409 00f0 8F4B     		ldr	r3, .L105
 410 00f2 DB68     		ldr	r3, [r3, #12]
 411 00f4 1340     		and	r3, r2
 412 00f6 0C2B     		cmp	r3, #12
 413 00f8 14D1     		bne	.L30
 401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 414              		.loc 1 401 0 is_stmt 0 discriminator 1
 415 00fa 8D4B     		ldr	r3, .L105
 416 00fc DB68     		ldr	r3, [r3, #12]
 417 00fe DA03     		lsl	r2, r3, #15
 418 0100 10D4     		bmi	.L30
 419              	.L29:
 404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 420              		.loc 1 404 0 is_stmt 1
 421 0102 8B4B     		ldr	r3, .L105
 422 0104 1B68     		ldr	r3, [r3]
 423 0106 5807     		lsl	r0, r3, #29
 424 0108 03D5     		bpl	.L31
 404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 425              		.loc 1 404 0 is_stmt 0 discriminator 1
 426 010a E168     		ldr	r1, [r4, #12]
 427 010c 0129     		cmp	r1, #1
ARM GAS  /tmp/ccm1sdDn.s 			page 35


 428 010e 00D0     		beq	.LCB402
 429 0110 33E2     		b	.L84	@long jump
 430              	.LCB402:
 431              	.L31:
 412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 432              		.loc 1 412 0 is_stmt 1 discriminator 2
 433 0112 874B     		ldr	r3, .L105
 434 0114 5968     		ldr	r1, [r3, #4]
 435 0116 894A     		ldr	r2, .L105+12
 436 0118 0A40     		and	r2, r1
 437 011a 2069     		ldr	r0, [r4, #16]
 438 011c 0102     		lsl	r1, r0, #8
 439 011e 0A43     		orr	r2, r1
 440 0120 5A60     		str	r2, [r3, #4]
 404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 441              		.loc 1 404 0 discriminator 2
 442 0122 34E0     		b	.L28
 443              	.L30:
 418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 444              		.loc 1 418 0
 445 0124 E368     		ldr	r3, [r4, #12]
 446 0126 002B     		cmp	r3, #0
 447 0128 1DD0     		beq	.L32
 421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 448              		.loc 1 421 0
 449 012a 814A     		ldr	r2, .L105
 450 012c 1168     		ldr	r1, [r2]
 451 012e 0920     		mov	r0, #9
 452 0130 8143     		bic	r1, r0
 453 0132 0B43     		orr	r3, r1
 454 0134 1360     		str	r3, [r2]
 424:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 455              		.loc 1 424 0
 456 0136 FFF7FEFF 		bl	HAL_GetTick
 457              	.LVL22:
 458 013a 071C     		mov	r7, r0
 459              	.LVL23:
 427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 460              		.loc 1 427 0
 461 013c 7C4E     		ldr	r6, .L105
 462 013e 0425     		mov	r5, #4
 463 0140 05E0     		b	.L33
 464              	.LVL24:
 465              	.L34:
 429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 466              		.loc 1 429 0
 467 0142 FFF7FEFF 		bl	HAL_GetTick
 468              	.LVL25:
 469 0146 C31B     		sub	r3, r0, r7
 470 0148 022B     		cmp	r3, #2
 471 014a 00D9     		bls	.LCB443
 472 014c 17E2     		b	.L85	@long jump
 473              	.LCB443:
 474              	.L33:
 427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 475              		.loc 1 427 0 discriminator 1
 476 014e 3368     		ldr	r3, [r6]
ARM GAS  /tmp/ccm1sdDn.s 			page 36


 477 0150 1D42     		tst	r5, r3
 478 0152 F6D0     		beq	.L34
 436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 479              		.loc 1 436 0
 480 0154 764B     		ldr	r3, .L105
 481 0156 5968     		ldr	r1, [r3, #4]
 482 0158 784A     		ldr	r2, .L105+12
 483 015a 0A40     		and	r2, r1
 484 015c 2069     		ldr	r0, [r4, #16]
 485 015e 0102     		lsl	r1, r0, #8
 486 0160 0A43     		orr	r2, r1
 487 0162 5A60     		str	r2, [r3, #4]
 488 0164 13E0     		b	.L28
 489              	.LVL26:
 490              	.L32:
 441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 491              		.loc 1 441 0
 492 0166 724B     		ldr	r3, .L105
 493 0168 1A68     		ldr	r2, [r3]
 494 016a 0121     		mov	r1, #1
 495 016c 8A43     		bic	r2, r1
 496 016e 1A60     		str	r2, [r3]
 444:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 497              		.loc 1 444 0
 498 0170 FFF7FEFF 		bl	HAL_GetTick
 499              	.LVL27:
 500 0174 071C     		mov	r7, r0
 501              	.LVL28:
 447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 502              		.loc 1 447 0
 503 0176 6E4E     		ldr	r6, .L105
 504 0178 0425     		mov	r5, #4
 505 017a 05E0     		b	.L35
 506              	.LVL29:
 507              	.L36:
 449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 508              		.loc 1 449 0
 509 017c FFF7FEFF 		bl	HAL_GetTick
 510              	.LVL30:
 511 0180 C31B     		sub	r3, r0, r7
 512 0182 022B     		cmp	r3, #2
 513 0184 00D9     		bls	.LCB485
 514 0186 FCE1     		b	.L86	@long jump
 515              	.LCB485:
 516              	.L35:
 447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 517              		.loc 1 447 0 discriminator 1
 518 0188 3368     		ldr	r3, [r6]
 519 018a 1D42     		tst	r5, r3
 520 018c F6D1     		bne	.L36
 521              	.LVL31:
 522              	.L28:
 458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 523              		.loc 1 458 0
 524 018e 2168     		ldr	r1, [r4]
 525 0190 C906     		lsl	r1, r1, #27
 526 0192 00D4     		bmi	.LCB500
ARM GAS  /tmp/ccm1sdDn.s 			page 37


 527 0194 8BE0     		b	.L37	@long jump
 528              	.LCB500:
 461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_MSI) )
 529              		.loc 1 461 0
 530 0196 664B     		ldr	r3, .L105
 531 0198 DB68     		ldr	r3, [r3, #12]
 532 019a 0C22     		mov	r2, #12
 533 019c 1A42     		tst	r2, r3
 534 019e 49D1     		bne	.L38
 463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) != RESET) && (RCC_OscInitStruct->MSIState == RCC_MSI_
 535              		.loc 1 463 0
 536 01a0 634B     		ldr	r3, .L105
 537 01a2 1B68     		ldr	r3, [r3]
 538 01a4 9A05     		lsl	r2, r3, #22
 539 01a6 03D5     		bpl	.L39
 463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) != RESET) && (RCC_OscInitStruct->MSIState == RCC_MSI_
 540              		.loc 1 463 0 is_stmt 0 discriminator 1
 541 01a8 E369     		ldr	r3, [r4, #28]
 542 01aa 002B     		cmp	r3, #0
 543 01ac 00D1     		bne	.LCB516
 544 01ae EAE1     		b	.L87	@long jump
 545              	.LCB516:
 546              	.L39:
 477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         if(RCC_OscInitStruct->MSIClockRange > __HAL_RCC_GET_MSI_RANGE())
 547              		.loc 1 477 0 is_stmt 1
 548 01b0 606A     		ldr	r0, [r4, #36]
 549 01b2 5F4B     		ldr	r3, .L105
 550 01b4 5A68     		ldr	r2, [r3, #4]
 551 01b6 E023     		mov	r3, #224
 552 01b8 1B02     		lsl	r3, r3, #8
 553 01ba 1340     		and	r3, r2
 554 01bc 9842     		cmp	r0, r3
 555 01be 13D9     		bls	.L40
 480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           if(RCC_SetFlashLatencyFromMSIRange(RCC_OscInitStruct->MSIClockRange) != HAL_OK)
 556              		.loc 1 480 0
 557 01c0 FFF7FEFF 		bl	RCC_SetFlashLatencyFromMSIRange
 558              	.LVL32:
 559 01c4 0028     		cmp	r0, #0
 560 01c6 00D0     		beq	.LCB529
 561 01c8 DFE1     		b	.L88	@long jump
 562              	.LCB529:
 486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 563              		.loc 1 486 0
 564 01ca 594B     		ldr	r3, .L105
 565 01cc 5968     		ldr	r1, [r3, #4]
 566 01ce 5C4A     		ldr	r2, .L105+16
 567 01d0 0A40     		and	r2, r1
 568 01d2 606A     		ldr	r0, [r4, #36]
 569 01d4 0243     		orr	r2, r0
 570 01d6 5A60     		str	r2, [r3, #4]
 488:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 571              		.loc 1 488 0
 572 01d8 5968     		ldr	r1, [r3, #4]
 573 01da 0902     		lsl	r1, r1, #8
 574 01dc 090A     		lsr	r1, r1, #8
 575 01de 206A     		ldr	r0, [r4, #32]
 576 01e0 0206     		lsl	r2, r0, #24
ARM GAS  /tmp/ccm1sdDn.s 			page 38


 577 01e2 0A43     		orr	r2, r1
 578 01e4 5A60     		str	r2, [r3, #4]
 579 01e6 12E0     		b	.L41
 580              	.L40:
 494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 581              		.loc 1 494 0
 582 01e8 514B     		ldr	r3, .L105
 583 01ea 5968     		ldr	r1, [r3, #4]
 584 01ec 544A     		ldr	r2, .L105+16
 585 01ee 0A40     		and	r2, r1
 586 01f0 1043     		orr	r0, r2
 587 01f2 5860     		str	r0, [r3, #4]
 496:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 588              		.loc 1 496 0
 589 01f4 5A68     		ldr	r2, [r3, #4]
 590 01f6 1202     		lsl	r2, r2, #8
 591 01f8 120A     		lsr	r2, r2, #8
 592 01fa 206A     		ldr	r0, [r4, #32]
 593 01fc 0106     		lsl	r1, r0, #24
 594 01fe 0A43     		orr	r2, r1
 595 0200 5A60     		str	r2, [r3, #4]
 499:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           if(RCC_SetFlashLatencyFromMSIRange(RCC_OscInitStruct->MSIClockRange) != HAL_OK)
 596              		.loc 1 499 0
 597 0202 606A     		ldr	r0, [r4, #36]
 598 0204 FFF7FEFF 		bl	RCC_SetFlashLatencyFromMSIRange
 599              	.LVL33:
 600 0208 0028     		cmp	r0, #0
 601 020a 00D0     		beq	.LCB569
 602 020c BFE1     		b	.L89	@long jump
 603              	.LCB569:
 604              	.L41:
 506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         SystemCoreClock =  (32768U * (1U << ((RCC_OscInitStruct->MSIClockRange >> RCC_ICSCR_MSIRANG
 605              		.loc 1 506 0 discriminator 1
 606 020e 616A     		ldr	r1, [r4, #36]
 607 0210 4B0B     		lsr	r3, r1, #13
 608 0212 0133     		add	r3, r3, #1
 609 0214 8022     		mov	r2, #128
 610 0216 1202     		lsl	r2, r2, #8
 611 0218 9A40     		lsl	r2, r2, r3
 507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****                            >> AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_BITNUMBER
 612              		.loc 1 507 0 discriminator 1
 613 021a 454B     		ldr	r3, .L105
 614 021c DB68     		ldr	r3, [r3, #12]
 615 021e 1B06     		lsl	r3, r3, #24
 616 0220 1B0F     		lsr	r3, r3, #28
 617 0222 4849     		ldr	r1, .L105+20
 618 0224 CB5C     		ldrb	r3, [r1, r3]
 619 0226 DA40     		lsr	r2, r2, r3
 506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         SystemCoreClock =  (32768U * (1U << ((RCC_OscInitStruct->MSIClockRange >> RCC_ICSCR_MSIRANG
 620              		.loc 1 506 0 discriminator 1
 621 0228 474B     		ldr	r3, .L105+24
 622 022a 1A60     		str	r2, [r3]
 510:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         HAL_InitTick (TICK_INT_PRIORITY);
 623              		.loc 1 510 0 discriminator 1
 624 022c 0020     		mov	r0, #0
 625 022e FFF7FEFF 		bl	HAL_InitTick
 626              	.LVL34:
ARM GAS  /tmp/ccm1sdDn.s 			page 39


 627 0232 3CE0     		b	.L37
 628              	.L38:
 519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       if(RCC_OscInitStruct->MSIState != RCC_MSI_OFF)
 629              		.loc 1 519 0
 630 0234 E269     		ldr	r2, [r4, #28]
 631 0236 002A     		cmp	r2, #0
 632 0238 24D0     		beq	.L42
 522:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         __HAL_RCC_MSI_ENABLE();
 633              		.loc 1 522 0
 634 023a 3D4B     		ldr	r3, .L105
 635 023c 1968     		ldr	r1, [r3]
 636 023e 8022     		mov	r2, #128
 637 0240 5200     		lsl	r2, r2, #1
 638 0242 0A43     		orr	r2, r1
 639 0244 1A60     		str	r2, [r3]
 525:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 640              		.loc 1 525 0
 641 0246 FFF7FEFF 		bl	HAL_GetTick
 642              	.LVL35:
 643 024a 071C     		mov	r7, r0
 644              	.LVL36:
 528:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) == RESET)
 645              		.loc 1 528 0
 646 024c 384E     		ldr	r6, .L105
 647 024e 8025     		mov	r5, #128
 648 0250 AD00     		lsl	r5, r5, #2
 649 0252 05E0     		b	.L43
 650              	.LVL37:
 651              	.L44:
 530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 652              		.loc 1 530 0
 653 0254 FFF7FEFF 		bl	HAL_GetTick
 654              	.LVL38:
 655 0258 C31B     		sub	r3, r0, r7
 656 025a 022B     		cmp	r3, #2
 657 025c 00D9     		bls	.LCB623
 658 025e 98E1     		b	.L90	@long jump
 659              	.LCB623:
 660              	.L43:
 528:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) == RESET)
 661              		.loc 1 528 0 discriminator 1
 662 0260 3368     		ldr	r3, [r6]
 663 0262 2B42     		tst	r3, r5
 664 0264 F6D0     		beq	.L44
 540:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 665              		.loc 1 540 0
 666 0266 324B     		ldr	r3, .L105
 667 0268 5968     		ldr	r1, [r3, #4]
 668 026a 354A     		ldr	r2, .L105+16
 669 026c 0A40     		and	r2, r1
 670 026e 606A     		ldr	r0, [r4, #36]
 671 0270 0243     		orr	r2, r0
 672 0272 5A60     		str	r2, [r3, #4]
 542:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 673              		.loc 1 542 0
 674 0274 5968     		ldr	r1, [r3, #4]
 675 0276 0902     		lsl	r1, r1, #8
ARM GAS  /tmp/ccm1sdDn.s 			page 40


 676 0278 090A     		lsr	r1, r1, #8
 677 027a 206A     		ldr	r0, [r4, #32]
 678 027c 0206     		lsl	r2, r0, #24
 679 027e 0A43     		orr	r2, r1
 680 0280 5A60     		str	r2, [r3, #4]
 681 0282 14E0     		b	.L37
 682              	.LVL39:
 683              	.L42:
 548:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         __HAL_RCC_MSI_DISABLE();
 684              		.loc 1 548 0
 685 0284 2A4B     		ldr	r3, .L105
 686 0286 1968     		ldr	r1, [r3]
 687 0288 304A     		ldr	r2, .L105+28
 688 028a 0A40     		and	r2, r1
 689 028c 1A60     		str	r2, [r3]
 551:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 690              		.loc 1 551 0
 691 028e FFF7FEFF 		bl	HAL_GetTick
 692              	.LVL40:
 693 0292 071C     		mov	r7, r0
 694              	.LVL41:
 554:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) != RESET)
 695              		.loc 1 554 0
 696 0294 264E     		ldr	r6, .L105
 697 0296 8025     		mov	r5, #128
 698 0298 AD00     		lsl	r5, r5, #2
 699 029a 05E0     		b	.L45
 700              	.LVL42:
 701              	.L46:
 556:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 702              		.loc 1 556 0
 703 029c FFF7FEFF 		bl	HAL_GetTick
 704              	.LVL43:
 705 02a0 C31B     		sub	r3, r0, r7
 706 02a2 022B     		cmp	r3, #2
 707 02a4 00D9     		bls	.LCB673
 708 02a6 76E1     		b	.L91	@long jump
 709              	.LCB673:
 710              	.L45:
 554:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) != RESET)
 711              		.loc 1 554 0 discriminator 1
 712 02a8 3368     		ldr	r3, [r6]
 713 02aa 2B42     		tst	r3, r5
 714 02ac F6D1     		bne	.L46
 715              	.LVL44:
 716              	.L37:
 565:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 717              		.loc 1 565 0
 718 02ae 2168     		ldr	r1, [r4]
 719 02b0 0907     		lsl	r1, r1, #28
 720 02b2 2BD5     		bpl	.L47
 571:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 721              		.loc 1 571 0
 722 02b4 6269     		ldr	r2, [r4, #20]
 723 02b6 002A     		cmp	r2, #0
 724 02b8 14D0     		beq	.L48
 574:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
ARM GAS  /tmp/ccm1sdDn.s 			page 41


 725              		.loc 1 574 0
 726 02ba 1D4B     		ldr	r3, .L105
 727 02bc 196D     		ldr	r1, [r3, #80]
 728 02be 0122     		mov	r2, #1
 729 02c0 0A43     		orr	r2, r1
 730 02c2 1A65     		str	r2, [r3, #80]
 577:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 731              		.loc 1 577 0
 732 02c4 FFF7FEFF 		bl	HAL_GetTick
 733              	.LVL45:
 734 02c8 071C     		mov	r7, r0
 735              	.LVL46:
 580:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 736              		.loc 1 580 0
 737 02ca 194E     		ldr	r6, .L105
 738 02cc 0225     		mov	r5, #2
 739 02ce 05E0     		b	.L49
 740              	.LVL47:
 741              	.L50:
 582:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 742              		.loc 1 582 0
 743 02d0 FFF7FEFF 		bl	HAL_GetTick
 744              	.LVL48:
 745 02d4 C31B     		sub	r3, r0, r7
 746 02d6 022B     		cmp	r3, #2
 747 02d8 00D9     		bls	.LCB713
 748 02da 5EE1     		b	.L92	@long jump
 749              	.LCB713:
 750              	.L49:
 580:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 751              		.loc 1 580 0 discriminator 1
 752 02dc 336D     		ldr	r3, [r6, #80]
 753 02de 1D42     		tst	r5, r3
 754 02e0 F6D0     		beq	.L50
 755 02e2 13E0     		b	.L47
 756              	.LVL49:
 757              	.L48:
 591:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 758              		.loc 1 591 0
 759 02e4 124B     		ldr	r3, .L105
 760 02e6 1A6D     		ldr	r2, [r3, #80]
 761 02e8 0121     		mov	r1, #1
 762 02ea 8A43     		bic	r2, r1
 763 02ec 1A65     		str	r2, [r3, #80]
 594:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 764              		.loc 1 594 0
 765 02ee FFF7FEFF 		bl	HAL_GetTick
 766              	.LVL50:
 767 02f2 071C     		mov	r7, r0
 768              	.LVL51:
 597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 769              		.loc 1 597 0
 770 02f4 0E4E     		ldr	r6, .L105
 771 02f6 0225     		mov	r5, #2
 772 02f8 05E0     		b	.L51
 773              	.LVL52:
 774              	.L52:
ARM GAS  /tmp/ccm1sdDn.s 			page 42


 599:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 775              		.loc 1 599 0
 776 02fa FFF7FEFF 		bl	HAL_GetTick
 777              	.LVL53:
 778 02fe C31B     		sub	r3, r0, r7
 779 0300 022B     		cmp	r3, #2
 780 0302 00D9     		bls	.LCB745
 781 0304 4BE1     		b	.L93	@long jump
 782              	.LCB745:
 783              	.L51:
 597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 784              		.loc 1 597 0 discriminator 1
 785 0306 336D     		ldr	r3, [r6, #80]
 786 0308 1D42     		tst	r5, r3
 787 030a F6D1     		bne	.L52
 788              	.LVL54:
 789              	.L47:
 607:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 790              		.loc 1 607 0
 791 030c 2368     		ldr	r3, [r4]
 792 030e 5B07     		lsl	r3, r3, #29
 793 0310 00D4     		bmi	.LCB759
 794 0312 9AE0     		b	.L53	@long jump
 795              	.LCB759:
 796              	.LVL55:
 797              	.LBB3:
 616:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 798              		.loc 1 616 0
 799 0314 064B     		ldr	r3, .L105
 800 0316 9B6B     		ldr	r3, [r3, #56]
 801 0318 D800     		lsl	r0, r3, #3
 802 031a 19D4     		bmi	.L94
 618:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 803              		.loc 1 618 0
 804 031c 044B     		ldr	r3, .L105
 805 031e 996B     		ldr	r1, [r3, #56]
 806 0320 8022     		mov	r2, #128
 807 0322 5205     		lsl	r2, r2, #21
 808 0324 0A43     		orr	r2, r1
 809 0326 9A63     		str	r2, [r3, #56]
 810              	.LVL56:
 619:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       pwrclkchanged = SET;
 811              		.loc 1 619 0
 812 0328 0121     		mov	r1, #1
 813 032a 8846     		mov	r8, r1
 814 032c 12E0     		b	.L54
 815              	.L106:
 816 032e C046     		.align	2
 817              	.L105:
 818 0330 00100240 		.word	1073876992
 819 0334 FFFFFEFF 		.word	-65537
 820 0338 FFFFFBFF 		.word	-262145
 821 033c FFE0FFFF 		.word	-7937
 822 0340 FF1FFFFF 		.word	-57345
 823 0344 00000000 		.word	AHBPrescTable
 824 0348 00000000 		.word	SystemCoreClock
 825 034c FFFEFFFF 		.word	-257
ARM GAS  /tmp/ccm1sdDn.s 			page 43


 826              	.LVL57:
 827              	.L94:
 609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 828              		.loc 1 609 0
 829 0350 0022     		mov	r2, #0
 830 0352 9046     		mov	r8, r2
 831              	.LVL58:
 832              	.L54:
 622:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 833              		.loc 1 622 0
 834 0354 9F4B     		ldr	r3, .L107
 835 0356 1B68     		ldr	r3, [r3]
 836 0358 D805     		lsl	r0, r3, #23
 837 035a 15D4     		bmi	.L55
 625:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 838              		.loc 1 625 0
 839 035c 9D4B     		ldr	r3, .L107
 840 035e 1968     		ldr	r1, [r3]
 841 0360 8022     		mov	r2, #128
 842 0362 5200     		lsl	r2, r2, #1
 843 0364 0A43     		orr	r2, r1
 844 0366 1A60     		str	r2, [r3]
 628:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 845              		.loc 1 628 0
 846 0368 FFF7FEFF 		bl	HAL_GetTick
 847              	.LVL59:
 848 036c 071C     		mov	r7, r0
 849              	.LVL60:
 630:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 850              		.loc 1 630 0
 851 036e 994E     		ldr	r6, .L107
 852 0370 8025     		mov	r5, #128
 853 0372 6D00     		lsl	r5, r5, #1
 854 0374 05E0     		b	.L56
 855              	.LVL61:
 856              	.L57:
 632:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 857              		.loc 1 632 0
 858 0376 FFF7FEFF 		bl	HAL_GetTick
 859              	.LVL62:
 860 037a C31B     		sub	r3, r0, r7
 861 037c 642B     		cmp	r3, #100
 862 037e 00D9     		bls	.LCB829
 863 0380 0FE1     		b	.L95	@long jump
 864              	.LCB829:
 865              	.L56:
 630:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 866              		.loc 1 630 0 discriminator 1
 867 0382 3368     		ldr	r3, [r6]
 868 0384 2B42     		tst	r3, r5
 869 0386 F6D0     		beq	.L57
 870              	.LVL63:
 871              	.L55:
 640:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 872              		.loc 1 640 0
 873 0388 A368     		ldr	r3, [r4, #8]
 874 038a 8022     		mov	r2, #128
ARM GAS  /tmp/ccm1sdDn.s 			page 44


 875 038c 5200     		lsl	r2, r2, #1
 876 038e 9342     		cmp	r3, r2
 877 0390 06D1     		bne	.L58
 640:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 878              		.loc 1 640 0 is_stmt 0 discriminator 1
 879 0392 914B     		ldr	r3, .L107+4
 880 0394 196D     		ldr	r1, [r3, #80]
 881 0396 8022     		mov	r2, #128
 882 0398 5200     		lsl	r2, r2, #1
 883 039a 0A43     		orr	r2, r1
 884 039c 1A65     		str	r2, [r3, #80]
 885 039e 24E0     		b	.L59
 886              	.L58:
 640:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 887              		.loc 1 640 0 discriminator 2
 888 03a0 002B     		cmp	r3, #0
 889 03a2 09D1     		bne	.L60
 640:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 890              		.loc 1 640 0 discriminator 1
 891 03a4 8C4B     		ldr	r3, .L107+4
 892 03a6 196D     		ldr	r1, [r3, #80]
 893 03a8 8C4A     		ldr	r2, .L107+8
 894 03aa 0A40     		and	r2, r1
 895 03ac 1A65     		str	r2, [r3, #80]
 896 03ae 196D     		ldr	r1, [r3, #80]
 897 03b0 8B4A     		ldr	r2, .L107+12
 898 03b2 0A40     		and	r2, r1
 899 03b4 1A65     		str	r2, [r3, #80]
 900 03b6 18E0     		b	.L59
 901              	.L60:
 640:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 902              		.loc 1 640 0 discriminator 2
 903 03b8 A022     		mov	r2, #160
 904 03ba D200     		lsl	r2, r2, #3
 905 03bc 9342     		cmp	r3, r2
 906 03be 0BD1     		bne	.L61
 640:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 907              		.loc 1 640 0 discriminator 1
 908 03c0 854B     		ldr	r3, .L107+4
 909 03c2 196D     		ldr	r1, [r3, #80]
 910 03c4 8022     		mov	r2, #128
 911 03c6 D200     		lsl	r2, r2, #3
 912 03c8 0A43     		orr	r2, r1
 913 03ca 1A65     		str	r2, [r3, #80]
 914 03cc 196D     		ldr	r1, [r3, #80]
 915 03ce 8022     		mov	r2, #128
 916 03d0 5200     		lsl	r2, r2, #1
 917 03d2 0A43     		orr	r2, r1
 918 03d4 1A65     		str	r2, [r3, #80]
 919 03d6 08E0     		b	.L59
 920              	.L61:
 640:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 921              		.loc 1 640 0 discriminator 2
 922 03d8 7F4B     		ldr	r3, .L107+4
 923 03da 196D     		ldr	r1, [r3, #80]
 924 03dc 7F4A     		ldr	r2, .L107+8
 925 03de 0A40     		and	r2, r1
ARM GAS  /tmp/ccm1sdDn.s 			page 45


 926 03e0 1A65     		str	r2, [r3, #80]
 927 03e2 196D     		ldr	r1, [r3, #80]
 928 03e4 7E4A     		ldr	r2, .L107+12
 929 03e6 0A40     		and	r2, r1
 930 03e8 1A65     		str	r2, [r3, #80]
 931              	.L59:
 642:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 932              		.loc 1 642 0 is_stmt 1
 933 03ea A168     		ldr	r1, [r4, #8]
 934 03ec 0029     		cmp	r1, #0
 935 03ee 12D0     		beq	.L62
 645:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 936              		.loc 1 645 0
 937 03f0 FFF7FEFF 		bl	HAL_GetTick
 938              	.LVL64:
 939 03f4 8146     		mov	r9, r0
 940              	.LVL65:
 648:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 941              		.loc 1 648 0
 942 03f6 784E     		ldr	r6, .L107+4
 943 03f8 8025     		mov	r5, #128
 944 03fa AD00     		lsl	r5, r5, #2
 650:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 945              		.loc 1 650 0
 946 03fc 794F     		ldr	r7, .L107+16
 648:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 947              		.loc 1 648 0
 948 03fe 06E0     		b	.L63
 949              	.LVL66:
 950              	.L64:
 650:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 951              		.loc 1 650 0
 952 0400 FFF7FEFF 		bl	HAL_GetTick
 953              	.LVL67:
 954 0404 4A46     		mov	r2, r9
 955 0406 831A     		sub	r3, r0, r2
 956 0408 BB42     		cmp	r3, r7
 957 040a 00D9     		bls	.LCB920
 958 040c CBE0     		b	.L96	@long jump
 959              	.LCB920:
 960              	.L63:
 648:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 961              		.loc 1 648 0 discriminator 1
 962 040e 336D     		ldr	r3, [r6, #80]
 963 0410 2B42     		tst	r3, r5
 964 0412 F5D0     		beq	.L64
 965 0414 11E0     		b	.L65
 966              	.LVL68:
 967              	.L62:
 659:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 968              		.loc 1 659 0
 969 0416 FFF7FEFF 		bl	HAL_GetTick
 970              	.LVL69:
 971 041a 8146     		mov	r9, r0
 972              	.LVL70:
 662:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 973              		.loc 1 662 0
ARM GAS  /tmp/ccm1sdDn.s 			page 46


 974 041c 6E4E     		ldr	r6, .L107+4
 975 041e 8025     		mov	r5, #128
 976 0420 AD00     		lsl	r5, r5, #2
 664:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 977              		.loc 1 664 0
 978 0422 704F     		ldr	r7, .L107+16
 662:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 979              		.loc 1 662 0
 980 0424 06E0     		b	.L66
 981              	.LVL71:
 982              	.L67:
 664:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 983              		.loc 1 664 0
 984 0426 FFF7FEFF 		bl	HAL_GetTick
 985              	.LVL72:
 986 042a 4946     		mov	r1, r9
 987 042c 431A     		sub	r3, r0, r1
 988 042e BB42     		cmp	r3, r7
 989 0430 00D9     		bls	.LCB950
 990 0432 BAE0     		b	.L97	@long jump
 991              	.LCB950:
 992              	.L66:
 662:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 993              		.loc 1 662 0 discriminator 1
 994 0434 336D     		ldr	r3, [r6, #80]
 995 0436 2B42     		tst	r3, r5
 996 0438 F5D1     		bne	.L67
 997              	.L65:
 672:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     if(pwrclkchanged == SET)
 998              		.loc 1 672 0
 999 043a 4246     		mov	r2, r8
 1000 043c 012A     		cmp	r2, #1
 1001 043e 04D1     		bne	.L53
 1002              	.LVL73:
 674:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 1003              		.loc 1 674 0
 1004 0440 654B     		ldr	r3, .L107+4
 1005 0442 996B     		ldr	r1, [r3, #56]
 1006 0444 684A     		ldr	r2, .L107+20
 1007              	.LVL74:
 1008 0446 0A40     		and	r2, r1
 1009 0448 9A63     		str	r2, [r3, #56]
 1010              	.LVL75:
 1011              	.L53:
 1012              	.LBE3:
 680:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 1013              		.loc 1 680 0
 1014 044a 2368     		ldr	r3, [r4]
 1015 044c 9B06     		lsl	r3, r3, #26
 1016 044e 38D5     		bpl	.L68
 686:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 1017              		.loc 1 686 0
 1018 0450 A069     		ldr	r0, [r4, #24]
 1019 0452 0028     		cmp	r0, #0
 1020 0454 1DD0     		beq	.L69
 689:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         __HAL_RCC_HSI48_ENABLE();
 1021              		.loc 1 689 0
ARM GAS  /tmp/ccm1sdDn.s 			page 47


 1022 0456 604B     		ldr	r3, .L107+4
 1023 0458 9968     		ldr	r1, [r3, #8]
 1024 045a 0122     		mov	r2, #1
 1025 045c 1143     		orr	r1, r2
 1026 045e 9960     		str	r1, [r3, #8]
 1027 0460 596B     		ldr	r1, [r3, #52]
 1028 0462 0A43     		orr	r2, r1
 1029 0464 5A63     		str	r2, [r3, #52]
 1030 0466 614B     		ldr	r3, .L107+24
 1031 0468 196A     		ldr	r1, [r3, #32]
 1032 046a 8022     		mov	r2, #128
 1033 046c 9201     		lsl	r2, r2, #6
 1034 046e 0A43     		orr	r2, r1
 1035 0470 1A62     		str	r2, [r3, #32]
 692:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1036              		.loc 1 692 0
 1037 0472 FFF7FEFF 		bl	HAL_GetTick
 1038              	.LVL76:
 1039 0476 071C     		mov	r7, r0
 1040              	.LVL77:
 695:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 1041              		.loc 1 695 0
 1042 0478 574E     		ldr	r6, .L107+4
 1043 047a 0225     		mov	r5, #2
 1044 047c 05E0     		b	.L70
 1045              	.LVL78:
 1046              	.L71:
 697:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 1047              		.loc 1 697 0
 1048 047e FFF7FEFF 		bl	HAL_GetTick
 1049              	.LVL79:
 1050 0482 C31B     		sub	r3, r0, r7
 1051 0484 022B     		cmp	r3, #2
 1052 0486 00D9     		bls	.LCB1014
 1053 0488 91E0     		b	.L98	@long jump
 1054              	.LCB1014:
 1055              	.L70:
 695:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 1056              		.loc 1 695 0 discriminator 1
 1057 048a B368     		ldr	r3, [r6, #8]
 1058 048c 1D42     		tst	r5, r3
 1059 048e F6D0     		beq	.L71
 1060 0490 17E0     		b	.L68
 1061              	.LVL80:
 1062              	.L69:
 706:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         __HAL_RCC_HSI48_DISABLE();
 1063              		.loc 1 706 0
 1064 0492 514B     		ldr	r3, .L107+4
 1065 0494 9A68     		ldr	r2, [r3, #8]
 1066 0496 0121     		mov	r1, #1
 1067 0498 8A43     		bic	r2, r1
 1068 049a 9A60     		str	r2, [r3, #8]
 1069 049c 534B     		ldr	r3, .L107+24
 1070 049e 196A     		ldr	r1, [r3, #32]
 1071 04a0 534A     		ldr	r2, .L107+28
 1072 04a2 0A40     		and	r2, r1
 1073 04a4 1A62     		str	r2, [r3, #32]
ARM GAS  /tmp/ccm1sdDn.s 			page 48


 709:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1074              		.loc 1 709 0
 1075 04a6 FFF7FEFF 		bl	HAL_GetTick
 1076              	.LVL81:
 1077 04aa 071C     		mov	r7, r0
 1078              	.LVL82:
 712:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET)
 1079              		.loc 1 712 0
 1080 04ac 4A4E     		ldr	r6, .L107+4
 1081 04ae 0225     		mov	r5, #2
 1082 04b0 04E0     		b	.L72
 1083              	.LVL83:
 1084              	.L73:
 714:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 1085              		.loc 1 714 0
 1086 04b2 FFF7FEFF 		bl	HAL_GetTick
 1087              	.LVL84:
 1088 04b6 C31B     		sub	r3, r0, r7
 1089 04b8 022B     		cmp	r3, #2
 1090 04ba 7AD8     		bhi	.L99
 1091              	.L72:
 712:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET)
 1092              		.loc 1 712 0 discriminator 1
 1093 04bc B368     		ldr	r3, [r6, #8]
 1094 04be 1D42     		tst	r5, r3
 1095 04c0 F7D1     		bne	.L73
 1096              	.LVL85:
 1097              	.L68:
 726:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 1098              		.loc 1 726 0
 1099 04c2 A36A     		ldr	r3, [r4, #40]
 1100 04c4 002B     		cmp	r3, #0
 1101 04c6 76D0     		beq	.L100
 729:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 1102              		.loc 1 729 0
 1103 04c8 434A     		ldr	r2, .L107+4
 1104 04ca D268     		ldr	r2, [r2, #12]
 1105 04cc 0C21     		mov	r1, #12
 1106 04ce 0A40     		and	r2, r1
 1107 04d0 0C2A     		cmp	r2, #12
 1108 04d2 72D0     		beq	.L101
 731:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 1109              		.loc 1 731 0
 1110 04d4 022B     		cmp	r3, #2
 1111 04d6 34D1     		bne	.L74
 739:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 1112              		.loc 1 739 0
 1113 04d8 3F4B     		ldr	r3, .L107+4
 1114 04da 1968     		ldr	r1, [r3]
 1115 04dc 454A     		ldr	r2, .L107+32
 1116 04de 0A40     		and	r2, r1
 1117 04e0 1A60     		str	r2, [r3]
 742:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1118              		.loc 1 742 0
 1119 04e2 FFF7FEFF 		bl	HAL_GetTick
 1120              	.LVL86:
 1121 04e6 071C     		mov	r7, r0
ARM GAS  /tmp/ccm1sdDn.s 			page 49


 1122              	.LVL87:
 745:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 1123              		.loc 1 745 0
 1124 04e8 3B4E     		ldr	r6, .L107+4
 1125 04ea 8025     		mov	r5, #128
 1126 04ec AD04     		lsl	r5, r5, #18
 1127 04ee 04E0     		b	.L75
 1128              	.LVL88:
 1129              	.L76:
 747:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1130              		.loc 1 747 0
 1131 04f0 FFF7FEFF 		bl	HAL_GetTick
 1132              	.LVL89:
 1133 04f4 C31B     		sub	r3, r0, r7
 1134 04f6 022B     		cmp	r3, #2
 1135 04f8 61D8     		bhi	.L102
 1136              	.L75:
 745:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 1137              		.loc 1 745 0 discriminator 1
 1138 04fa 3368     		ldr	r3, [r6]
 1139 04fc 2B42     		tst	r3, r5
 1140 04fe F7D1     		bne	.L76
 754:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 1141              		.loc 1 754 0
 1142 0500 354B     		ldr	r3, .L107+4
 1143 0502 D968     		ldr	r1, [r3, #12]
 1144 0504 3C4A     		ldr	r2, .L107+36
 1145 0506 1140     		and	r1, r2
 1146 0508 E06A     		ldr	r0, [r4, #44]
 1147 050a 226B     		ldr	r2, [r4, #48]
 1148 050c 1043     		orr	r0, r2
 1149 050e 626B     		ldr	r2, [r4, #52]
 1150 0510 0243     		orr	r2, r0
 1151 0512 0A43     		orr	r2, r1
 1152 0514 DA60     		str	r2, [r3, #12]
 758:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 1153              		.loc 1 758 0
 1154 0516 1968     		ldr	r1, [r3]
 1155 0518 8022     		mov	r2, #128
 1156 051a 5204     		lsl	r2, r2, #17
 1157 051c 0A43     		orr	r2, r1
 1158 051e 1A60     		str	r2, [r3]
 761:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1159              		.loc 1 761 0
 1160 0520 FFF7FEFF 		bl	HAL_GetTick
 1161              	.LVL90:
 1162 0524 061C     		mov	r6, r0
 1163              	.LVL91:
 764:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 1164              		.loc 1 764 0
 1165 0526 2C4D     		ldr	r5, .L107+4
 1166 0528 8024     		mov	r4, #128
 1167              	.LVL92:
 1168 052a A404     		lsl	r4, r4, #18
 1169 052c 04E0     		b	.L77
 1170              	.LVL93:
 1171              	.L78:
ARM GAS  /tmp/ccm1sdDn.s 			page 50


 766:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1172              		.loc 1 766 0
 1173 052e FFF7FEFF 		bl	HAL_GetTick
 1174              	.LVL94:
 1175 0532 831B     		sub	r3, r0, r6
 1176 0534 022B     		cmp	r3, #2
 1177 0536 44D8     		bhi	.L103
 1178              	.L77:
 764:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 1179              		.loc 1 764 0 discriminator 1
 1180 0538 2B68     		ldr	r3, [r5]
 1181 053a 2342     		tst	r3, r4
 1182 053c F7D0     		beq	.L78
 796:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   return HAL_OK;
 1183              		.loc 1 796 0
 1184 053e 0020     		mov	r0, #0
 1185 0540 42E0     		b	.L19
 1186              	.LVL95:
 1187              	.L74:
 775:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 1188              		.loc 1 775 0
 1189 0542 254B     		ldr	r3, .L107+4
 1190 0544 1968     		ldr	r1, [r3]
 1191 0546 2B4A     		ldr	r2, .L107+32
 1192 0548 0A40     		and	r2, r1
 1193 054a 1A60     		str	r2, [r3]
 778:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1194              		.loc 1 778 0
 1195 054c FFF7FEFF 		bl	HAL_GetTick
 1196              	.LVL96:
 1197 0550 061C     		mov	r6, r0
 1198              	.LVL97:
 781:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 1199              		.loc 1 781 0
 1200 0552 214D     		ldr	r5, .L107+4
 1201 0554 8024     		mov	r4, #128
 1202              	.LVL98:
 1203 0556 A404     		lsl	r4, r4, #18
 1204 0558 04E0     		b	.L79
 1205              	.LVL99:
 1206              	.L80:
 783:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1207              		.loc 1 783 0
 1208 055a FFF7FEFF 		bl	HAL_GetTick
 1209              	.LVL100:
 1210 055e 831B     		sub	r3, r0, r6
 1211 0560 022B     		cmp	r3, #2
 1212 0562 30D8     		bhi	.L104
 1213              	.L79:
 781:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 1214              		.loc 1 781 0 discriminator 1
 1215 0564 2B68     		ldr	r3, [r5]
 1216 0566 2342     		tst	r3, r4
 1217 0568 F7D1     		bne	.L80
 796:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   return HAL_OK;
 1218              		.loc 1 796 0
 1219 056a 0020     		mov	r0, #0
ARM GAS  /tmp/ccm1sdDn.s 			page 51


 1220 056c 2CE0     		b	.L19
 1221              	.LVL101:
 1222              	.L81:
 352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         return HAL_ERROR;
 1223              		.loc 1 352 0
 1224 056e 0120     		mov	r0, #1
 1225 0570 2AE0     		b	.L19
 1226              	.LVL102:
 1227              	.L82:
 372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1228              		.loc 1 372 0
 1229 0572 0320     		mov	r0, #3
 1230 0574 28E0     		b	.L19
 1231              	.L83:
 386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1232              		.loc 1 386 0
 1233 0576 0320     		mov	r0, #3
 1234 0578 26E0     		b	.L19
 1235              	.LVL103:
 1236              	.L84:
 406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         return HAL_ERROR;
 1237              		.loc 1 406 0
 1238 057a 0120     		mov	r0, #1
 1239 057c 24E0     		b	.L19
 1240              	.LVL104:
 1241              	.L85:
 431:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1242              		.loc 1 431 0
 1243 057e 0320     		mov	r0, #3
 1244 0580 22E0     		b	.L19
 1245              	.L86:
 451:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1246              		.loc 1 451 0
 1247 0582 0320     		mov	r0, #3
 1248 0584 20E0     		b	.L19
 1249              	.LVL105:
 1250              	.L87:
 465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         return HAL_ERROR;
 1251              		.loc 1 465 0
 1252 0586 0120     		mov	r0, #1
 1253 0588 1EE0     		b	.L19
 1254              	.L88:
 482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****             return HAL_ERROR;
 1255              		.loc 1 482 0
 1256 058a 0120     		mov	r0, #1
 1257 058c 1CE0     		b	.L19
 1258              	.L89:
 501:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****             return HAL_ERROR;
 1259              		.loc 1 501 0
 1260 058e 0120     		mov	r0, #1
 1261 0590 1AE0     		b	.L19
 1262              	.LVL106:
 1263              	.L90:
 532:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1264              		.loc 1 532 0
 1265 0592 0320     		mov	r0, #3
 1266 0594 18E0     		b	.L19
ARM GAS  /tmp/ccm1sdDn.s 			page 52


 1267              	.L91:
 558:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1268              		.loc 1 558 0
 1269 0596 0320     		mov	r0, #3
 1270 0598 16E0     		b	.L19
 1271              	.L92:
 584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1272              		.loc 1 584 0
 1273 059a 0320     		mov	r0, #3
 1274 059c 14E0     		b	.L19
 1275              	.L93:
 601:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1276              		.loc 1 601 0
 1277 059e 0320     		mov	r0, #3
 1278 05a0 12E0     		b	.L19
 1279              	.LVL107:
 1280              	.L95:
 1281              	.LBB4:
 634:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1282              		.loc 1 634 0
 1283 05a2 0320     		mov	r0, #3
 1284 05a4 10E0     		b	.L19
 1285              	.LVL108:
 1286              	.L96:
 652:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1287              		.loc 1 652 0
 1288 05a6 0320     		mov	r0, #3
 1289 05a8 0EE0     		b	.L19
 1290              	.LVL109:
 1291              	.L97:
 666:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1292              		.loc 1 666 0
 1293 05aa 0320     		mov	r0, #3
 1294 05ac 0CE0     		b	.L19
 1295              	.LVL110:
 1296              	.L98:
 1297              	.LBE4:
 699:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1298              		.loc 1 699 0
 1299 05ae 0320     		mov	r0, #3
 1300 05b0 0AE0     		b	.L19
 1301              	.L99:
 716:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1302              		.loc 1 716 0
 1303 05b2 0320     		mov	r0, #3
 1304 05b4 08E0     		b	.L19
 1305              	.LVL111:
 1306              	.L100:
 796:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   return HAL_OK;
 1307              		.loc 1 796 0
 1308 05b6 0020     		mov	r0, #0
 1309 05b8 06E0     		b	.L19
 1310              	.L101:
 792:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       return HAL_ERROR;
 1311              		.loc 1 792 0
 1312 05ba 0120     		mov	r0, #1
 1313 05bc 04E0     		b	.L19
ARM GAS  /tmp/ccm1sdDn.s 			page 53


 1314              	.LVL112:
 1315              	.L102:
 749:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1316              		.loc 1 749 0
 1317 05be 0320     		mov	r0, #3
 1318 05c0 02E0     		b	.L19
 1319              	.LVL113:
 1320              	.L103:
 768:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1321              		.loc 1 768 0
 1322 05c2 0320     		mov	r0, #3
 1323 05c4 00E0     		b	.L19
 1324              	.L104:
 785:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1325              		.loc 1 785 0
 1326 05c6 0320     		mov	r0, #3
 1327              	.LVL114:
 1328              	.L19:
 797:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** }
 1329              		.loc 1 797 0
 1330 05c8 03B0     		add	sp, sp, #12
 1331              		@ sp needed
 1332 05ca 0CBC     		pop	{r2, r3}
 1333 05cc 9046     		mov	r8, r2
 1334 05ce 9946     		mov	r9, r3
 1335 05d0 F0BD     		pop	{r4, r5, r6, r7, pc}
 1336              	.L108:
 1337 05d2 C046     		.align	2
 1338              	.L107:
 1339 05d4 00700040 		.word	1073770496
 1340 05d8 00100240 		.word	1073876992
 1341 05dc FFFEFFFF 		.word	-257
 1342 05e0 FFFBFFFF 		.word	-1025
 1343 05e4 88130000 		.word	5000
 1344 05e8 FFFFFFEF 		.word	-268435457
 1345 05ec 00000140 		.word	1073807360
 1346 05f0 FFDFFFFF 		.word	-8193
 1347 05f4 FFFFFFFE 		.word	-16777217
 1348 05f8 FFFF02FF 		.word	-16580609
 1349              		.cfi_endproc
 1350              	.LFE37:
 1352              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 1353              		.align	2
 1354              		.global	HAL_RCC_MCOConfig
 1355              		.code	16
 1356              		.thumb_func
 1358              	HAL_RCC_MCOConfig:
 1359              	.LFB39:
1063:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** {
 1360              		.loc 1 1063 0
 1361              		.cfi_startproc
 1362              	.LVL115:
 1363 0000 30B5     		push	{r4, r5, lr}
 1364              	.LCFI5:
 1365              		.cfi_def_cfa_offset 12
 1366              		.cfi_offset 4, -12
 1367              		.cfi_offset 5, -8
ARM GAS  /tmp/ccm1sdDn.s 			page 54


 1368              		.cfi_offset 14, -4
 1369 0002 89B0     		sub	sp, sp, #36
 1370              	.LCFI6:
 1371              		.cfi_def_cfa_offset 48
 1372 0004 0D1C     		mov	r5, r1
 1373 0006 141C     		mov	r4, r2
1064:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   GPIO_InitTypeDef gpio = {0};
 1374              		.loc 1 1064 0
 1375 0008 0023     		mov	r3, #0
 1376 000a 0593     		str	r3, [sp, #20]
 1377 000c 0793     		str	r3, [sp, #28]
1072:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   gpio.Mode      = GPIO_MODE_AF_PP;
 1378              		.loc 1 1072 0
 1379 000e 0223     		mov	r3, #2
 1380 0010 0493     		str	r3, [sp, #16]
1073:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   gpio.Speed     = GPIO_SPEED_FREQ_HIGH;
 1381              		.loc 1 1073 0
 1382 0012 0693     		str	r3, [sp, #24]
1075:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if(RCC_MCOx == RCC_MCO1)
 1383              		.loc 1 1075 0
 1384 0014 0028     		cmp	r0, #0
 1385 0016 11D1     		bne	.L110
1077:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     gpio.Pin       = MCO1_PIN;
 1386              		.loc 1 1077 0
 1387 0018 8023     		mov	r3, #128
 1388 001a 5B00     		lsl	r3, r3, #1
 1389 001c 0393     		str	r3, [sp, #12]
 1390              	.LBB5:
1081:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     MCO1_CLK_ENABLE();
 1391              		.loc 1 1081 0
 1392 001e 154B     		ldr	r3, .L112
 1393 0020 D96A     		ldr	r1, [r3, #44]
 1394              	.LVL116:
 1395 0022 0122     		mov	r2, #1
 1396              	.LVL117:
 1397 0024 1143     		orr	r1, r2
 1398 0026 D962     		str	r1, [r3, #44]
 1399 0028 DB6A     		ldr	r3, [r3, #44]
 1400 002a 1A40     		and	r2, r3
 1401 002c 0192     		str	r2, [sp, #4]
 1402 002e 019B     		ldr	r3, [sp, #4]
 1403              	.LBE5:
1082:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     HAL_GPIO_Init(MCO1_GPIO_PORT, &gpio);
 1404              		.loc 1 1082 0
 1405 0030 A020     		mov	r0, #160
 1406              	.LVL118:
 1407 0032 C005     		lsl	r0, r0, #23
 1408 0034 03A9     		add	r1, sp, #12
 1409 0036 FFF7FEFF 		bl	HAL_GPIO_Init
 1410              	.LVL119:
 1411 003a 10E0     		b	.L111
 1412              	.LVL120:
 1413              	.L110:
1098:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     gpio.Pin       = MCO2_PIN;
 1414              		.loc 1 1098 0
 1415 003c 8023     		mov	r3, #128
 1416 003e 9B00     		lsl	r3, r3, #2
ARM GAS  /tmp/ccm1sdDn.s 			page 55


 1417 0040 0393     		str	r3, [sp, #12]
 1418              	.LBB6:
1102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     MCO2_CLK_ENABLE();
 1419              		.loc 1 1102 0
 1420 0042 0C4B     		ldr	r3, .L112
 1421 0044 D96A     		ldr	r1, [r3, #44]
 1422              	.LVL121:
 1423 0046 0122     		mov	r2, #1
 1424              	.LVL122:
 1425 0048 1143     		orr	r1, r2
 1426 004a D962     		str	r1, [r3, #44]
 1427 004c DB6A     		ldr	r3, [r3, #44]
 1428 004e 1A40     		and	r2, r3
 1429 0050 0292     		str	r2, [sp, #8]
 1430 0052 029B     		ldr	r3, [sp, #8]
 1431              	.LBE6:
1103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     HAL_GPIO_Init(MCO2_GPIO_PORT, &gpio);
 1432              		.loc 1 1103 0
 1433 0054 A020     		mov	r0, #160
 1434              	.LVL123:
 1435 0056 C005     		lsl	r0, r0, #23
 1436 0058 03A9     		add	r1, sp, #12
 1437 005a FFF7FEFF 		bl	HAL_GPIO_Init
 1438              	.LVL124:
 1439              	.L111:
1107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   __HAL_RCC_MCO1_CONFIG(RCC_MCOSource, RCC_MCODiv);
 1440              		.loc 1 1107 0
 1441 005e 054B     		ldr	r3, .L112
 1442 0060 D968     		ldr	r1, [r3, #12]
 1443 0062 054A     		ldr	r2, .L112+4
 1444 0064 0A40     		and	r2, r1
 1445 0066 2543     		orr	r5, r4
 1446              	.LVL125:
 1447 0068 141C     		mov	r4, r2
 1448              	.LVL126:
 1449 006a 2C43     		orr	r4, r5
 1450 006c DC60     		str	r4, [r3, #12]
1108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** }
 1451              		.loc 1 1108 0
 1452 006e 09B0     		add	sp, sp, #36
 1453              		@ sp needed
 1454 0070 30BD     		pop	{r4, r5, pc}
 1455              	.L113:
 1456 0072 C046     		.align	2
 1457              	.L112:
 1458 0074 00100240 		.word	1073876992
 1459 0078 FFFFFF80 		.word	-2130706433
 1460              		.cfi_endproc
 1461              	.LFE39:
 1463              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 1464              		.align	2
 1465              		.global	HAL_RCC_EnableCSS
 1466              		.code	16
 1467              		.thumb_func
 1469              	HAL_RCC_EnableCSS:
 1470              	.LFB40:
1121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** {
ARM GAS  /tmp/ccm1sdDn.s 			page 56


 1471              		.loc 1 1121 0
 1472              		.cfi_startproc
1122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_CSSON) ;
 1473              		.loc 1 1122 0
 1474 0000 034B     		ldr	r3, .L115
 1475 0002 1968     		ldr	r1, [r3]
 1476 0004 8022     		mov	r2, #128
 1477 0006 1203     		lsl	r2, r2, #12
 1478 0008 0A43     		orr	r2, r1
 1479 000a 1A60     		str	r2, [r3]
1123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** }
 1480              		.loc 1 1123 0
 1481              		@ sp needed
 1482 000c 7047     		bx	lr
 1483              	.L116:
 1484 000e C046     		.align	2
 1485              	.L115:
 1486 0010 00100240 		.word	1073876992
 1487              		.cfi_endproc
 1488              	.LFE40:
 1490              		.global	__aeabi_uidiv
 1491              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1492              		.align	2
 1493              		.global	HAL_RCC_GetSysClockFreq
 1494              		.code	16
 1495              		.thumb_func
 1497              	HAL_RCC_GetSysClockFreq:
 1498              	.LFB41:
1157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** {
 1499              		.loc 1 1157 0
 1500              		.cfi_startproc
 1501 0000 08B5     		push	{r3, lr}
 1502              	.LCFI7:
 1503              		.cfi_def_cfa_offset 8
 1504              		.cfi_offset 3, -8
 1505              		.cfi_offset 14, -4
 1506              	.LVL127:
1161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   tmpreg = RCC->CFGR;
 1507              		.loc 1 1161 0
 1508 0002 1D4B     		ldr	r3, .L128
 1509 0004 D968     		ldr	r1, [r3, #12]
 1510              	.LVL128:
1164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   switch (tmpreg & RCC_CFGR_SWS)
 1511              		.loc 1 1164 0
 1512 0006 0C23     		mov	r3, #12
 1513 0008 0B40     		and	r3, r1
 1514 000a 082B     		cmp	r3, #8
 1515 000c 30D0     		beq	.L125
 1516 000e 0C2B     		cmp	r3, #12
 1517 0010 07D0     		beq	.L120
 1518 0012 042B     		cmp	r3, #4
 1519 0014 23D1     		bne	.L127
1168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       if ((RCC->CR & RCC_CR_HSIDIVF) != 0)
 1520              		.loc 1 1168 0
 1521 0016 184B     		ldr	r3, .L128
 1522 0018 1B68     		ldr	r3, [r3]
 1523 001a D806     		lsl	r0, r3, #27
ARM GAS  /tmp/ccm1sdDn.s 			page 57


 1524 001c 2AD5     		bpl	.L126
1170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         sysclockfreq =  (HSI_VALUE >> 2);
 1525              		.loc 1 1170 0
 1526 001e 1748     		ldr	r0, .L128+4
 1527 0020 29E0     		b	.L119
 1528              	.L120:
1185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       pllm = PLLMulTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_BITNUMBER];
 1529              		.loc 1 1185 0
 1530 0022 8B02     		lsl	r3, r1, #10
 1531 0024 1B0F     		lsr	r3, r3, #28
 1532 0026 164A     		ldr	r2, .L128+8
 1533 0028 D25C     		ldrb	r2, [r2, r3]
 1534              	.LVL129:
1186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       plld = ((uint32_t)(tmpreg & RCC_CFGR_PLLDIV) >> RCC_CFGR_PLLDIV_BITNUMBER) + 1;
 1535              		.loc 1 1186 0
 1536 002a 0902     		lsl	r1, r1, #8
 1537              	.LVL130:
 1538 002c 890F     		lsr	r1, r1, #30
 1539 002e 0131     		add	r1, r1, #1
 1540              	.LVL131:
1187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 1541              		.loc 1 1187 0
 1542 0030 114B     		ldr	r3, .L128
 1543 0032 DB68     		ldr	r3, [r3, #12]
 1544 0034 D803     		lsl	r0, r3, #15
 1545 0036 04D5     		bpl	.L122
1190:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         pllvco = (HSE_VALUE * pllm) / plld;
 1546              		.loc 1 1190 0
 1547 0038 1248     		ldr	r0, .L128+12
 1548 003a 5043     		mul	r0, r2
 1549 003c FFF7FEFF 		bl	__aeabi_uidiv
 1550              	.LVL132:
 1551 0040 19E0     		b	.L119
 1552              	.LVL133:
 1553              	.L122:
1194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         if ((RCC->CR & RCC_CR_HSIDIVF) != 0)
 1554              		.loc 1 1194 0
 1555 0042 0D4B     		ldr	r3, .L128
 1556 0044 1B68     		ldr	r3, [r3]
 1557 0046 D806     		lsl	r0, r3, #27
 1558 0048 04D5     		bpl	.L124
1196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           pllvco = ((HSI_VALUE >> 2) * pllm) / plld;
 1559              		.loc 1 1196 0
 1560 004a 0C48     		ldr	r0, .L128+4
 1561 004c 5043     		mul	r0, r2
 1562 004e FFF7FEFF 		bl	__aeabi_uidiv
 1563              	.LVL134:
 1564 0052 10E0     		b	.L119
 1565              	.LVL135:
 1566              	.L124:
1200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****          pllvco = (HSI_VALUE * pllm) / plld;
 1567              		.loc 1 1200 0
 1568 0054 0C48     		ldr	r0, .L128+16
 1569 0056 5043     		mul	r0, r2
 1570 0058 FFF7FEFF 		bl	__aeabi_uidiv
 1571              	.LVL136:
1204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       break;
ARM GAS  /tmp/ccm1sdDn.s 			page 58


 1572              		.loc 1 1204 0
 1573 005c 0BE0     		b	.L119
 1574              	.LVL137:
 1575              	.L127:
1209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       msiclkrange = (RCC->ICSCR & RCC_ICSCR_MSIRANGE ) >> RCC_ICSCR_MSIRANGE_BITNUMBER;
 1576              		.loc 1 1209 0
 1577 005e 064B     		ldr	r3, .L128
 1578 0060 5B68     		ldr	r3, [r3, #4]
 1579 0062 1B04     		lsl	r3, r3, #16
 1580 0064 5B0F     		lsr	r3, r3, #29
 1581              	.LVL138:
1210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       sysclockfreq = (32768 * (1 << (msiclkrange + 1)));
 1582              		.loc 1 1210 0
 1583 0066 0133     		add	r3, r3, #1
 1584              	.LVL139:
 1585 0068 8020     		mov	r0, #128
 1586 006a 0002     		lsl	r0, r0, #8
 1587 006c 9840     		lsl	r0, r0, r3
 1588              	.LVL140:
1211:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       break;
 1589              		.loc 1 1211 0
 1590 006e 02E0     		b	.L119
 1591              	.LVL141:
 1592              	.L125:
1180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
 1593              		.loc 1 1180 0
 1594 0070 0448     		ldr	r0, .L128+12
 1595 0072 00E0     		b	.L119
 1596              	.L126:
1174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         sysclockfreq =  HSI_VALUE;
 1597              		.loc 1 1174 0
 1598 0074 0448     		ldr	r0, .L128+16
 1599              	.LVL142:
 1600              	.L119:
1215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** }
 1601              		.loc 1 1215 0
 1602              		@ sp needed
 1603 0076 08BD     		pop	{r3, pc}
 1604              	.L129:
 1605              		.align	2
 1606              	.L128:
 1607 0078 00100240 		.word	1073876992
 1608 007c 00093D00 		.word	4000000
 1609 0080 00000000 		.word	PLLMulTable
 1610 0084 00127A00 		.word	8000000
 1611 0088 0024F400 		.word	16000000
 1612              		.cfi_endproc
 1613              	.LFE41:
 1615              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1616              		.align	2
 1617              		.global	HAL_RCC_ClockConfig
 1618              		.code	16
 1619              		.thumb_func
 1621              	HAL_RCC_ClockConfig:
 1622              	.LFB38:
 826:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** {
 1623              		.loc 1 826 0
ARM GAS  /tmp/ccm1sdDn.s 			page 59


 1624              		.cfi_startproc
 1625              	.LVL143:
 1626 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1627              	.LCFI8:
 1628              		.cfi_def_cfa_offset 24
 1629              		.cfi_offset 3, -24
 1630              		.cfi_offset 4, -20
 1631              		.cfi_offset 5, -16
 1632              		.cfi_offset 6, -12
 1633              		.cfi_offset 7, -8
 1634              		.cfi_offset 14, -4
 1635 0002 4F46     		mov	r7, r9
 1636 0004 4646     		mov	r6, r8
 1637 0006 C0B4     		push	{r6, r7}
 1638              	.LCFI9:
 1639              		.cfi_def_cfa_offset 32
 1640              		.cfi_offset 8, -32
 1641              		.cfi_offset 9, -28
 1642 0008 041C     		mov	r4, r0
 1643 000a 0D1C     		mov	r5, r1
 1644              	.LVL144:
 839:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if(FLatency > (FLASH->ACR & FLASH_ACR_LATENCY))
 1645              		.loc 1 839 0
 1646 000c 6B4B     		ldr	r3, .L169
 1647 000e 1B68     		ldr	r3, [r3]
 1648 0010 0122     		mov	r2, #1
 1649 0012 1340     		and	r3, r2
 1650 0014 8B42     		cmp	r3, r1
 1651 0016 09D2     		bcs	.L131
 842:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1652              		.loc 1 842 0
 1653 0018 684B     		ldr	r3, .L169
 1654 001a 1968     		ldr	r1, [r3]
 1655              	.LVL145:
 1656 001c 9143     		bic	r1, r2
 1657 001e 2943     		orr	r1, r5
 1658 0020 1960     		str	r1, [r3]
 846:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 1659              		.loc 1 846 0
 1660 0022 1B68     		ldr	r3, [r3]
 1661 0024 1A40     		and	r2, r3
 1662 0026 AA42     		cmp	r2, r5
 1663 0028 00D0     		beq	.LCB1689
 1664 002a B0E0     		b	.L152	@long jump
 1665              	.LCB1689:
 1666              	.L131:
 853:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 1667              		.loc 1 853 0
 1668 002c 2168     		ldr	r1, [r4]
 1669 002e 8907     		lsl	r1, r1, #30
 1670 0030 06D5     		bpl	.L133
 856:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 1671              		.loc 1 856 0
 1672 0032 634B     		ldr	r3, .L169+4
 1673 0034 DA68     		ldr	r2, [r3, #12]
 1674 0036 F021     		mov	r1, #240
 1675 0038 8A43     		bic	r2, r1
ARM GAS  /tmp/ccm1sdDn.s 			page 60


 1676 003a A168     		ldr	r1, [r4, #8]
 1677 003c 0A43     		orr	r2, r1
 1678 003e DA60     		str	r2, [r3, #12]
 1679              	.L133:
 860:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 1680              		.loc 1 860 0
 1681 0040 2268     		ldr	r2, [r4]
 1682 0042 D207     		lsl	r2, r2, #31
 1683 0044 6FD5     		bpl	.L134
 865:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 1684              		.loc 1 865 0
 1685 0046 6368     		ldr	r3, [r4, #4]
 1686 0048 022B     		cmp	r3, #2
 1687 004a 04D1     		bne	.L135
 868:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 1688              		.loc 1 868 0
 1689 004c 5C4A     		ldr	r2, .L169+4
 1690 004e 1268     		ldr	r2, [r2]
 1691 0050 9103     		lsl	r1, r2, #14
 1692 0052 13D4     		bmi	.L136
 1693 0054 9DE0     		b	.L153
 1694              	.L135:
 874:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 1695              		.loc 1 874 0
 1696 0056 032B     		cmp	r3, #3
 1697 0058 04D1     		bne	.L137
 877:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 1698              		.loc 1 877 0
 1699 005a 594A     		ldr	r2, .L169+4
 1700 005c 1268     		ldr	r2, [r2]
 1701 005e 9101     		lsl	r1, r2, #6
 1702 0060 0CD4     		bmi	.L136
 1703 0062 98E0     		b	.L154
 1704              	.L137:
 883:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI)
 1705              		.loc 1 883 0
 1706 0064 012B     		cmp	r3, #1
 1707 0066 04D1     		bne	.L138
 886:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 1708              		.loc 1 886 0
 1709 0068 554A     		ldr	r2, .L169+4
 1710 006a 1268     		ldr	r2, [r2]
 1711 006c 5107     		lsl	r1, r2, #29
 1712 006e 05D4     		bmi	.L136
 1713 0070 93E0     		b	.L155
 1714              	.L138:
 895:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) == RESET)
 1715              		.loc 1 895 0
 1716 0072 534A     		ldr	r2, .L169+4
 1717 0074 1268     		ldr	r2, [r2]
 1718 0076 9105     		lsl	r1, r2, #22
 1719 0078 00D4     		bmi	.LCB1755
 1720 007a 90E0     		b	.L156	@long jump
 1721              	.LCB1755:
 1722              	.L136:
 900:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 1723              		.loc 1 900 0
ARM GAS  /tmp/ccm1sdDn.s 			page 61


 1724 007c 504A     		ldr	r2, .L169+4
 1725 007e D168     		ldr	r1, [r2, #12]
 1726 0080 0320     		mov	r0, #3
 1727              	.LVL146:
 1728 0082 8143     		bic	r1, r0
 1729 0084 0B43     		orr	r3, r1
 1730 0086 D360     		str	r3, [r2, #12]
 903:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 1731              		.loc 1 903 0
 1732 0088 FFF7FEFF 		bl	HAL_GetTick
 1733              	.LVL147:
 1734 008c 061C     		mov	r6, r0
 1735              	.LVL148:
 905:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 1736              		.loc 1 905 0
 1737 008e 6368     		ldr	r3, [r4, #4]
 1738 0090 022B     		cmp	r3, #2
 1739 0092 11D1     		bne	.L162
 1740 0094 05E0     		b	.L139
 1741              	.LVL149:
 1742              	.L141:
 909:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 1743              		.loc 1 909 0
 1744 0096 FFF7FEFF 		bl	HAL_GetTick
 1745              	.LVL150:
 1746 009a 801B     		sub	r0, r0, r6
 1747 009c 4845     		cmp	r0, r9
 1748 009e 05D9     		bls	.L163
 1749 00a0 7FE0     		b	.L157
 1750              	.LVL151:
 1751              	.L139:
 907:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 1752              		.loc 1 907 0 discriminator 1
 1753 00a2 474A     		ldr	r2, .L169+4
 1754 00a4 9046     		mov	r8, r2
 1755 00a6 0C27     		mov	r7, #12
 909:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 1756              		.loc 1 909 0 discriminator 1
 1757 00a8 464B     		ldr	r3, .L169+8
 1758 00aa 9946     		mov	r9, r3
 1759              	.LVL152:
 1760              	.L163:
 907:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 1761              		.loc 1 907 0 discriminator 1
 1762 00ac 4146     		mov	r1, r8
 1763 00ae CB68     		ldr	r3, [r1, #12]
 1764 00b0 3B40     		and	r3, r7
 1765 00b2 082B     		cmp	r3, #8
 1766 00b4 EFD1     		bne	.L141
 1767 00b6 36E0     		b	.L134
 1768              	.LVL153:
 1769              	.L162:
 915:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 1770              		.loc 1 915 0
 1771 00b8 032B     		cmp	r3, #3
 1772 00ba 11D1     		bne	.L164
 1773 00bc 05E0     		b	.L142
ARM GAS  /tmp/ccm1sdDn.s 			page 62


 1774              	.LVL154:
 1775              	.L144:
 919:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 1776              		.loc 1 919 0
 1777 00be FFF7FEFF 		bl	HAL_GetTick
 1778              	.LVL155:
 1779 00c2 801B     		sub	r0, r0, r6
 1780 00c4 4845     		cmp	r0, r9
 1781 00c6 05D9     		bls	.L165
 1782 00c8 6DE0     		b	.L158
 1783              	.LVL156:
 1784              	.L142:
 917:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 1785              		.loc 1 917 0 discriminator 1
 1786 00ca 3D4A     		ldr	r2, .L169+4
 1787 00cc 9046     		mov	r8, r2
 1788 00ce 0C27     		mov	r7, #12
 919:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 1789              		.loc 1 919 0 discriminator 1
 1790 00d0 3C4B     		ldr	r3, .L169+8
 1791 00d2 9946     		mov	r9, r3
 1792              	.LVL157:
 1793              	.L165:
 917:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 1794              		.loc 1 917 0 discriminator 1
 1795 00d4 4146     		mov	r1, r8
 1796 00d6 CB68     		ldr	r3, [r1, #12]
 1797 00d8 3B40     		and	r3, r7
 1798 00da 0C2B     		cmp	r3, #12
 1799 00dc EFD1     		bne	.L144
 1800 00de 22E0     		b	.L134
 1801              	.LVL158:
 1802              	.L164:
 925:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI)
 1803              		.loc 1 925 0
 1804 00e0 012B     		cmp	r3, #1
 1805 00e2 17D1     		bne	.L166
 1806 00e4 05E0     		b	.L145
 1807              	.LVL159:
 1808              	.L147:
 929:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 1809              		.loc 1 929 0
 1810 00e6 FFF7FEFF 		bl	HAL_GetTick
 1811              	.LVL160:
 1812 00ea 801B     		sub	r0, r0, r6
 1813 00ec 4845     		cmp	r0, r9
 1814 00ee 05D9     		bls	.L167
 1815 00f0 5BE0     		b	.L159
 1816              	.LVL161:
 1817              	.L145:
 927:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 1818              		.loc 1 927 0 discriminator 1
 1819 00f2 334A     		ldr	r2, .L169+4
 1820 00f4 9046     		mov	r8, r2
 1821 00f6 0C27     		mov	r7, #12
 929:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 1822              		.loc 1 929 0 discriminator 1
ARM GAS  /tmp/ccm1sdDn.s 			page 63


 1823 00f8 324B     		ldr	r3, .L169+8
 1824 00fa 9946     		mov	r9, r3
 1825              	.LVL162:
 1826              	.L167:
 927:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 1827              		.loc 1 927 0 discriminator 1
 1828 00fc 4146     		mov	r1, r8
 1829 00fe CB68     		ldr	r3, [r1, #12]
 1830 0100 3B40     		and	r3, r7
 1831 0102 042B     		cmp	r3, #4
 1832 0104 EFD1     		bne	.L147
 1833 0106 0EE0     		b	.L134
 1834              	.L148:
 939:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 1835              		.loc 1 939 0
 1836 0108 FFF7FEFF 		bl	HAL_GetTick
 1837              	.LVL163:
 1838 010c 801B     		sub	r0, r0, r6
 1839 010e 4845     		cmp	r0, r9
 1840 0110 05D9     		bls	.L168
 1841 0112 4CE0     		b	.L160
 1842              	.LVL164:
 1843              	.L166:
 937:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       while(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_MSI)
 1844              		.loc 1 937 0 discriminator 1
 1845 0114 2A4A     		ldr	r2, .L169+4
 1846 0116 9046     		mov	r8, r2
 1847 0118 0C27     		mov	r7, #12
 939:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 1848              		.loc 1 939 0 discriminator 1
 1849 011a 2A4B     		ldr	r3, .L169+8
 1850 011c 9946     		mov	r9, r3
 1851              	.LVL165:
 1852              	.L168:
 937:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       while(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_MSI)
 1853              		.loc 1 937 0 discriminator 1
 1854 011e 4146     		mov	r1, r8
 1855 0120 CB68     		ldr	r3, [r1, #12]
 1856 0122 1F42     		tst	r7, r3
 1857 0124 F0D1     		bne	.L148
 1858              	.LVL166:
 1859              	.L134:
 947:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if(FLatency < (FLASH->ACR & FLASH_ACR_LATENCY))
 1860              		.loc 1 947 0
 1861 0126 254B     		ldr	r3, .L169
 1862 0128 1B68     		ldr	r3, [r3]
 1863 012a 0122     		mov	r2, #1
 1864 012c 1340     		and	r3, r2
 1865 012e AB42     		cmp	r3, r5
 1866 0130 08D9     		bls	.L149
 950:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1867              		.loc 1 950 0
 1868 0132 224B     		ldr	r3, .L169
 1869 0134 1968     		ldr	r1, [r3]
 1870 0136 9143     		bic	r1, r2
 1871 0138 2943     		orr	r1, r5
 1872 013a 1960     		str	r1, [r3]
ARM GAS  /tmp/ccm1sdDn.s 			page 64


 954:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 1873              		.loc 1 954 0
 1874 013c 1B68     		ldr	r3, [r3]
 1875 013e 1A40     		and	r2, r3
 1876 0140 AA42     		cmp	r2, r5
 1877 0142 36D1     		bne	.L161
 1878              	.L149:
 961:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1879              		.loc 1 961 0
 1880 0144 2268     		ldr	r2, [r4]
 1881 0146 5207     		lsl	r2, r2, #29
 1882 0148 06D5     		bpl	.L150
 964:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 1883              		.loc 1 964 0
 1884 014a 1D4B     		ldr	r3, .L169+4
 1885 014c D968     		ldr	r1, [r3, #12]
 1886 014e 1E4A     		ldr	r2, .L169+12
 1887 0150 0A40     		and	r2, r1
 1888 0152 E168     		ldr	r1, [r4, #12]
 1889 0154 0A43     		orr	r2, r1
 1890 0156 DA60     		str	r2, [r3, #12]
 1891              	.L150:
 968:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 1892              		.loc 1 968 0
 1893 0158 2268     		ldr	r2, [r4]
 1894 015a 1207     		lsl	r2, r2, #28
 1895 015c 07D5     		bpl	.L151
 971:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 1896              		.loc 1 971 0
 1897 015e 184B     		ldr	r3, .L169+4
 1898 0160 D968     		ldr	r1, [r3, #12]
 1899 0162 1A4A     		ldr	r2, .L169+16
 1900 0164 0A40     		and	r2, r1
 1901 0166 2169     		ldr	r1, [r4, #16]
 1902 0168 C900     		lsl	r1, r1, #3
 1903 016a 0A43     		orr	r2, r1
 1904 016c DA60     		str	r2, [r3, #12]
 1905              	.L151:
 975:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CF
 1906              		.loc 1 975 0
 1907 016e FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 1908              	.LVL167:
 1909 0172 134B     		ldr	r3, .L169+4
 1910 0174 DB68     		ldr	r3, [r3, #12]
 1911 0176 1B06     		lsl	r3, r3, #24
 1912 0178 1B0F     		lsr	r3, r3, #28
 1913 017a 154A     		ldr	r2, .L169+20
 1914 017c D35C     		ldrb	r3, [r2, r3]
 1915 017e D840     		lsr	r0, r0, r3
 1916 0180 144B     		ldr	r3, .L169+24
 1917 0182 1860     		str	r0, [r3]
 978:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   HAL_InitTick (TICK_INT_PRIORITY);
 1918              		.loc 1 978 0
 1919 0184 0020     		mov	r0, #0
 1920 0186 FFF7FEFF 		bl	HAL_InitTick
 1921              	.LVL168:
 980:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   return HAL_OK;
ARM GAS  /tmp/ccm1sdDn.s 			page 65


 1922              		.loc 1 980 0
 1923 018a 0020     		mov	r0, #0
 1924 018c 12E0     		b	.L132
 1925              	.LVL169:
 1926              	.L152:
 848:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       return HAL_ERROR;
 1927              		.loc 1 848 0
 1928 018e 0120     		mov	r0, #1
 1929              	.LVL170:
 1930 0190 10E0     		b	.L132
 1931              	.LVL171:
 1932              	.L153:
 870:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         return HAL_ERROR;
 1933              		.loc 1 870 0
 1934 0192 0120     		mov	r0, #1
 1935              	.LVL172:
 1936 0194 0EE0     		b	.L132
 1937              	.LVL173:
 1938              	.L154:
 879:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         return HAL_ERROR;
 1939              		.loc 1 879 0
 1940 0196 0120     		mov	r0, #1
 1941              	.LVL174:
 1942 0198 0CE0     		b	.L132
 1943              	.LVL175:
 1944              	.L155:
 888:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         return HAL_ERROR;
 1945              		.loc 1 888 0
 1946 019a 0120     		mov	r0, #1
 1947              	.LVL176:
 1948 019c 0AE0     		b	.L132
 1949              	.LVL177:
 1950              	.L156:
 897:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****         return HAL_ERROR;
 1951              		.loc 1 897 0
 1952 019e 0120     		mov	r0, #1
 1953              	.LVL178:
 1954 01a0 08E0     		b	.L132
 1955              	.LVL179:
 1956              	.L157:
 911:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1957              		.loc 1 911 0
 1958 01a2 0320     		mov	r0, #3
 1959 01a4 06E0     		b	.L132
 1960              	.L158:
 921:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1961              		.loc 1 921 0
 1962 01a6 0320     		mov	r0, #3
 1963 01a8 04E0     		b	.L132
 1964              	.L159:
 931:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1965              		.loc 1 931 0
 1966 01aa 0320     		mov	r0, #3
 1967 01ac 02E0     		b	.L132
 1968              	.L160:
 941:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1969              		.loc 1 941 0
ARM GAS  /tmp/ccm1sdDn.s 			page 66


 1970 01ae 0320     		mov	r0, #3
 1971 01b0 00E0     		b	.L132
 1972              	.LVL180:
 1973              	.L161:
 956:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****       return HAL_ERROR;
 1974              		.loc 1 956 0
 1975 01b2 0120     		mov	r0, #1
 1976              	.L132:
 981:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** }
 1977              		.loc 1 981 0
 1978              		@ sp needed
 1979              	.LVL181:
 1980              	.LVL182:
 1981 01b4 0CBC     		pop	{r2, r3}
 1982 01b6 9046     		mov	r8, r2
 1983 01b8 9946     		mov	r9, r3
 1984 01ba F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1985              	.L170:
 1986              		.align	2
 1987              	.L169:
 1988 01bc 00200240 		.word	1073881088
 1989 01c0 00100240 		.word	1073876992
 1990 01c4 88130000 		.word	5000
 1991 01c8 FFF8FFFF 		.word	-1793
 1992 01cc FFC7FFFF 		.word	-14337
 1993 01d0 00000000 		.word	AHBPrescTable
 1994 01d4 00000000 		.word	SystemCoreClock
 1995              		.cfi_endproc
 1996              	.LFE38:
 1998              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 1999              		.align	2
 2000              		.global	HAL_RCC_GetHCLKFreq
 2001              		.code	16
 2002              		.thumb_func
 2004              	HAL_RCC_GetHCLKFreq:
 2005              	.LFB42:
1227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** {
 2006              		.loc 1 1227 0
 2007              		.cfi_startproc
1228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   return SystemCoreClock;
 2008              		.loc 1 1228 0
 2009 0000 014B     		ldr	r3, .L172
 2010 0002 1868     		ldr	r0, [r3]
1229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** }
 2011              		.loc 1 1229 0
 2012              		@ sp needed
 2013 0004 7047     		bx	lr
 2014              	.L173:
 2015 0006 C046     		.align	2
 2016              	.L172:
 2017 0008 00000000 		.word	SystemCoreClock
 2018              		.cfi_endproc
 2019              	.LFE42:
 2021              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 2022              		.align	2
 2023              		.global	HAL_RCC_GetPCLK1Freq
 2024              		.code	16
ARM GAS  /tmp/ccm1sdDn.s 			page 67


 2025              		.thumb_func
 2027              	HAL_RCC_GetPCLK1Freq:
 2028              	.LFB43:
1238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** {
 2029              		.loc 1 1238 0
 2030              		.cfi_startproc
 2031 0000 08B5     		push	{r3, lr}
 2032              	.LCFI10:
 2033              		.cfi_def_cfa_offset 8
 2034              		.cfi_offset 3, -8
 2035              		.cfi_offset 14, -4
1240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_BIT
 2036              		.loc 1 1240 0
 2037 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2038              	.LVL183:
 2039 0006 044B     		ldr	r3, .L175
 2040 0008 DB68     		ldr	r3, [r3, #12]
 2041 000a 5B05     		lsl	r3, r3, #21
 2042 000c 5B0F     		lsr	r3, r3, #29
 2043 000e 034A     		ldr	r2, .L175+4
 2044 0010 D35C     		ldrb	r3, [r2, r3]
 2045 0012 D840     		lsr	r0, r0, r3
1241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** }    
 2046              		.loc 1 1241 0
 2047              		@ sp needed
 2048 0014 08BD     		pop	{r3, pc}
 2049              	.L176:
 2050 0016 C046     		.align	2
 2051              	.L175:
 2052 0018 00100240 		.word	1073876992
 2053 001c 00000000 		.word	APBPrescTable
 2054              		.cfi_endproc
 2055              	.LFE43:
 2057              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 2058              		.align	2
 2059              		.global	HAL_RCC_GetPCLK2Freq
 2060              		.code	16
 2061              		.thumb_func
 2063              	HAL_RCC_GetPCLK2Freq:
 2064              	.LFB44:
1250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** {
 2065              		.loc 1 1250 0
 2066              		.cfi_startproc
 2067 0000 08B5     		push	{r3, lr}
 2068              	.LCFI11:
 2069              		.cfi_def_cfa_offset 8
 2070              		.cfi_offset 3, -8
 2071              		.cfi_offset 14, -4
1252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_BITN
 2072              		.loc 1 1252 0
 2073 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2074              	.LVL184:
 2075 0006 044B     		ldr	r3, .L178
 2076 0008 DB68     		ldr	r3, [r3, #12]
 2077 000a 9B04     		lsl	r3, r3, #18
 2078 000c 5B0F     		lsr	r3, r3, #29
 2079 000e 034A     		ldr	r2, .L178+4
ARM GAS  /tmp/ccm1sdDn.s 			page 68


 2080 0010 D35C     		ldrb	r3, [r2, r3]
 2081 0012 D840     		lsr	r0, r0, r3
1253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** } 
 2082              		.loc 1 1253 0
 2083              		@ sp needed
 2084 0014 08BD     		pop	{r3, pc}
 2085              	.L179:
 2086 0016 C046     		.align	2
 2087              	.L178:
 2088 0018 00100240 		.word	1073876992
 2089 001c 00000000 		.word	APBPrescTable
 2090              		.cfi_endproc
 2091              	.LFE44:
 2093              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 2094              		.align	2
 2095              		.global	HAL_RCC_GetOscConfig
 2096              		.code	16
 2097              		.thumb_func
 2099              	HAL_RCC_GetOscConfig:
 2100              	.LFB45:
1263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** {
 2101              		.loc 1 1263 0
 2102              		.cfi_startproc
 2103              	.LVL185:
1271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType |= RCC_OSCILLATORTYPE_HSI48;
 2104              		.loc 1 1271 0
 2105 0000 3F23     		mov	r3, #63
 2106 0002 0360     		str	r3, [r0]
1276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 2107              		.loc 1 1276 0
 2108 0004 344B     		ldr	r3, .L195
 2109 0006 1B68     		ldr	r3, [r3]
 2110 0008 5A03     		lsl	r2, r3, #13
 2111 000a 03D5     		bpl	.L181
1278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 2112              		.loc 1 1278 0
 2113 000c A023     		mov	r3, #160
 2114 000e DB02     		lsl	r3, r3, #11
 2115 0010 4360     		str	r3, [r0, #4]
 2116 0012 09E0     		b	.L182
 2117              	.L181:
1280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
 2118              		.loc 1 1280 0
 2119 0014 304B     		ldr	r3, .L195
 2120 0016 1B68     		ldr	r3, [r3]
 2121 0018 DA03     		lsl	r2, r3, #15
 2122 001a 03D5     		bpl	.L183
1282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
 2123              		.loc 1 1282 0
 2124 001c 8023     		mov	r3, #128
 2125 001e 5B02     		lsl	r3, r3, #9
 2126 0020 4360     		str	r3, [r0, #4]
 2127 0022 01E0     		b	.L182
 2128              	.L183:
1286:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
 2129              		.loc 1 1286 0
 2130 0024 0023     		mov	r3, #0
ARM GAS  /tmp/ccm1sdDn.s 			page 69


 2131 0026 4360     		str	r3, [r0, #4]
 2132              	.L182:
1290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
 2133              		.loc 1 1290 0
 2134 0028 2B4B     		ldr	r3, .L195
 2135 002a 1B68     		ldr	r3, [r3]
 2136 002c DA07     		lsl	r2, r3, #31
 2137 002e 02D5     		bpl	.L184
1292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 2138              		.loc 1 1292 0
 2139 0030 0123     		mov	r3, #1
 2140 0032 C360     		str	r3, [r0, #12]
 2141 0034 01E0     		b	.L185
 2142              	.L184:
1296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
 2143              		.loc 1 1296 0
 2144 0036 0023     		mov	r3, #0
 2145 0038 C360     		str	r3, [r0, #12]
 2146              	.L185:
1299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->ICSCR & RCC_ICSCR_HSITRIM) >> 8);
 2147              		.loc 1 1299 0
 2148 003a 274B     		ldr	r3, .L195
 2149 003c 5A68     		ldr	r2, [r3, #4]
 2150 003e D204     		lsl	r2, r2, #19
 2151 0040 D20E     		lsr	r2, r2, #27
 2152 0042 0261     		str	r2, [r0, #16]
1302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_MSION) == RCC_CR_MSION)
 2153              		.loc 1 1302 0
 2154 0044 1B68     		ldr	r3, [r3]
 2155 0046 DA05     		lsl	r2, r3, #23
 2156 0048 02D5     		bpl	.L186
1304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     RCC_OscInitStruct->MSIState = RCC_MSI_ON;
 2157              		.loc 1 1304 0
 2158 004a 0123     		mov	r3, #1
 2159 004c C361     		str	r3, [r0, #28]
 2160 004e 01E0     		b	.L187
 2161              	.L186:
1308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     RCC_OscInitStruct->MSIState = RCC_MSI_OFF;
 2162              		.loc 1 1308 0
 2163 0050 0023     		mov	r3, #0
 2164 0052 C361     		str	r3, [r0, #28]
 2165              	.L187:
1311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   RCC_OscInitStruct->MSICalibrationValue = (uint32_t)((RCC->ICSCR & RCC_ICSCR_MSITRIM) >> RCC_ICSCR
 2166              		.loc 1 1311 0
 2167 0054 204B     		ldr	r3, .L195
 2168 0056 5A68     		ldr	r2, [r3, #4]
 2169 0058 120E     		lsr	r2, r2, #24
 2170 005a 0262     		str	r2, [r0, #32]
1312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   RCC_OscInitStruct->MSIClockRange = (uint32_t)((RCC->ICSCR & RCC_ICSCR_MSIRANGE));
 2171              		.loc 1 1312 0
 2172 005c 5968     		ldr	r1, [r3, #4]
 2173 005e E022     		mov	r2, #224
 2174 0060 1202     		lsl	r2, r2, #8
 2175 0062 0A40     		and	r2, r1
 2176 0064 4262     		str	r2, [r0, #36]
1315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSEBYP) == RCC_CSR_LSEBYP)
 2177              		.loc 1 1315 0
ARM GAS  /tmp/ccm1sdDn.s 			page 70


 2178 0066 1B6D     		ldr	r3, [r3, #80]
 2179 0068 5A05     		lsl	r2, r3, #21
 2180 006a 03D5     		bpl	.L188
1317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 2181              		.loc 1 1317 0
 2182 006c A023     		mov	r3, #160
 2183 006e DB00     		lsl	r3, r3, #3
 2184 0070 8360     		str	r3, [r0, #8]
 2185 0072 09E0     		b	.L189
 2186              	.L188:
1319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   else if((RCC->CSR &RCC_CSR_LSEON) == RCC_CSR_LSEON)
 2187              		.loc 1 1319 0
 2188 0074 184B     		ldr	r3, .L195
 2189 0076 1B6D     		ldr	r3, [r3, #80]
 2190 0078 DA05     		lsl	r2, r3, #23
 2191 007a 03D5     		bpl	.L190
1321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
 2192              		.loc 1 1321 0
 2193 007c 8023     		mov	r3, #128
 2194 007e 5B00     		lsl	r3, r3, #1
 2195 0080 8360     		str	r3, [r0, #8]
 2196 0082 01E0     		b	.L189
 2197              	.L190:
1325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
 2198              		.loc 1 1325 0
 2199 0084 0023     		mov	r3, #0
 2200 0086 8360     		str	r3, [r0, #8]
 2201              	.L189:
1329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
 2202              		.loc 1 1329 0
 2203 0088 134B     		ldr	r3, .L195
 2204 008a 1B6D     		ldr	r3, [r3, #80]
 2205 008c DA07     		lsl	r2, r3, #31
 2206 008e 02D5     		bpl	.L191
1331:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 2207              		.loc 1 1331 0
 2208 0090 0123     		mov	r3, #1
 2209 0092 4361     		str	r3, [r0, #20]
 2210 0094 01E0     		b	.L192
 2211              	.L191:
1335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
 2212              		.loc 1 1335 0
 2213 0096 0023     		mov	r3, #0
 2214 0098 4361     		str	r3, [r0, #20]
 2215              	.L192:
1340:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   RCC_OscInitStruct->HSI48State = __HAL_RCC_GET_HSI48_STATE();
 2216              		.loc 1 1340 0
 2217 009a 0F4B     		ldr	r3, .L195
 2218 009c 9A68     		ldr	r2, [r3, #8]
 2219 009e 0121     		mov	r1, #1
 2220 00a0 0A40     		and	r2, r1
 2221 00a2 8261     		str	r2, [r0, #24]
1344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
 2222              		.loc 1 1344 0
 2223 00a4 1B68     		ldr	r3, [r3]
 2224 00a6 DA01     		lsl	r2, r3, #7
 2225 00a8 02D5     		bpl	.L193
ARM GAS  /tmp/ccm1sdDn.s 			page 71


1346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 2226              		.loc 1 1346 0
 2227 00aa 0223     		mov	r3, #2
 2228 00ac 8362     		str	r3, [r0, #40]
 2229 00ae 01E0     		b	.L194
 2230              	.L193:
1350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 2231              		.loc 1 1350 0
 2232 00b0 0123     		mov	r3, #1
 2233 00b2 8362     		str	r3, [r0, #40]
 2234              	.L194:
1352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLSRC);
 2235              		.loc 1 1352 0
 2236 00b4 084B     		ldr	r3, .L195
 2237 00b6 D968     		ldr	r1, [r3, #12]
 2238 00b8 8022     		mov	r2, #128
 2239 00ba 5202     		lsl	r2, r2, #9
 2240 00bc 0A40     		and	r2, r1
 2241 00be C262     		str	r2, [r0, #44]
1353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLMUL = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLMUL);
 2242              		.loc 1 1353 0
 2243 00c0 D968     		ldr	r1, [r3, #12]
 2244 00c2 F022     		mov	r2, #240
 2245 00c4 9203     		lsl	r2, r2, #14
 2246 00c6 0A40     		and	r2, r1
 2247 00c8 0263     		str	r2, [r0, #48]
1354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLDIV = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLDIV);
 2248              		.loc 1 1354 0
 2249 00ca DA68     		ldr	r2, [r3, #12]
 2250 00cc C023     		mov	r3, #192
 2251 00ce 1B04     		lsl	r3, r3, #16
 2252 00d0 1340     		and	r3, r2
 2253 00d2 4363     		str	r3, [r0, #52]
1355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** }
 2254              		.loc 1 1355 0
 2255              		@ sp needed
 2256 00d4 7047     		bx	lr
 2257              	.L196:
 2258 00d6 C046     		.align	2
 2259              	.L195:
 2260 00d8 00100240 		.word	1073876992
 2261              		.cfi_endproc
 2262              	.LFE45:
 2264              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 2265              		.align	2
 2266              		.global	HAL_RCC_GetClockConfig
 2267              		.code	16
 2268              		.thumb_func
 2270              	HAL_RCC_GetClockConfig:
 2271              	.LFB46:
1366:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** {
 2272              		.loc 1 1366 0
 2273              		.cfi_startproc
 2274              	.LVL186:
 2275 0000 10B5     		push	{r4, lr}
 2276              	.LCFI12:
 2277              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccm1sdDn.s 			page 72


 2278              		.cfi_offset 4, -8
 2279              		.cfi_offset 14, -4
1372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 2280              		.loc 1 1372 0
 2281 0002 0F23     		mov	r3, #15
 2282 0004 0360     		str	r3, [r0]
1375:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 2283              		.loc 1 1375 0
 2284 0006 0D4B     		ldr	r3, .L198
 2285 0008 DA68     		ldr	r2, [r3, #12]
 2286 000a 0324     		mov	r4, #3
 2287 000c 2240     		and	r2, r4
 2288 000e 4260     		str	r2, [r0, #4]
1378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE); 
 2289              		.loc 1 1378 0
 2290 0010 DA68     		ldr	r2, [r3, #12]
 2291 0012 F024     		mov	r4, #240
 2292 0014 2240     		and	r2, r4
 2293 0016 8260     		str	r2, [r0, #8]
1381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);   
 2294              		.loc 1 1381 0
 2295 0018 DC68     		ldr	r4, [r3, #12]
 2296 001a E022     		mov	r2, #224
 2297 001c D200     		lsl	r2, r2, #3
 2298 001e 2240     		and	r2, r4
 2299 0020 C260     		str	r2, [r0, #12]
1384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3);
 2300              		.loc 1 1384 0
 2301 0022 DA68     		ldr	r2, [r3, #12]
 2302 0024 E023     		mov	r3, #224
 2303 0026 9B01     		lsl	r3, r3, #6
 2304 0028 1340     		and	r3, r2
 2305 002a DB08     		lsr	r3, r3, #3
 2306 002c 0361     		str	r3, [r0, #16]
1387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY); 
 2307              		.loc 1 1387 0
 2308 002e 044B     		ldr	r3, .L198+4
 2309 0030 1B68     		ldr	r3, [r3]
 2310 0032 0122     		mov	r2, #1
 2311 0034 1340     		and	r3, r2
 2312 0036 0B60     		str	r3, [r1]
1388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** }
 2313              		.loc 1 1388 0
 2314              		@ sp needed
 2315 0038 10BD     		pop	{r4, pc}
 2316              	.L199:
 2317 003a C046     		.align	2
 2318              	.L198:
 2319 003c 00100240 		.word	1073876992
 2320 0040 00200240 		.word	1073881088
 2321              		.cfi_endproc
 2322              	.LFE46:
 2324              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 2325              		.align	2
 2326              		.weak	HAL_RCC_CSSCallback
 2327              		.code	16
 2328              		.thumb_func
ARM GAS  /tmp/ccm1sdDn.s 			page 73


 2330              	HAL_RCC_CSSCallback:
 2331              	.LFB48:
1414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** {
 2332              		.loc 1 1414 0
 2333              		.cfi_startproc
1418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** }
 2334              		.loc 1 1418 0
 2335              		@ sp needed
 2336 0000 7047     		bx	lr
 2337              		.cfi_endproc
 2338              	.LFE48:
 2340 0002 C046     		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 2341              		.align	2
 2342              		.global	HAL_RCC_NMI_IRQHandler
 2343              		.code	16
 2344              		.thumb_func
 2346              	HAL_RCC_NMI_IRQHandler:
 2347              	.LFB47:
1397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** {
 2348              		.loc 1 1397 0
 2349              		.cfi_startproc
 2350 0000 08B5     		push	{r3, lr}
 2351              	.LCFI13:
 2352              		.cfi_def_cfa_offset 8
 2353              		.cfi_offset 3, -8
 2354              		.cfi_offset 14, -4
1399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
 2355              		.loc 1 1399 0
 2356 0002 054B     		ldr	r3, .L203
 2357 0004 5B69     		ldr	r3, [r3, #20]
 2358 0006 DA05     		lsl	r2, r3, #23
 2359 0008 05D5     		bpl	.L201
1402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
 2360              		.loc 1 1402 0
 2361 000a FFF7FEFF 		bl	HAL_RCC_CSSCallback
 2362              	.LVL187:
1405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
 2363              		.loc 1 1405 0
 2364 000e 8022     		mov	r2, #128
 2365 0010 5200     		lsl	r2, r2, #1
 2366 0012 014B     		ldr	r3, .L203
 2367 0014 9A61     		str	r2, [r3, #24]
 2368              	.L201:
1407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rcc.c **** }
 2369              		.loc 1 1407 0
 2370              		@ sp needed
 2371 0016 08BD     		pop	{r3, pc}
 2372              	.L204:
 2373              		.align	2
 2374              	.L203:
 2375 0018 00100240 		.word	1073876992
 2376              		.cfi_endproc
 2377              	.LFE47:
 2379              		.text
 2380              	.Letext0:
 2381              		.file 2 "/home/niklas/Downloads/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/machine/_defaul
 2382              		.file 3 "/home/niklas/Downloads/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/stdint.h"
ARM GAS  /tmp/ccm1sdDn.s 			page 74


 2383              		.file 4 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l053xx.h"
 2384              		.file 5 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l0xx.h"
 2385              		.file 6 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 2386              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rcc.h"
 2387              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_gpio.h"
 2388              		.file 9 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/system_stm32l0xx.h"
 2389              		.file 10 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
ARM GAS  /tmp/ccm1sdDn.s 			page 75


DEFINED SYMBOLS
                            *ABS*:00000000 stm32l0xx_hal_rcc.c
     /tmp/ccm1sdDn.s:18     .text.RCC_SetFlashLatencyFromMSIRange:00000000 $t
     /tmp/ccm1sdDn.s:22     .text.RCC_SetFlashLatencyFromMSIRange:00000000 RCC_SetFlashLatencyFromMSIRange
     /tmp/ccm1sdDn.s:127    .text.RCC_SetFlashLatencyFromMSIRange:00000078 $d
     /tmp/ccm1sdDn.s:135    .text.HAL_RCC_DeInit:00000000 $t
     /tmp/ccm1sdDn.s:140    .text.HAL_RCC_DeInit:00000000 HAL_RCC_DeInit
     /tmp/ccm1sdDn.s:209    .text.HAL_RCC_DeInit:00000060 $d
     /tmp/ccm1sdDn.s:220    .text.HAL_RCC_OscConfig:00000000 $t
     /tmp/ccm1sdDn.s:225    .text.HAL_RCC_OscConfig:00000000 HAL_RCC_OscConfig
     /tmp/ccm1sdDn.s:818    .text.HAL_RCC_OscConfig:00000330 $d
     /tmp/ccm1sdDn.s:829    .text.HAL_RCC_OscConfig:00000350 $t
     /tmp/ccm1sdDn.s:1339   .text.HAL_RCC_OscConfig:000005d4 $d
     /tmp/ccm1sdDn.s:1353   .text.HAL_RCC_MCOConfig:00000000 $t
     /tmp/ccm1sdDn.s:1358   .text.HAL_RCC_MCOConfig:00000000 HAL_RCC_MCOConfig
     /tmp/ccm1sdDn.s:1458   .text.HAL_RCC_MCOConfig:00000074 $d
     /tmp/ccm1sdDn.s:1464   .text.HAL_RCC_EnableCSS:00000000 $t
     /tmp/ccm1sdDn.s:1469   .text.HAL_RCC_EnableCSS:00000000 HAL_RCC_EnableCSS
     /tmp/ccm1sdDn.s:1486   .text.HAL_RCC_EnableCSS:00000010 $d
     /tmp/ccm1sdDn.s:1492   .text.HAL_RCC_GetSysClockFreq:00000000 $t
     /tmp/ccm1sdDn.s:1497   .text.HAL_RCC_GetSysClockFreq:00000000 HAL_RCC_GetSysClockFreq
     /tmp/ccm1sdDn.s:1607   .text.HAL_RCC_GetSysClockFreq:00000078 $d
     /tmp/ccm1sdDn.s:1616   .text.HAL_RCC_ClockConfig:00000000 $t
     /tmp/ccm1sdDn.s:1621   .text.HAL_RCC_ClockConfig:00000000 HAL_RCC_ClockConfig
     /tmp/ccm1sdDn.s:1988   .text.HAL_RCC_ClockConfig:000001bc $d
     /tmp/ccm1sdDn.s:1999   .text.HAL_RCC_GetHCLKFreq:00000000 $t
     /tmp/ccm1sdDn.s:2004   .text.HAL_RCC_GetHCLKFreq:00000000 HAL_RCC_GetHCLKFreq
     /tmp/ccm1sdDn.s:2017   .text.HAL_RCC_GetHCLKFreq:00000008 $d
     /tmp/ccm1sdDn.s:2022   .text.HAL_RCC_GetPCLK1Freq:00000000 $t
     /tmp/ccm1sdDn.s:2027   .text.HAL_RCC_GetPCLK1Freq:00000000 HAL_RCC_GetPCLK1Freq
     /tmp/ccm1sdDn.s:2052   .text.HAL_RCC_GetPCLK1Freq:00000018 $d
     /tmp/ccm1sdDn.s:2058   .text.HAL_RCC_GetPCLK2Freq:00000000 $t
     /tmp/ccm1sdDn.s:2063   .text.HAL_RCC_GetPCLK2Freq:00000000 HAL_RCC_GetPCLK2Freq
     /tmp/ccm1sdDn.s:2088   .text.HAL_RCC_GetPCLK2Freq:00000018 $d
     /tmp/ccm1sdDn.s:2094   .text.HAL_RCC_GetOscConfig:00000000 $t
     /tmp/ccm1sdDn.s:2099   .text.HAL_RCC_GetOscConfig:00000000 HAL_RCC_GetOscConfig
     /tmp/ccm1sdDn.s:2260   .text.HAL_RCC_GetOscConfig:000000d8 $d
     /tmp/ccm1sdDn.s:2265   .text.HAL_RCC_GetClockConfig:00000000 $t
     /tmp/ccm1sdDn.s:2270   .text.HAL_RCC_GetClockConfig:00000000 HAL_RCC_GetClockConfig
     /tmp/ccm1sdDn.s:2319   .text.HAL_RCC_GetClockConfig:0000003c $d
     /tmp/ccm1sdDn.s:2325   .text.HAL_RCC_CSSCallback:00000000 $t
     /tmp/ccm1sdDn.s:2330   .text.HAL_RCC_CSSCallback:00000000 HAL_RCC_CSSCallback
     /tmp/ccm1sdDn.s:2341   .text.HAL_RCC_NMI_IRQHandler:00000000 $t
     /tmp/ccm1sdDn.s:2346   .text.HAL_RCC_NMI_IRQHandler:00000000 HAL_RCC_NMI_IRQHandler
     /tmp/ccm1sdDn.s:2375   .text.HAL_RCC_NMI_IRQHandler:00000018 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_InitTick
AHBPrescTable
HAL_GPIO_Init
__aeabi_uidiv
PLLMulTable
APBPrescTable
