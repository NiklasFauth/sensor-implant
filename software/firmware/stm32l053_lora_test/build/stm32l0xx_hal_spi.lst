ARM GAS  /tmp/cc1veDgB.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"stm32l0xx_hal_spi.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SPI_WaitOnFlagUntilTimeout,"ax",%progbits
  18              		.align	2
  19              		.code	16
  20              		.thumb_func
  22              	SPI_WaitOnFlagUntilTimeout:
  23              	.LFB74:
  24              		.file 1 "Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c"
   1:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @file    stm32l0xx_hal_spi.c
   4:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @version V1.8.1
   6:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @date    14-April-2017
   7:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief   SPI HAL module driver.
   8:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *    
   9:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *          This file provides firmware functions to manage the following 
  10:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *          functionalities of the Serial Peripheral Interface (SPI) peripheral:
  11:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *           + Initialization and de-initialization functions
  12:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *           + IO operation functions
  13:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *           + Peripheral Control functions 
  14:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *           + Peripheral State functions
  15:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   @verbatim
  16:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   ==============================================================================
  17:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****                         ##### How to use this driver #####
  18:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   ==============================================================================
  19:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     [..]
  20:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       The SPI HAL driver can be used as follows:
  21:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
  22:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       (#) Declare a SPI_HandleTypeDef handle structure, for example:
  23:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           SPI_HandleTypeDef  hspi; 
  24:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
  25:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       (#)Initialize the SPI low level resources by implementing the HAL_SPI_MspInit ()API:
  26:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           (##) Enable the SPIx interface clock 
  27:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           (##) SPI pins configuration
  28:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****               (+++) Enable the clock for the SPI GPIOs 
  29:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****               (+++) Configure these SPI pins as alternate function push-pull
  30:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           (##) NVIC configuration if you need to use interrupt process
  31:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****               (+++) Configure the SPIx interrupt priority
  32:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****               (+++) Enable the NVIC SPI IRQ handle
  33:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           (##) DMA Configuration if you need to use DMA process
  34:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****               (+++) Declare a DMA_HandleTypeDef handle structure for the transmit or receive Channe
ARM GAS  /tmp/cc1veDgB.s 			page 2


  35:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****               (+++) Enable the DMAx clock
  36:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****               (+++) Configure the DMA handle parameters 
  37:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****               (+++) Configure the DMA Tx or Rx Channel
  38:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****               (+++) Associate the initilalized hdma_tx(or _rx) handle to the hspi DMA Tx (or Rx) ha
  39:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****               (+++) Configure the priority and enable the NVIC for the transfer complete interrupt 
  40:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
  41:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       (#) Program the Mode, Direction , Data size, Baudrate Prescaler, NSS 
  42:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           management, Clock polarity and phase, FirstBit and CRC configuration in the hspi Init str
  43:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
  44:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       (#) Initialize the SPI registers by calling the HAL_SPI_Init() API:
  45:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           (++) This API configures also the low level Hardware GPIO, CLOCK, CORTEX...etc)
  46:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****               by calling the customed HAL_SPI_MspInit() API.
  47:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****      [..]
  48:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        Circular mode restriction:
  49:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       (#) The DMA circular mode cannot be used when the SPI is configured in these modes:
  50:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           (##) Master 2Lines RxOnly
  51:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           (##) Master 1Line Rx
  52:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       (#) The CRC feature is not managed when the DMA circular mode is enabled
  53:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       (#) When the SPI DMA Pause/Stop features are used, we must use the following APIs 
  54:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           the HAL_SPI_DMAPause()/ HAL_SPI_DMAStop() only under the SPI callbacks
  55:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
  56:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   @note
  57:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    (#) TX/RX processes are HAL_SPI_TransmitReceive(), HAL_SPI_TransmitReceive_IT() and HAL_SPI_Tran
  58:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    (#) RX processes are HAL_SPI_Receive(), HAL_SPI_Receive_IT() and HAL_SPI_Receive_DMA()
  59:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    (#) TX processes are HAL_SPI_Transmit(), HAL_SPI_Transmit_IT() and HAL_SPI_Transmit_DMA()
  60:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
  61:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   @endverbatim
  62:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   ******************************************************************************
  63:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @attention
  64:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *
  65:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  66:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *
  67:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * Redistribution and use in source and binary forms, with or without modification,
  68:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * are permitted provided that the following conditions are met:
  69:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  70:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *      this list of conditions and the following disclaimer.
  71:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  72:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *      this list of conditions and the following disclaimer in the documentation
  73:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *      and/or other materials provided with the distribution.
  74:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  75:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *      may be used to endorse or promote products derived from this software
  76:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *      without specific prior written permission.
  77:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *
  78:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  79:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  80:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  81:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  82:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  83:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  84:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  85:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  86:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  87:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  88:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *
  89:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   ******************************************************************************
  90:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
  91:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
ARM GAS  /tmp/cc1veDgB.s 			page 3


  92:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /*
  93:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   Additional Table:
  94:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
  95:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     Using the HAL it is not possible to reach all supported SPI frequency with the differents SPI M
  96:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     the following table resume the max SPI frequency reached with data size 8bits/16bits, 
  97:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     according to frequency used on APBx Peripheral Clock (fPCLK) used by the SPI instance :
  98:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
  99:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 	DataSize = SPI_DATASIZE_8BIT:
 100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    +----------------------------------------------------------------------------------------------+
 101:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    |         |                | 2Lines Fullduplex   |     2Lines RxOnly    |         1Line        |
 102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    | Process | Tranfert mode  |---------------------|----------------------|----------------------|
 103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    |         |                |  Master  |  Slave   |  Master   |  Slave   |  Master   |  Slave   |
 104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    |==============================================================================================|
 105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    |    T    |     Polling    |  Fpclk/4 | Fpclk/8  |    NA     |    NA    |    NA     |   NA     |
 106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    |    X    |----------------|----------|----------|-----------|----------|-----------|----------|
 107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    |    /    |     Interrupt  | Fpclk/64 | Fpclk/64 |    NA     |    NA    |    NA     |   NA     |
 108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    |    R    |----------------|----------|----------|-----------|----------|-----------|----------|
 109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    |    X    |       DMA      | Fpclk/2  | Fpclk/4  |    NA     |    NA    |    NA     |   NA     |
 110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    |=========|================|==========|==========|===========|==========|===========|==========|
 111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    |         |     Polling    | Fpclk/2  | Fpclk/8  | Fpclk/8   | Fpclk/8  | Fpclk/8   | Fpclk/8  |
 112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    |         |----------------|----------|----------|-----------|----------|-----------|----------|
 113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    |    R    |     Interrupt  | Fpclk/64 | Fpclk/32 | Fpclk/32  | Fpclk/16 | Fpclk/32  | Fpclk/32 |
 114:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    |    X    |----------------|----------|----------|-----------|----------|-----------|----------|
 115:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    |         |       DMA      | Fpclk/2  | Fpclk/2  | Fpclk/16  | Fpclk/2  | Fpclk/16  | Fpclk/2  |
 116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    |=========|================|==========|==========|===========|==========|===========|==========|
 117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    |         |     Polling    | Fpclk/8  | Fpclk/8  |     NA    |    NA    | Fpclk/4   | Fpclk/16 |
 118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    |         |----------------|----------|----------|-----------|----------|-----------|----------|
 119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    |    T    |     Interrupt  | Fpclk/8  | Fpclk/32 |     NA    |    NA    | Fpclk/8   | Fpclk/16 |
 120:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    |    X    |----------------|----------|----------|-----------|----------|-----------|----------|
 121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    |         |       DMA      | Fpclk/2  | Fpclk/4  |     NA    |    NA    | Fpclk/2   | Fpclk/2  |
 122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    +----------------------------------------------------------------------------------------------+
 123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    
 124:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    DataSize = SPI_DATASIZE_16BIT:
 125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     +----------------------------------------------------------------------------------------------
 126:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    |         |                | 2Lines Fullduplex   |     2Lines RxOnly    |         1Line        |
 127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    | Process | Tranfert mode  |---------------------|----------------------|----------------------|
 128:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    |         |                |  Master  |  Slave   |  Master   |  Slave   |  Master   |  Slave   |
 129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    |==============================================================================================|
 130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    |    T    |     Polling    |  Fpclk/4 | Fpclk/8  |    NA     |    NA    |    NA     |   NA     |
 131:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    |    X    |----------------|----------|----------|-----------|----------|-----------|----------|
 132:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    |    /    |     Interrupt  | Fpclk/32 | Fpclk/16 |    NA     |    NA    |    NA     |   NA     |
 133:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    |    R    |----------------|----------|----------|-----------|----------|-----------|----------|
 134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    |    X    |       DMA      | Fpclk/2  | Fpclk/4  |    NA     |    NA    |    NA     |   NA     |
 135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    |=========|================|==========|==========|===========|==========|===========|==========|
 136:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    |         |     Polling    | Fpclk/2  | Fpclk/4  | Fpclk/8   | Fpclk/4  | Fpclk/2   | Fpclk/8  |
 137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    |         |----------------|----------|----------|-----------|----------|-----------|----------|
 138:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    |    R    |     Interrupt  | Fpclk/32 | Fpclk/8  | Fpclk/16  | Fpclk/16 | Fpclk/16  | Fpclk/8  |
 139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    |    X    |----------------|----------|----------|-----------|----------|-----------|----------|
 140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    |         |       DMA      | Fpclk/2  | Fpclk/2  | Fpclk/8  |  Fpclk/2  | Fpclk/8   | Fpclk/2  |
 141:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    |=========|================|==========|==========|===========|==========|===========|==========|
 142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    |         |     Polling    | Fpclk/4  | Fpclk/4  |    NA     |    NA    | Fpclk/4   | Fpclk/8  |
 143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    |         |----------------|----------|----------|-----------|----------|-----------|----------|
 144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    |    T    |     Interrupt  | Fpclk/4  | Fpclk/16 |    NA     |    NA    | Fpclk/8   | Fpclk/8  |
 145:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    |    X    |----------------|----------|----------|-----------|----------|-----------|----------|
 146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    |         |       DMA      | Fpclk/2  | Fpclk/4  |    NA     |    NA    | Fpclk/2   | Fpclk/2  |
 147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    +----------------------------------------------------------------------------------------------+
 148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     @note The max SPI frequency depend on SPI data size (8bits, 16bits),
ARM GAS  /tmp/cc1veDgB.s 			page 4


 149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         SPI mode(2 Lines fullduplex, 2 lines RxOnly, 1 line TX/RX) and Process mode (Polling, IT, D
 150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** */
 151:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /* Includes ------------------------------------------------------------------*/
 153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #include "stm32l0xx_hal.h"
 154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /** @addtogroup STM32L0xx_HAL_Driver
 156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @{
 157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
 158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #ifdef HAL_SPI_MODULE_ENABLED
 160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /** @addtogroup SPI
 162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief SPI HAL module driver
 163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @{
 164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
 165:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /* Private typedef -----------------------------------------------------------*/
 167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /* Private define ------------------------------------------------------------*/
 168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /** @addtogroup SPI_Private
 169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @{
 170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
 171:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #define SPI_TIMEOUT_VALUE  10U
 172:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /* Private macro -------------------------------------------------------------*/
 174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /* Private variables ---------------------------------------------------------*/
 175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /* Private function prototypes -----------------------------------------------*/
 176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_TxCloseIRQHandler(SPI_HandleTypeDef *hspi);
 178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_TxISR(SPI_HandleTypeDef *hspi);
 179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_RxCloseIRQHandler(SPI_HandleTypeDef *hspi);
 180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_2LinesRxISR(SPI_HandleTypeDef *hspi);
 181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_RxISR(SPI_HandleTypeDef *hspi);
 182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma);
 186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma);
 187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma);
 189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitOnFlagUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagSta
 190:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
 191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @}
 192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
 193:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /* Exported functions ---------------------------------------------------------*/
 195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /** @addtogroup SPI_Exported_Functions SPI Exported Functions
 197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @{
 198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
 199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /** @addtogroup SPI_Exported_Functions_Group1 Initialization and de-initialization functions
 201:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****  *  @brief    Initialization and Configuration functions 
 202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****  *
 203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** @verbatim
 204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****  ===============================================================================
 205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****               ##### Initialization and de-initialization functions #####
ARM GAS  /tmp/cc1veDgB.s 			page 5


 206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****  ===============================================================================
 207:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     [..]  This subsection provides a set of functions allowing to initialize and 
 208:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           de-initialiaze the SPIx peripheral:
 209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       (+) User must implement HAL_SPI_MspInit() function in which he configures 
 211:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           all related peripherals resources (CLOCK, GPIO, DMA, IT and NVIC ).
 212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       (+) Call the function HAL_SPI_Init() to configure the selected device with 
 214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           the selected configuration:
 215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (++) Mode
 216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (++) Direction 
 217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (++) Data Size
 218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (++) Clock Polarity and Phase
 219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (++) NSS Management
 220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (++) BaudRate Prescaler
 221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (++) FirstBit
 222:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (++) TIMode
 223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (++) CRC Calculation
 224:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (++) CRC Polynomial if CRC enabled
 225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       (+) Call the function HAL_SPI_DeInit() to restore the default configuration 
 227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           of the selected SPIx periperal.       
 228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** @endverbatim
 230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @{
 231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
 232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
 234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Initializes the SPI according to the specified parameters 
 235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *         in the SPI_InitTypeDef and create the associated handle.
 236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
 237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *                the configuration information for SPI module.
 238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval HAL status
 239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
 240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
 241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check the SPI handle allocation */
 243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(hspi == NULL)
 244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_ERROR;
 246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check the parameters */
 249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
 250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   assert_param(IS_SPI_MODE(hspi->Init.Mode));
 251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_MODE(hspi->Init.Direction));
 252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
 253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
 254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));
 255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   assert_param(IS_SPI_NSS(hspi->Init.NSS));
 256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
 257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
 258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
 259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   assert_param(IS_SPI_CRC_CALCULATION(hspi->Init.CRCCalculation));
 260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
 261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(hspi->State == HAL_SPI_STATE_RESET)
ARM GAS  /tmp/cc1veDgB.s 			page 6


 263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Allocate lock resource and initialize it */
 265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->Lock = HAL_UNLOCKED;
 266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC... */
 268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     HAL_SPI_MspInit(hspi);
 269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   
 271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
 272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Disble the selected SPI peripheral */
 274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
 277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
 278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   Communication speed, First bit and CRC calculation state */
 279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****                                   hspi->Init.CLKPolarity | hspi->Init.CLKPhase | (hspi->Init.NSS & 
 281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****                                   hspi->Init.BaudRatePrescaler | hspi->Init.FirstBit  | hspi->Init.
 282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Configure : NSS management */
 284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 286:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /*---------------------------- SPIx CRCPOLY Configuration ------------------*/
 287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Configure : CRC Polynomial */
 288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CRCPR, hspi->Init.CRCPolynomial);
 289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   
 290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #if !defined(STM32L011xx) && !defined(STM32L021xx) && !defined(STM32L031xx) && !defined(STM32L041xx
 291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
 292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** #endif
 294:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   
 295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   
 298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return HAL_OK;
 299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
 302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  DeInitializes the SPI peripheral 
 303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
 304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *                the configuration information for SPI module.
 305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval HAL status
 306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
 307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DeInit(SPI_HandleTypeDef *hspi)
 308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check the SPI handle allocation */
 310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(hspi == NULL)
 311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_ERROR;
 313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
 316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Disable the SPI Peripheral Clock */
 318:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
ARM GAS  /tmp/cc1veDgB.s 			page 7


 320:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
 321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_SPI_MspDeInit(hspi);
 322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_RESET;
 325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Release Lock */
 327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return HAL_OK;
 330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 331:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
 333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief SPI MSP Init
 334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
 335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
 336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
 337:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
 338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****  __weak void HAL_SPI_MspInit(SPI_HandleTypeDef *hspi)
 339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****  {
 340:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   UNUSED(hspi);
 342:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****              the HAL_SPI_MspInit could be implenetd in the user file
 345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
 346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
 349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief SPI MSP DeInit
 350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
 351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *               the configuration information for SPI module.
 352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
 353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
 354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****  __weak void HAL_SPI_MspDeInit(SPI_HandleTypeDef *hspi)
 355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 357:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   UNUSED(hspi);
 358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 359:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 360:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             the HAL_SPI_MspDeInit could be implenetd in the user file
 361:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    */
 362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 363:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
 365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @}
 366:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
 367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /** @addtogroup SPI_Exported_Functions_Group2
 369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****  *  @brief   Data transfers functions
 370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****  *
 371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** @verbatim
 372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   ==============================================================================
 373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****                       ##### IO operation functions #####
 374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****  ===============================================================================
 375:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     This subsection provides a set of functions allowing to manage the SPI
 376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     data transfers.
ARM GAS  /tmp/cc1veDgB.s 			page 8


 377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     [..] The SPI supports master and slave mode :
 379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     (#) There are two modes of transfer:
 381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        (++) Blocking mode: The communication is performed in polling mode.
 382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             The HAL status of all data processing is returned by the same function
 383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             after finishing transfer.
 384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****        (++) No-Blocking mode: The communication is performed using Interrupts
 385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****            or DMA, These APIs return the HAL status.
 386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****            The end of the data processing will be indicated through the 
 387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****            dedicated SPI IRQ when using Interrupt mode or the DMA IRQ when 
 388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****            using DMA mode.
 389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****            The HAL_SPI_TxCpltCallback(), HAL_SPI_RxCpltCallback() and HAL_SPI_TxRxCpltCallback() us
 390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****            will be executed respectivelly at the end of the transmit or Receive process
 391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****            The HAL_SPI_ErrorCallback()user callback will be executed when a communication error is 
 392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     (#) Blocking mode APIs are :
 394:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (++) HAL_SPI_Transmit()in 1Line (simplex) and 2Lines (full duplex) mode
 395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (++) HAL_SPI_Receive() in 1Line (simplex) and 2Lines (full duplex) mode
 396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (++) HAL_SPI_TransmitReceive() in full duplex mode
 397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     (#) Non Blocking mode API's with Interrupt are :
 399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (++) HAL_SPI_Transmit_IT()in 1Line (simplex) and 2Lines (full duplex) mode
 400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (++) HAL_SPI_Receive_IT() in 1Line (simplex) and 2Lines (full duplex) mode
 401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (++) HAL_SPI_TransmitReceive_IT()in full duplex mode
 402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (++) HAL_SPI_IRQHandler()
 403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     (#) Non Blocking mode functions with DMA are :
 405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (++) HAL_SPI_Transmit_DMA()in 1Line (simplex) and 2Lines (full duplex) mode
 406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (++) HAL_SPI_Receive_DMA() in 1Line (simplex) and 2Lines (full duplex) mode
 407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (++) HAL_SPI_TransmitReceive_DMA() in full duplex mode
 408:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 409:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     (#) A set of Transfer Complete Callbacks are provided in non Blocking mode:
 410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (++) HAL_SPI_TxCpltCallback()
 411:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (++) HAL_SPI_RxCpltCallback()
 412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (++) HAL_SPI_TxRxCpltCallback()
 413:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (++) HAL_SPI_TxHalfCpltCallback()
 414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (++) HAL_SPI_RxHalfCpltCallback()
 415:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (++) HAL_SPI_TxRxHalfCpltCallback()
 416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (++) HAL_SPI_ErrorCallback()
 417:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** @endverbatim
 419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @{
 420:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
 421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
 423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Transmit an amount of data in blocking mode
 424:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
 425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *                the configuration information for SPI module.
 426:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  pData: pointer to data buffer
 427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  Size: amount of data to be sent
 428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  Timeout: Timeout duration
 429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval HAL status
 430:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
 431:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t
 432:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 433:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
ARM GAS  /tmp/cc1veDgB.s 			page 9


 434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(hspi->State == HAL_SPI_STATE_READY)
 435:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((pData == NULL ) || (Size == 0U)) 
 437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return  HAL_ERROR;
 439:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Check the parameters */
 442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
 443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 444:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Process Locked */
 445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_LOCK(hspi);
 446:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Configure communication */
 448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX;
 449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 450:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 451:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pTxBuffPtr  = pData;
 452:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferSize  = Size;
 453:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferCount = Size;
 454:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /*Init field not used in handle to zero */
 456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxISR = 0U;
 457:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxISR = 0U;
 458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pRxBuffPtr  = NULL;
 459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferSize  = 0U;
 460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferCount = 0U;
 461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 462:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Reset CRC Calculation */
 463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 464:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
 466:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 468:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.Direction == SPI_DIRECTION_1LINE)
 469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 470:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Configure communication direction : 1Line */
 471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SPI_1LINE_TX(hspi);
 472:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 473:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Check if the SPI is already enabled */ 
 475:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((hspi->Instance->CR1 &SPI_CR1_SPE) != SPI_CR1_SPE)
 476:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Enable SPI peripheral */
 478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_ENABLE(hspi);
 479:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Transmit data in 8 Bit mode */
 482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 483:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 484:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if((hspi->Init.Mode == SPI_MODE_SLAVE)|| (hspi->TxXferCount == 0x01U))
 485:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->Instance->DR = (*hspi->pTxBuffPtr++);
 487:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->TxXferCount--;
 488:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 489:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 490:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       while(hspi->TxXferCount > 0U)
ARM GAS  /tmp/cc1veDgB.s 			page 10


 491:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 492:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Wait until TXE flag is set to send data */
 493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_TXE, RESET, Timeout) != HAL_OK)
 494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         { 
 495:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           return HAL_TIMEOUT;
 496:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         }
 497:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->Instance->DR = (*hspi->pTxBuffPtr++);
 498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->TxXferCount--;
 499:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Enable CRC Transmission */
 501:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE) 
 502:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 505:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Transmit data in 16 Bit mode */
 507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     else
 508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 509:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if((hspi->Init.Mode == SPI_MODE_SLAVE) || (hspi->TxXferCount == 0x01U))
 510:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 511:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t*)hspi->pTxBuffPtr);
 512:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->pTxBuffPtr+=2U;
 513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->TxXferCount--;
 514:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 516:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       while(hspi->TxXferCount > 0U)
 517:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 518:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Wait until TXE flag is set to send data */
 519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_TXE, RESET, Timeout) != HAL_OK)
 520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         { 
 521:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           return HAL_TIMEOUT;
 522:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         }
 523:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t*)hspi->pTxBuffPtr);
 524:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->pTxBuffPtr+=2U;
 525:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->TxXferCount--;
 526:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 527:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Enable CRC Transmission */
 528:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE) 
 529:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 531:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 532:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 533:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 534:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Wait until TXE flag is set to send data */
 535:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_TXE, RESET, Timeout) != HAL_OK)
 536:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 537:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 538:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return HAL_TIMEOUT;
 539:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 540:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 541:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Wait until Busy flag is reset before disabling SPI */
 542:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_BSY, SET, Timeout) != HAL_OK)
 543:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     { 
 544:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return HAL_TIMEOUT;
 546:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 547:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****  
ARM GAS  /tmp/cc1veDgB.s 			page 11


 548:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Clear OVERUN flag in 2 Lines communication mode because received is not read */
 549:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.Direction == SPI_DIRECTION_2LINES)
 550:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 551:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_CLEAR_OVRFLAG(hspi);
 552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 553:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 554:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY; 
 555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 556:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Process Unlocked */
 557:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 558:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 559:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_OK;
 560:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 561:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   else
 562:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_BUSY;
 564:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 565:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 567:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
 568:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Receive an amount of data in blocking mode 
 569:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
 570:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *                the configuration information for SPI module.
 571:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  pData: pointer to data buffer
 572:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  Size: amount of data to be sent
 573:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  Timeout: Timeout duration
 574:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval HAL status
 575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
 576:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t 
 577:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 578:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __IO uint16_t tmpreg = 0U;
 579:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 580:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(hspi->State == HAL_SPI_STATE_READY)
 581:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 582:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((pData == NULL ) || (Size == 0U)) 
 583:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return  HAL_ERROR;
 585:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 586:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 587:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Process Locked */
 588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_LOCK(hspi);
 589:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 590:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Configure communication */
 591:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State       = HAL_SPI_STATE_BUSY_RX;
 592:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 593:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 594:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pRxBuffPtr  = pData;
 595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferSize  = Size;
 596:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferCount = Size;
 597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /*Init field not used in handle to zero */
 599:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxISR = 0U;
 600:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxISR = 0U;
 601:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pTxBuffPtr  = NULL;
 602:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferSize  = 0U;
 603:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferCount = 0U;
 604:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
ARM GAS  /tmp/cc1veDgB.s 			page 12


 605:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Configure communication direction : 1Line */
 606:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.Direction == SPI_DIRECTION_1LINE)
 607:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 608:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SPI_1LINE_RX(hspi);
 609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 610:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 611:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Reset CRC Calculation */
 612:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 613:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 614:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
 615:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 616:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     
 617:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 618:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 619:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Process Unlocked */
 620:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_UNLOCK(hspi);
 621:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 622:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK lin
 623:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 624:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 625:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 626:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Check if the SPI is already enabled */ 
 627:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((hspi->Instance->CR1 &SPI_CR1_SPE) != SPI_CR1_SPE)
 628:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 629:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Enable SPI peripheral */
 630:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_ENABLE(hspi);
 631:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 632:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 633:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Receive data in 8 Bit mode */
 634:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 635:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       while(hspi->RxXferCount > 1U)
 637:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 638:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Wait until RXNE flag is set */
 639:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 640:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         { 
 641:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           return HAL_TIMEOUT;
 642:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         }
 643:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 644:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (*hspi->pRxBuffPtr++) = hspi->Instance->DR;
 645:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->RxXferCount--;
 646:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 647:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Enable CRC Reception */
 648:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE) 
 649:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 650:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 651:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 652:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 653:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Receive data in 16 Bit mode */
 654:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     else
 655:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 656:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       while(hspi->RxXferCount > 1U)
 657:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 658:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Wait until RXNE flag is set to read data */
 659:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 660:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         { 
 661:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           return HAL_TIMEOUT;
ARM GAS  /tmp/cc1veDgB.s 			page 13


 662:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         }
 663:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 664:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         *((uint16_t*)hspi->pRxBuffPtr) = hspi->Instance->DR;
 665:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->pRxBuffPtr+=2U;
 666:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->RxXferCount--;
 667:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 668:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Enable CRC Reception */
 669:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE) 
 670:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 671:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 672:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 673:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 674:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 675:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Wait until RXNE flag is set */
 676:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 677:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     { 
 678:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return HAL_TIMEOUT;
 679:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 680:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 681:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Receive last data in 8 Bit mode */
 682:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 683:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 684:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       (*hspi->pRxBuffPtr++) = hspi->Instance->DR;
 685:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 686:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Receive last data in 16 Bit mode */
 687:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     else
 688:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 689:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       *((uint16_t*)hspi->pRxBuffPtr) = hspi->Instance->DR;
 690:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->pRxBuffPtr+=2U;
 691:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 692:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferCount--;
 693:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 694:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* If CRC computation is enabled */
 695:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 696:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 697:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Wait until RXNE flag is set: CRC Received */
 698:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 699:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 700:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
 701:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         return HAL_TIMEOUT;
 702:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 703:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 704:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Read CRC to clear RXNE flag */
 705:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       tmpreg = hspi->Instance->DR;
 706:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       UNUSED(tmpreg);		/* avoid warning on tmpreg affectation with stupid compiler */
 707:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 708:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     
 709:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((hspi->Init.Mode == SPI_MODE_MASTER)&&((hspi->Init.Direction == SPI_DIRECTION_1LINE)||(hspi-
 710:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 711:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Disable SPI peripheral */
 712:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_DISABLE(hspi);
 713:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 714:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 715:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 716:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 717:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Check if CRC error occurred */
 718:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE) && (__HAL_SPI_GET_FLAG(hspi, SPI_FL
ARM GAS  /tmp/cc1veDgB.s 			page 14


 719:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {  
 720:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
 721:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 722:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Reset CRC Calculation */
 723:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
 724:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 725:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Process Unlocked */
 726:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_UNLOCK(hspi);
 727:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 728:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return HAL_ERROR; 
 729:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 730:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 731:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Process Unlocked */
 732:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 733:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 734:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_OK;
 735:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 736:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   else
 737:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 738:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_BUSY;
 739:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 740:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 741:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 742:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
 743:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in blocking mode 
 744:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
 745:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *                the configuration information for SPI module.
 746:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  pTxData: pointer to transmission data buffer
 747:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  pRxData: pointer to reception data buffer to be
 748:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  Size: amount of data to be sent
 749:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  Timeout: Timeout duration
 750:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval HAL status
 751:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
 752:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pRxDa
 753:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 754:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __IO uint16_t tmpreg = 0U;
 755:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if((hspi->State == HAL_SPI_STATE_READY) || (hspi->State == HAL_SPI_STATE_BUSY_RX))
 757:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 758:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((pTxData == NULL ) || (pRxData == NULL ) || (Size == 0U))
 759:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 760:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return  HAL_ERROR;
 761:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 762:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 763:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Check the parameters */
 764:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
 765:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 766:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Process Locked */
 767:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_LOCK(hspi);
 768:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****  
 769:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
 770:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->State == HAL_SPI_STATE_READY)
 771:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 772:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 773:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 774:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 775:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****      /* Configure communication */   
ARM GAS  /tmp/cc1veDgB.s 			page 15


 776:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 777:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 778:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pRxBuffPtr  = pRxData;
 779:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferSize  = Size;
 780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferCount = Size;  
 781:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     
 782:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pTxBuffPtr  = pTxData;
 783:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferSize  = Size; 
 784:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferCount = Size;
 785:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 786:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /*Init field not used in handle to zero */
 787:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxISR = 0U;
 788:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxISR = 0U;
 789:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 790:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Reset CRC Calculation */
 791:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 792:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 793:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
 794:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 795:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 796:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Check if the SPI is already enabled */ 
 797:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((hspi->Instance->CR1 &SPI_CR1_SPE) != SPI_CR1_SPE)
 798:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 799:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Enable SPI peripheral */
 800:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_ENABLE(hspi);
 801:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 802:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 803:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Transmit and Receive data in 16 Bit mode */
 804:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 805:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 806:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if((hspi->Init.Mode == SPI_MODE_SLAVE) || ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->TxX
 807:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t*)hspi->pTxBuffPtr);
 809:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->pTxBuffPtr+=2U;
 810:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->TxXferCount--;
 811:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 812:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if(hspi->TxXferCount == 0U)
 813:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 814:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Enable CRC Transmission */
 815:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 816:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         {
 817:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 818:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         }
 819:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 820:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Wait until RXNE flag is set */
 821:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 822:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         { 
 823:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           return HAL_TIMEOUT;
 824:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         }
 825:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 826:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         *((uint16_t*)hspi->pRxBuffPtr) = hspi->Instance->DR;
 827:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->pRxBuffPtr+=2U;
 828:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->RxXferCount--;
 829:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 830:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       else
 831:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 832:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         while(hspi->TxXferCount > 0U)
ARM GAS  /tmp/cc1veDgB.s 			page 16


 833:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         {
 834:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           /* Wait until TXE flag is set to send data */
 835:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_TXE, RESET, Timeout) != HAL_OK)
 836:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           { 
 837:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             return HAL_TIMEOUT;
 838:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           }
 839:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 840:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           hspi->Instance->DR = *((uint16_t*)hspi->pTxBuffPtr);
 841:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           hspi->pTxBuffPtr+=2U;
 842:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           hspi->TxXferCount--;
 843:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 844:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           /* Enable CRC Transmission */
 845:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           if((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
 846:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           {
 847:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 848:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           }
 849:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 850:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           /* Wait until RXNE flag is set */
 851:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 852:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           { 
 853:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             return HAL_TIMEOUT;
 854:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           }
 855:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 856:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           *((uint16_t*)hspi->pRxBuffPtr) = hspi->Instance->DR;
 857:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           hspi->pRxBuffPtr+=2U;
 858:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           hspi->RxXferCount--;
 859:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         }
 860:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Receive the last byte */
 861:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         if(hspi->Init.Mode == SPI_MODE_SLAVE)
 862:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         {
 863:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           /* Wait until RXNE flag is set */
 864:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 865:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           {
 866:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             return HAL_TIMEOUT;
 867:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           }
 868:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           
 869:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           *((uint16_t*)hspi->pRxBuffPtr) = hspi->Instance->DR;
 870:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           hspi->pRxBuffPtr+=2U;
 871:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           hspi->RxXferCount--;
 872:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         }
 873:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 874:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 875:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Transmit and Receive data in 8 Bit mode */
 876:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     else
 877:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 878:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if((hspi->Init.Mode == SPI_MODE_SLAVE) || ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->TxX
 879:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 880:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->Instance->DR = (*hspi->pTxBuffPtr++);
 881:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->TxXferCount--;
 882:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 883:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if(hspi->TxXferCount == 0U)
 884:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 885:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Enable CRC Transmission */
 886:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 887:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         {
 888:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 889:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         }
ARM GAS  /tmp/cc1veDgB.s 			page 17


 890:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 891:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Wait until RXNE flag is set */
 892:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 893:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         {
 894:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           return HAL_TIMEOUT;
 895:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         }
 896:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 897:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (*hspi->pRxBuffPtr) = hspi->Instance->DR;
 898:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->RxXferCount--;
 899:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 900:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       else
 901:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 902:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         while(hspi->TxXferCount > 0U)
 903:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         {
 904:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           /* Wait until TXE flag is set to send data */
 905:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_TXE, RESET, Timeout) != HAL_OK)
 906:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           {
 907:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             return HAL_TIMEOUT;
 908:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           }
 909:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 910:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           hspi->Instance->DR = (*hspi->pTxBuffPtr++);
 911:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           hspi->TxXferCount--;
 912:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 913:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           /* Enable CRC Transmission */
 914:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           if((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
 915:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           {
 916:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 917:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           }
 918:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 919:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           /* Wait until RXNE flag is set */
 920:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 921:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           {
 922:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             return HAL_TIMEOUT;
 923:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           }
 924:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 925:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           (*hspi->pRxBuffPtr++) = hspi->Instance->DR;
 926:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           hspi->RxXferCount--;
 927:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         }
 928:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         if(hspi->Init.Mode == SPI_MODE_SLAVE)
 929:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         {
 930:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           /* Wait until RXNE flag is set */
 931:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 932:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           {
 933:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             return HAL_TIMEOUT;
 934:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           }
 935:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           
 936:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           (*hspi->pRxBuffPtr++) = hspi->Instance->DR;
 937:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           hspi->RxXferCount--;
 938:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         }
 939:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 940:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 941:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 942:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Read CRC from DR to close CRC calculation process */
 943:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 944:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 945:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Wait until RXNE flag is set */
 946:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout) != HAL_OK)
ARM GAS  /tmp/cc1veDgB.s 			page 18


 947:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
 948:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
 949:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         return HAL_TIMEOUT;
 950:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
 951:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Read CRC */
 952:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       tmpreg = hspi->Instance->DR;
 953:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       UNUSED(tmpreg);		/* avoid warning on tmpreg affectation with stupid compiler */
 954:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 955:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 956:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Wait until Busy flag is reset before disabling SPI */
 957:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_BSY, SET, Timeout) != HAL_OK)
 958:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 959:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 960:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return HAL_TIMEOUT;
 961:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 962:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     
 963:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 964:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 965:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Check if CRC error occurred */
 966:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE) && (__HAL_SPI_GET_FLAG(hspi, SPI_FL
 967:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
 968:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
 969:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 970:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
 971:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 972:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Process Unlocked */
 973:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_UNLOCK(hspi);
 974:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       
 975:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return HAL_ERROR; 
 976:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
 977:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 978:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Process Unlocked */
 979:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 980:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 981:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_OK;
 982:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 983:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   else
 984:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
 985:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_BUSY;
 986:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
 987:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 988:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
 989:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
 990:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Transmit an amount of data in no-blocking mode with Interrupt
 991:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
 992:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *                the configuration information for SPI module.
 993:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  pData: pointer to data buffer
 994:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  Size: amount of data to be sent
 995:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval HAL status
 996:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
 997:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
 998:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 999:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(hspi->State == HAL_SPI_STATE_READY)
1000:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1001:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((pData == NULL) || (Size == 0U))
1002:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1003:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return  HAL_ERROR;
ARM GAS  /tmp/cc1veDgB.s 			page 19


1004:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1005:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1006:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Check the parameters */
1007:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
1008:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1009:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Process Locked */
1010:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_LOCK(hspi);
1011:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1012:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Configure communication */
1013:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State        = HAL_SPI_STATE_BUSY_TX;
1014:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->ErrorCode    = HAL_SPI_ERROR_NONE;
1015:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1016:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxISR        = &SPI_TxISR;
1017:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pTxBuffPtr   = pData;
1018:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferSize   = Size;
1019:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferCount  = Size;
1020:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1021:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /*Init field not used in handle to zero */
1022:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxISR        = 0U;
1023:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pRxBuffPtr   = NULL;
1024:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferSize   = 0U;
1025:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferCount  = 0U;
1026:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1027:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Configure communication direction : 1Line */
1028:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.Direction == SPI_DIRECTION_1LINE)
1029:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1030:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SPI_1LINE_TX(hspi);
1031:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1032:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1033:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Reset CRC Calculation */
1034:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1035:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1036:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
1037:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1038:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1039:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
1040:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1041:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE));
1042:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1043:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     else
1044:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1045:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Enable TXE and ERR interrupt */
1046:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_ERR));
1047:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1048:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Process Unlocked */
1049:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
1050:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1051:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Check if the SPI is already enabled */ 
1052:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((hspi->Instance->CR1 &SPI_CR1_SPE) != SPI_CR1_SPE)
1053:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1054:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Enable SPI peripheral */
1055:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_ENABLE(hspi);
1056:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1057:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1058:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_OK;
1059:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1060:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   else
ARM GAS  /tmp/cc1veDgB.s 			page 20


1061:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1062:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_BUSY;
1063:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1064:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
1065:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1066:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
1067:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Receive an amount of data in no-blocking mode with Interrupt
1068:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
1069:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *                the configuration information for SPI module.
1070:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  pData: pointer to data buffer
1071:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  Size: amount of data to be sent
1072:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval HAL status
1073:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
1074:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1075:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
1076:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(hspi->State == HAL_SPI_STATE_READY)
1077:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1078:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((pData == NULL) || (Size == 0U)) 
1079:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1080:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return  HAL_ERROR;
1081:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1082:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1083:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Process Locked */
1084:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_LOCK(hspi);
1085:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1086:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Configure communication */
1087:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State        = HAL_SPI_STATE_BUSY_RX;
1088:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->ErrorCode    = HAL_SPI_ERROR_NONE;
1089:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1090:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxISR        = &SPI_RxISR;
1091:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pRxBuffPtr   = pData;
1092:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferSize   = Size;
1093:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferCount  = Size ; 
1094:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1095:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    /*Init field not used in handle to zero */
1096:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxISR        = 0U;
1097:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pTxBuffPtr   = NULL;
1098:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferSize   = 0U;
1099:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferCount  = 0U;
1100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1101:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Configure communication direction : 1Line */
1102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.Direction == SPI_DIRECTION_1LINE)
1103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SPI_1LINE_RX(hspi);
1105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     else if((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
1107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Process Unlocked */
1109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_UNLOCK(hspi);
1110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK lin
1112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return HAL_SPI_TransmitReceive_IT(hspi, pData, pData, Size);
1113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1114:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1115:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Reset CRC Calculation */
1116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
ARM GAS  /tmp/cc1veDgB.s 			page 21


1118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
1119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1120:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Enable TXE and ERR interrupt */
1122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
1123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1124:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Process Unlocked */
1125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
1126:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Note : The SPI must be enabled after unlocking current process 
1128:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****               to avoid the risk of SPI interrupt handle execution before current
1129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****               process unlock */
1130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1131:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Check if the SPI is already enabled */ 
1132:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((hspi->Instance->CR1 &SPI_CR1_SPE) != SPI_CR1_SPE)
1133:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Enable SPI peripheral */
1135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_ENABLE(hspi);
1136:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1138:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_OK;
1139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   else
1141:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_BUSY; 
1143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
1145:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
1147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in no-blocking mode with Interrupt 
1148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
1149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *                the configuration information for SPI module.
1150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  pTxData: pointer to transmission data buffer
1151:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  pRxData: pointer to reception data buffer to be
1152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  Size: amount of data to be sent
1153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval HAL status
1154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
1155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_IT(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pR
1156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
1157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if((hspi->State == HAL_SPI_STATE_READY) || \
1159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****      ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hs
1160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((pTxData == NULL ) || (pRxData == NULL ) || (Size == 0U)) 
1162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return  HAL_ERROR;
1164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1165:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Check the parameters */
1167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Process locked */
1170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_LOCK(hspi);
1171:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1172:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->State != HAL_SPI_STATE_BUSY_RX)
1174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
ARM GAS  /tmp/cc1veDgB.s 			page 22


1175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
1176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Configure communication */
1179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->ErrorCode    = HAL_SPI_ERROR_NONE;
1180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxISR = &SPI_TxISR;
1182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pTxBuffPtr   = pTxData;
1183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferSize   = Size;
1184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferCount  = Size;
1185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxISR = &SPI_2LinesRxISR;
1187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pRxBuffPtr   = pRxData;
1188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferSize   = Size;
1189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferCount  = Size;
1190:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Reset CRC Calculation */
1192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1193:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
1195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Enable TXE, RXNE and ERR interrupt */
1198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
1199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Process Unlocked */
1201:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
1202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Check if the SPI is already enabled */ 
1204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((hspi->Instance->CR1 &SPI_CR1_SPE) != SPI_CR1_SPE)
1205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Enable SPI peripheral */
1207:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_ENABLE(hspi);
1208:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_OK;
1211:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   else
1213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_BUSY; 
1215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
1217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
1219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Transmit an amount of data in no-blocking mode with DMA
1220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
1221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *                the configuration information for SPI module.
1222:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  pData: pointer to data buffer
1223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  Size: amount of data to be sent
1224:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval HAL status
1225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
1226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
1228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(hspi->State == HAL_SPI_STATE_READY)
1229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((pData == NULL) || (Size == 0U))
1231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
ARM GAS  /tmp/cc1veDgB.s 			page 23


1232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 	  /* Process Unlocked */
1233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_UNLOCK(hspi);
1234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return  HAL_ERROR;
1235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Check the parameters */
1238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
1239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Process Locked */
1241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_LOCK(hspi);
1242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Configure communication */
1244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State       = HAL_SPI_STATE_BUSY_TX;
1245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pTxBuffPtr  = (uint8_t*)pData;
1248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferSize  = Size;
1249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferCount = Size;
1250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /*Init field not used in handle to zero */
1252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxISR       = 0U;
1253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxISR       = 0U;
1254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 	
1255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pRxBuffPtr  = NULL;
1256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferSize  = 0U;
1257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferCount = 0U;
1258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Configure communication direction : 1Line */
1260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.Direction == SPI_DIRECTION_1LINE)
1261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SPI_1LINE_TX(hspi);
1263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Reset CRC Calculation */
1266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
1269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Set the SPI TxDMA Half transfer complete callback */
1272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
1273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Set the SPI TxDMA transfer complete callback */
1275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
1276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Set the DMA error callback */
1278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->hdmatx->XferErrorCallback = SPI_DMAError;
1279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Reset content of SPI RxDMA descriptor */
1281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 	hspi->hdmarx->XferHalfCpltCallback = (void (*)(DMA_HandleTypeDef *))NULL;
1282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = (void (*)(DMA_HandleTypeDef *))NULL;
1283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->hdmarx->XferErrorCallback    = (void (*)(DMA_HandleTypeDef *))NULL;
1284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Enable the Tx DMA Channel */
1286:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR, hspi-
1287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Enable Tx DMA Request */
ARM GAS  /tmp/cc1veDgB.s 			page 24


1289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
1290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Process Unlocked */
1292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
1293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1294:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Check if the SPI is already enabled */ 
1295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((hspi->Instance->CR1 &SPI_CR1_SPE) != SPI_CR1_SPE)
1296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Enable SPI peripheral */
1298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_ENABLE(hspi);
1299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_OK;
1302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   else
1304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Process Unlocked */
1306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
1307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_BUSY;
1308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
1310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
1312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Receive an amount of data in no-blocking mode with DMA 
1313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
1314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *                the configuration information for SPI module.
1315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  pData: pointer to data buffer
1316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @note  When the CRC feature is enabled the pData Length must be Size + 1. 
1317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  Size: amount of data to be sent
1318:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval HAL status
1319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
1320:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
1322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(hspi->State == HAL_SPI_STATE_READY)
1323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((pData == NULL) || (Size == 0U))
1325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 	  /* Process Unlocked */
1327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_UNLOCK(hspi);
1328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return  HAL_ERROR;
1329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1331:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Process Locked */
1332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_LOCK(hspi);
1333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Configure communication */
1335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State       = HAL_SPI_STATE_BUSY_RX;
1336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1337:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pRxBuffPtr  = (uint8_t*)pData;
1339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferSize  = Size;
1340:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferCount = Size;
1341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1342:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /*Init field not used in handle to zero */
1343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxISR       = 0U;
1344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxISR       = 0U;
1345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 	
ARM GAS  /tmp/cc1veDgB.s 			page 25


1346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pTxBuffPtr  = NULL;
1347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferSize  = 0U;
1348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferCount = 0U;
1349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Configure communication direction : 1Line */
1351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.Direction == SPI_DIRECTION_1LINE)
1352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SPI_1LINE_RX(hspi);
1354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     else if((hspi->Init.Direction == SPI_DIRECTION_2LINES)&&(hspi->Init.Mode == SPI_MODE_MASTER))
1356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1357:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Process Unlocked */
1358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_UNLOCK(hspi);
1359:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1360:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK lin
1361:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return HAL_SPI_TransmitReceive_DMA(hspi, pData, pData, Size);
1362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1363:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Reset CRC Calculation */
1365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1366:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
1368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Set the SPI RxDMA Half transfer complete callback */
1371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
1372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Set the SPI Rx DMA transfer complete callback */
1374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback = SPI_DMAReceiveCplt;
1375:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Set the DMA error callback */
1377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->hdmarx->XferErrorCallback = SPI_DMAError;
1378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Reset content of SPI TxDMA descriptor */
1380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->hdmatx->XferHalfCpltCallback = (void (*)(DMA_HandleTypeDef *))NULL;
1381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->hdmatx->XferCpltCallback     = (void (*)(DMA_HandleTypeDef *))NULL;
1382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->hdmatx->XferErrorCallback    = (void (*)(DMA_HandleTypeDef *))NULL;
1383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Enable the Rx DMA Channel */
1385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBuffPtr, hspi-
1386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Enable Rx DMA Request */  
1388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
1389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Process Unlocked */
1391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
1392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Check if the SPI is already enabled */ 
1394:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((hspi->Instance->CR1 &SPI_CR1_SPE) != SPI_CR1_SPE)
1395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Enable SPI peripheral */
1397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_ENABLE(hspi);
1398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_OK;
1401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   else
ARM GAS  /tmp/cc1veDgB.s 			page 26


1403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {  
1404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Process Unlocked */
1405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
1406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_BUSY;
1407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1408:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
1409:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
1411:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in no-blocking mode with DMA 
1412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
1413:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *                the configuration information for SPI module.
1414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  pTxData: pointer to transmission data buffer
1415:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  pRxData: pointer to reception data buffer
1416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @note  When the CRC feature is enabled the pRxData Length must be Size + 1 
1417:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  Size: amount of data to be sent
1418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval HAL status
1419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
1420:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *p
1421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
1422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if((hspi->State == HAL_SPI_STATE_READY) || \
1423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****      ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hs
1424:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((pTxData == NULL ) || (pRxData == NULL ) || (Size == 0U))
1426:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return  HAL_ERROR;
1428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1430:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Check the parameters */
1431:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1432:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     
1433:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Process locked */
1434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_LOCK(hspi);
1435:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->State != HAL_SPI_STATE_BUSY_RX)
1438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1439:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
1440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Configure communication */
1443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
1444:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pTxBuffPtr  = (uint8_t*)pTxData;
1446:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferSize  = Size;
1447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferCount = Size;
1448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pRxBuffPtr  = (uint8_t*)pRxData;
1450:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferSize  = Size;
1451:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferCount = Size;
1452:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1453:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /*Init field not used in handle to zero */
1454:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxISR = 0U;
1455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxISR = 0U;
1456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1457:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Reset CRC Calculation */
1458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
ARM GAS  /tmp/cc1veDgB.s 			page 27


1460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
1461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1462:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Check if we are in Rx only or in Rx/Tx Mode and configure the DMA transfer complete callback
1464:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->State == HAL_SPI_STATE_BUSY_RX)
1465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1466:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Set the SPI Rx DMA Half transfer complete callback */
1467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
1468:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       
1469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->hdmarx->XferCpltCallback = SPI_DMAReceiveCplt;
1470:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     else
1472:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1473:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Set the SPI Tx/Rx DMA Half transfer complete callback */
1474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfTransmitReceiveCplt;
1475:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   
1476:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->hdmarx->XferCpltCallback = SPI_DMATransmitReceiveCplt;
1477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1479:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Set the DMA error callback */
1480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->hdmarx->XferErrorCallback = SPI_DMAError;
1481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Enable the Rx DMA Channel */
1483:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBuffPtr, hspi-
1484:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1485:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Enable Rx DMA Request */  
1486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
1487:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1488:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Set the SPI Tx DMA transfer complete callback as NULL because the communication closing
1489:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     is performed in DMA reception complete callback  */
1490:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->hdmatx->XferHalfCpltCallback = (void (*)(DMA_HandleTypeDef *))NULL;
1491:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->hdmatx->XferCpltCallback     = (void (*)(DMA_HandleTypeDef *))NULL;
1492:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Set the DMA error callback */
1494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->hdmatx->XferErrorCallback    = SPI_DMAError;
1495:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     
1496:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Enable the Tx DMA Channel */
1497:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR, hspi-
1498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1499:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Check if the SPI is already enabled */ 
1500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
1501:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1502:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Enable SPI peripheral */
1503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_ENABLE(hspi);
1504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1505:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Enable Tx DMA Request */  
1507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
1508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1509:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Process Unlocked */
1510:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
1511:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1512:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_OK;
1513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1514:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   else
1515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1516:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_BUSY;
ARM GAS  /tmp/cc1veDgB.s 			page 28


1517:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1518:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
1519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1521:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
1522:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief Pauses the DMA Transfer.
1523:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
1524:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *                the configuration information for the specified SPI module.
1525:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval HAL status
1526:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
1527:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAPause(SPI_HandleTypeDef *hspi)
1528:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
1529:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Process Locked */
1530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_LOCK(hspi);
1531:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   
1532:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Disable the SPI DMA Tx & Rx requests */
1533:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
1534:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
1535:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   
1536:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Process Unlocked */
1537:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1538:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   
1539:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return HAL_OK; 
1540:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
1541:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1542:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
1543:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief Resumes the DMA Transfer.
1544:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
1545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *                the configuration information for the specified SPI module.
1546:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval HAL status
1547:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
1548:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAResume(SPI_HandleTypeDef *hspi)
1549:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
1550:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Process Locked */
1551:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_LOCK(hspi);
1552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   
1553:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Enable the SPI DMA Tx & Rx requests */
1554:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
1555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
1556:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   
1557:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Process Unlocked */
1558:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
1559:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   
1560:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return HAL_OK;
1561:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
1562:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
1564:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief Stops the DMA Transfer.
1565:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
1566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *                the configuration information for the specified SPI module.
1567:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval HAL status
1568:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
1569:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAStop(SPI_HandleTypeDef *hspi)
1570:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
1571:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* The Lock is not implemented on this API to allow the user application
1572:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****      to call the HAL SPI API under callbacks HAL_SPI_TxCpltCallback() or HAL_SPI_RxCpltCallback() o
1573:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
ARM GAS  /tmp/cc1veDgB.s 			page 29


1574:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****      and the correspond call back is executed HAL_SPI_TxCpltCallback() or HAL_SPI_RxCpltCallback() 
1575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****      */
1576:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   
1577:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Abort the SPI DMA tx Channel */
1578:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(hspi->hdmatx != NULL)
1579:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1580:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     HAL_DMA_Abort(hspi->hdmatx);
1581:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1582:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Abort the SPI DMA rx Channel */
1583:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(hspi->hdmarx != NULL)
1584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1585:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     HAL_DMA_Abort(hspi->hdmarx);
1586:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1587:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   
1588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Disable the SPI DMA Tx & Rx requests */
1589:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
1590:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
1591:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   
1592:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
1593:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   
1594:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return HAL_OK;
1595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
1596:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
1598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  This function handles SPI interrupt request.
1599:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
1600:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *                the configuration information for SPI module.
1601:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval HAL status
1602:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
1603:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
1604:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
1605:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* SPI in mode Receiver and Overrun not occurred ---------------------------*/
1606:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if((__HAL_SPI_GET_IT_SOURCE(hspi, SPI_IT_RXNE) != RESET) && (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RX
1607:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1608:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxISR(hspi);
1609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return;
1610:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1611:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1612:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* SPI in mode Tramitter ---------------------------------------------------*/
1613:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if((__HAL_SPI_GET_IT_SOURCE(hspi, SPI_IT_TXE) != RESET) && (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE
1614:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1615:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxISR(hspi);
1616:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return;
1617:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1618:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1619:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(__HAL_SPI_GET_IT_SOURCE(hspi, SPI_IT_ERR) != RESET)
1620:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1621:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* SPI CRC error interrupt occurred ---------------------------------------*/
1622:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
1623:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1624:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1625:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
1626:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1627:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* SPI Mode Fault error interrupt occurred --------------------------------*/
1628:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_MODF) != RESET)
1629:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1630:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
ARM GAS  /tmp/cc1veDgB.s 			page 30


1631:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_CLEAR_MODFFLAG(hspi);
1632:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1633:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     
1634:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* SPI Overrun error interrupt occurred -----------------------------------*/
1635:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_OVR) != RESET)
1636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1637:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if(hspi->State != HAL_SPI_STATE_BUSY_TX)
1638:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
1639:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
1640:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);      
1641:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
1642:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1643:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1644:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* SPI Frame error interrupt occurred -------------------------------------*/
1645:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_FRE) != RESET)
1646:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1647:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
1648:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_CLEAR_FREFLAG(hspi);
1649:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1650:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1651:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Call the Error call Back in case of Errors */
1652:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->ErrorCode!=HAL_SPI_ERROR_NONE)
1653:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1654:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE | SPI_IT_TXE | SPI_IT_ERR);
1655:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
1656:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
1657:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1658:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1659:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
1660:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1661:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
1662:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief Tx Transfer completed callbacks
1663:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
1664:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *                the configuration information for SPI module.
1665:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
1666:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
1667:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** __weak void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi)
1668:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
1669:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
1670:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   UNUSED(hspi);
1671:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1672:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1673:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             the HAL_SPI_TxCpltCallback could be implenetd in the user file
1674:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    */
1675:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
1676:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1677:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
1678:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief Rx Transfer completed callbacks
1679:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
1680:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *                the configuration information for SPI module.
1681:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
1682:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
1683:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** __weak void HAL_SPI_RxCpltCallback(SPI_HandleTypeDef *hspi)
1684:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
1685:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
1686:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   UNUSED(hspi);
1687:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
ARM GAS  /tmp/cc1veDgB.s 			page 31


1688:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1689:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             the HAL_SPI_RxCpltCallback() could be implenetd in the user file
1690:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    */
1691:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
1692:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1693:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
1694:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief Tx and Rx Transfer completed callbacks
1695:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
1696:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *                the configuration information for SPI module.
1697:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
1698:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
1699:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** __weak void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi)
1700:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
1701:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
1702:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   UNUSED(hspi);
1703:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1704:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1705:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             the HAL_SPI_TxRxCpltCallback() could be implenetd in the user file
1706:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    */
1707:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
1708:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1709:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
1710:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief Tx Half Transfer completed callbacks
1711:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
1712:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *                the configuration information for SPI module.
1713:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
1714:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
1715:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** __weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi)
1716:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
1717:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
1718:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   UNUSED(hspi);
1719:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1720:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1721:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             the HAL_SPI_TxHalfCpltCallback could be implenetd in the user file
1722:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    */
1723:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
1724:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1725:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
1726:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief Rx Half Transfer completed callbacks
1727:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
1728:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *                the configuration information for SPI module.
1729:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
1730:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
1731:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** __weak void HAL_SPI_RxHalfCpltCallback(SPI_HandleTypeDef *hspi)
1732:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
1733:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
1734:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   UNUSED(hspi);
1735:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1736:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1737:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             the HAL_SPI_RxHalfCpltCallback() could be implenetd in the user file
1738:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    */
1739:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
1740:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1741:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
1742:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief Tx and Rx Transfer completed callbacks
1743:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
1744:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *                the configuration information for SPI module.
ARM GAS  /tmp/cc1veDgB.s 			page 32


1745:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
1746:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
1747:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** __weak void HAL_SPI_TxRxHalfCpltCallback(SPI_HandleTypeDef *hspi)
1748:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
1749:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
1750:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   UNUSED(hspi);
1751:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1752:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1753:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             the HAL_SPI_TxRxHalfCpltCallback() could be implenetd in the user file
1754:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    */
1755:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
1756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1757:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
1758:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief SPI error callbacks
1759:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
1760:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *                the configuration information for SPI module.
1761:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
1762:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
1763:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****  __weak void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi)
1764:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
1765:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
1766:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   UNUSED(hspi);
1767:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1768:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* NOTE : - This function Should not be modified, when the callback is needed,
1769:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             the HAL_SPI_ErrorCallback() could be implenetd in the user file.
1770:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             - The ErrorCode parameter in the hspi handle is updated by the SPI processes
1771:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             and user can use HAL_SPI_GetError() API to check the latest error occurred.
1772:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****    */
1773:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
1774:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1775:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
1776:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @}
1777:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
1778:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1779:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /** @addtogroup SPI_Exported_Functions_Group3 Peripheral State and Errors functions
1780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *  @brief   SPI control functions 
1781:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *
1782:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** @verbatim
1783:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****  ===============================================================================
1784:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****                       ##### Peripheral State and Errors functions #####
1785:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****  ===============================================================================  
1786:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     [..]
1787:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     This subsection provides a set of functions allowing to control the SPI.
1788:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****      (+) HAL_SPI_GetState() API can be helpful to check in run-time the state of the SPI peripheral
1789:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****      (+) HAL_SPI_GetError() check in run-time Errors occurring during communication
1790:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** @endverbatim
1791:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @{
1792:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
1793:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1794:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
1795:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Return the SPI state
1796:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
1797:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *                the configuration information for SPI module.
1798:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval SPI state
1799:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
1800:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** HAL_SPI_StateTypeDef HAL_SPI_GetState(SPI_HandleTypeDef *hspi)
1801:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
ARM GAS  /tmp/cc1veDgB.s 			page 33


1802:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return hspi->State;
1803:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
1804:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1805:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
1806:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Return the SPI error code
1807:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
1808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *                the configuration information for SPI module.
1809:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval SPI Error Code
1810:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
1811:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** uint32_t HAL_SPI_GetError(SPI_HandleTypeDef *hspi)
1812:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
1813:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return hspi->ErrorCode;
1814:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
1815:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1816:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
1817:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @}
1818:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
1819:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   
1820:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
1821:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     * @}
1822:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     */
1823:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1824:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1825:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1826:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /** @addtogroup SPI_Private
1827:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     * @{
1828:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     */
1829:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1830:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1831:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /**
1832:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Interrupt Handler to close Tx transfer 
1833:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
1834:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *                the configuration information for SPI module.
1835:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval void
1836:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
1837:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_TxCloseIRQHandler(SPI_HandleTypeDef *hspi)
1838:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
1839:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Wait until TXE flag is set to send data */
1840:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_TXE, RESET, SPI_TIMEOUT_VALUE) != HAL_OK)
1841:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1842:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
1843:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1844:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1845:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Disable TXE interrupt */
1846:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE));
1847:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1848:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Disable ERR interrupt if Receive process is finished */
1849:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(__HAL_SPI_GET_IT_SOURCE(hspi, SPI_IT_RXNE) == RESET)
1850:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1851:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_ERR));
1852:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1853:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Wait until Busy flag is reset before disabling SPI */
1854:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_BSY, SET, SPI_TIMEOUT_VALUE) != HAL_OK)
1855:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1856:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
1857:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1858:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
ARM GAS  /tmp/cc1veDgB.s 			page 34


1859:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Clear OVERUN flag in 2 Lines communication mode because received is not read */
1860:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.Direction == SPI_DIRECTION_2LINES)
1861:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1862:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_CLEAR_OVRFLAG(hspi);
1863:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1864:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     
1865:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Check if Errors has been detected during transfer */
1866:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->ErrorCode ==  HAL_SPI_ERROR_NONE)
1867:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1868:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Check if we are in Tx or in Rx/Tx Mode */
1869:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if(hspi->State == HAL_SPI_STATE_BUSY_TX_RX)
1870:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
1871:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Set state to READY before run the Callback Complete */
1872:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
1873:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         HAL_SPI_TxRxCpltCallback(hspi);
1874:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
1875:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       else
1876:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
1877:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Set state to READY before run the Callback Complete */
1878:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
1879:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         HAL_SPI_TxCpltCallback(hspi);
1880:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
1881:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1882:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     else
1883:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1884:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Set state to READY before run the Callback Complete */
1885:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
1886:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Call Error call back in case of Error */
1887:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
1888:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1889:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1890:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
1891:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1892:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
1893:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Interrupt Handler to transmit amount of data in no-blocking mode 
1894:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
1895:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *                the configuration information for SPI module.
1896:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval void
1897:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
1898:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_TxISR(SPI_HandleTypeDef *hspi)
1899:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
1900:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Transmit data in 8 Bit mode */
1901:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(hspi->Init.DataSize == SPI_DATASIZE_8BIT)
1902:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1903:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->Instance->DR = (*hspi->pTxBuffPtr++);
1904:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1905:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
1906:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   else
1907:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1908:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->Instance->DR = *((uint16_t*)hspi->pTxBuffPtr);
1909:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pTxBuffPtr+=2U;
1910:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1911:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferCount--;
1912:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1913:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(hspi->TxXferCount == 0U)
1914:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1915:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
ARM GAS  /tmp/cc1veDgB.s 			page 35


1916:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1917:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* calculate and transfer CRC on Tx line */
1918:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1919:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1920:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SPI_TxCloseIRQHandler(hspi);
1921:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1922:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
1923:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1924:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
1925:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Interrupt Handler to close Rx transfer 
1926:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
1927:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *                the configuration information for SPI module.
1928:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval void
1929:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
1930:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_RxCloseIRQHandler(SPI_HandleTypeDef *hspi)
1931:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
1932:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __IO uint16_t tmpreg = 0U;
1933:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1934:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1935:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1936:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Wait until RXNE flag is set to read CRC data */
1937:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, SPI_TIMEOUT_VALUE) != HAL_OK)
1938:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1939:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
1940:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1941:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1942:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Read CRC to reset RXNE flag */
1943:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     tmpreg = hspi->Instance->DR;
1944:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     UNUSED(tmpreg);		/* avoid warning on tmpreg affectation with some compiler */
1945:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1946:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Wait until RXNE flag is reset */
1947:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, SET, SPI_TIMEOUT_VALUE) != HAL_OK)
1948:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1949:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
1950:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1951:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1952:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Check if CRC error occurred */
1953:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
1954:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1955:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1956:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1957:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Reset CRC Calculation */
1958:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
1959:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1960:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
1961:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1962:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Disable RXNE interrupt */
1963:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE));
1964:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1965:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* if Transmit process is finished */
1966:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(__HAL_SPI_GET_IT_SOURCE(hspi, SPI_IT_TXE) == RESET)
1967:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
1968:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Disable ERR interrupt */
1969:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_ERR));
1970:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
1971:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((hspi->Init.Mode == SPI_MODE_MASTER)&&((hspi->Init.Direction == SPI_DIRECTION_1LINE)||(hspi-
1972:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
ARM GAS  /tmp/cc1veDgB.s 			page 36


1973:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Disable SPI peripheral */
1974:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_DISABLE(hspi);
1975:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1976:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     
1977:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Check if Errors has been detected during transfer */
1978:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->ErrorCode ==  HAL_SPI_ERROR_NONE)
1979:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1980:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Check if we are in Rx or in Rx/Tx Mode */
1981:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if(hspi->State == HAL_SPI_STATE_BUSY_TX_RX)
1982:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
1983:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Set state to READY before run the Callback Complete */
1984:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
1985:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         HAL_SPI_TxRxCpltCallback(hspi);
1986:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
1987:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       else
1988:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
1989:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Set state to READY before run the Callback Complete */
1990:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
1991:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         HAL_SPI_RxCpltCallback(hspi);
1992:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
1993:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
1994:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     else
1995:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
1996:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Set state to READY before run the Callback Complete */
1997:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
1998:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Call Error call back in case of Error */
1999:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
2000:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2001:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
2002:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
2003:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2004:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
2005:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Interrupt Handler to receive amount of data in 2Lines mode 
2006:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
2007:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *                the configuration information for SPI module.
2008:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval void
2009:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
2010:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_2LinesRxISR(SPI_HandleTypeDef *hspi)
2011:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
2012:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Receive data in 8 Bit mode */
2013:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(hspi->Init.DataSize == SPI_DATASIZE_8BIT)
2014:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
2015:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     (*hspi->pRxBuffPtr++) = hspi->Instance->DR;
2016:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
2017:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
2018:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   else
2019:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
2020:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     *((uint16_t*)hspi->pRxBuffPtr) = hspi->Instance->DR;
2021:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pRxBuffPtr+=2U;
2022:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
2023:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferCount--;
2024:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2025:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(hspi->RxXferCount==0U)
2026:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
2027:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SPI_RxCloseIRQHandler(hspi);
2028:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
2029:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
ARM GAS  /tmp/cc1veDgB.s 			page 37


2030:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2031:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
2032:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  Interrupt Handler to receive amount of data in no-blocking mode 
2033:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
2034:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *                the configuration information for SPI module.
2035:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval void
2036:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
2037:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_RxISR(SPI_HandleTypeDef *hspi)
2038:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
2039:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Receive data in 8 Bit mode */
2040:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(hspi->Init.DataSize == SPI_DATASIZE_8BIT)
2041:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
2042:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     (*hspi->pRxBuffPtr++) = hspi->Instance->DR;
2043:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
2044:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
2045:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   else
2046:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
2047:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     *((uint16_t*)hspi->pRxBuffPtr) = hspi->Instance->DR;
2048:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pRxBuffPtr+=2U;
2049:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
2050:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferCount--;
2051:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2052:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Enable CRC Transmission */
2053:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if((hspi->RxXferCount == 1U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
2054:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
2055:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Set CRC Next to calculate CRC on Rx side */
2056:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
2057:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
2058:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2059:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(hspi->RxXferCount == 0U)
2060:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
2061:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SPI_RxCloseIRQHandler(hspi);
2062:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
2063:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
2064:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2065:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
2066:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief DMA SPI transmit process complete callback 
2067:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
2068:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *                the configuration information for the specified DMA module.
2069:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
2070:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
2071:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2072:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
2073:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = ( SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2074:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2075:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2076:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* DMA Normal Mode */
2077:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
2078:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
2079:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Wait until TXE flag is set to send data */
2080:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_TXE, RESET, SPI_TIMEOUT_VALUE) != HAL_OK)
2081:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2082:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
2083:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2084:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2085:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Disable Tx DMA Request */
2086:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
ARM GAS  /tmp/cc1veDgB.s 			page 38


2087:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2088:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Wait until Busy flag is reset before disabling SPI */
2089:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_BSY, SET, SPI_TIMEOUT_VALUE) != HAL_OK)
2090:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2091:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
2092:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2093:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2094:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferCount = 0U;
2095:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2096:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
2097:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2098:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Clear OVERUN flag in 2 Lines communication mode because received is not read */
2099:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(hspi->Init.Direction == SPI_DIRECTION_2LINES)
2100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
2101:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
2102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
2103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Check if Errors has been detected during transfer */
2105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
2107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
2108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
2109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   else
2110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
2111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     HAL_SPI_TxCpltCallback(hspi);
2112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
2113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
2114:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2115:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
2116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief DMA SPI receive process complete callback 
2117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
2118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *                the configuration information for the specified DMA module.
2119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
2120:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
2121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
2123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __IO uint16_t tmpreg = 0U;
2124:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = ( SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2126:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* DMA Normal mode */
2128:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
2129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
2130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Disable Rx DMA Request */
2131:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
2132:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2133:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Disable Tx DMA Request (done by default to handle the case Master RX direction 2 lines) */
2134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
2135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2136:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* CRC Calculation handling */
2137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
2138:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Wait until RXNE flag is set (CRC ready) */
2140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, SPI_TIMEOUT_VALUE) != HAL_OK)
2141:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
2142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
2143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
ARM GAS  /tmp/cc1veDgB.s 			page 39


2144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2145:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Read CRC */
2146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       tmpreg = hspi->Instance->DR;
2147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       UNUSED(tmpreg);		/* avoid warning on tmpreg affectation with some compiler */
2148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Wait until RXNE flag is reset */
2150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, SET, SPI_TIMEOUT_VALUE) != HAL_OK)
2151:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
2152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
2153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
2154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Check if CRC error occurred */
2156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if(__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
2157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
2158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
2160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
2161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((hspi->Init.Mode == SPI_MODE_MASTER)&&((hspi->Init.Direction == SPI_DIRECTION_1LINE)||(hspi-
2164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2165:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Disable SPI peripheral */
2166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_DISABLE(hspi);
2167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferCount = 0U;
2170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2171:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2172:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Check if Errors has been detected during transfer */
2173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
2176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     else
2178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       HAL_SPI_RxCpltCallback(hspi);
2180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
2182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   else
2183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
2184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     HAL_SPI_RxCpltCallback(hspi);
2185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
2186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
2187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
2189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief DMA SPI transmit receive process complete callback 
2190:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
2191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *                the configuration information for the specified DMA module.
2192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
2193:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
2194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma)   
2195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
2196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __IO uint16_t tmpreg = 0U;
2197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = ( SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
2200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
ARM GAS  /tmp/cc1veDgB.s 			page 40


2201:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* CRC Calculation handling */
2202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
2203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Check if CRC is done on going (RXNE flag set) */
2205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, SET, SPI_TIMEOUT_VALUE) == HAL_OK)
2206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
2207:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         /* Wait until RXNE flag is set to send data */
2208:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, SPI_TIMEOUT_VALUE) != HAL_OK)
2209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         {
2210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
2211:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         }
2212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
2213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Read CRC */
2214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       tmpreg = hspi->Instance->DR;
2215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       UNUSED(tmpreg);		/* avoid warning on tmpreg affectation with some compiler */
2216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       /* Check if CRC error occurred */
2218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if(__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
2219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
2220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
2222:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
2223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2224:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Wait until TXE flag is set to send data */
2226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_TXE, RESET, SPI_TIMEOUT_VALUE) != HAL_OK)
2227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
2229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   
2231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Disable Tx DMA Request */
2232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
2233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Wait until Busy flag is reset before disabling SPI */
2235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_BSY, SET, SPI_TIMEOUT_VALUE) != HAL_OK)
2236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
2238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Disable Rx DMA Request */
2241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
2242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferCount = 0U;
2244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferCount = 0U;
2245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
2247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     /* Check if Errors has been detected during transfer */
2249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->ErrorCode != HAL_SPI_ERROR_NONE)
2250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
2252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     else
2254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       HAL_SPI_TxRxCpltCallback(hspi);
2256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
ARM GAS  /tmp/cc1veDgB.s 			page 41


2258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   else
2259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
2260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     HAL_SPI_TxRxCpltCallback(hspi);
2261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
2262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
2263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
2265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief DMA SPI half transmit process complete callback 
2266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
2267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *                the configuration information for the specified DMA module.
2268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
2269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
2270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma)
2271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
2272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = ( SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_SPI_TxHalfCpltCallback(hspi);
2275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
2276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
2278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief DMA SPI half receive process complete callback 
2279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
2280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *                the configuration information for the specified DMA module.
2281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
2282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
2283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma)
2284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
2285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = ( SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2286:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_SPI_RxHalfCpltCallback(hspi);
2288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
2289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
2291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief DMA SPI Half transmit receive process complete callback 
2292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
2293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *                the configuration information for the specified DMA module.
2294:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
2295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
2296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma)   
2297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
2298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = ( SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_SPI_TxRxHalfCpltCallback(hspi);
2301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
2302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
2304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief DMA SPI communication error callback 
2305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
2306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *                the configuration information for the specified DMA module.
2307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval None
2308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
2309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma)
2310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
2311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = (SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
2313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
2314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->State= HAL_SPI_STATE_READY;
ARM GAS  /tmp/cc1veDgB.s 			page 42


2315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
2316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_SPI_ErrorCallback(hspi);
2317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
2318:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** /**
2320:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @brief  This function handles SPI Communication Timeout.
2321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
2322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   *                the configuration information for SPI module.
2323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  Flag: SPI flag to check
2324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  Status: Flag status to check: RESET or set
2325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @param  Timeout: Timeout duration
2326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   * @retval HAL status
2327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   */
2328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitOnFlagUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagSta
2329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
  25              		.loc 1 2329 0
  26              		.cfi_startproc
  27              	.LVL0:
  28 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 20
  31              		.cfi_offset 4, -20
  32              		.cfi_offset 5, -16
  33              		.cfi_offset 6, -12
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 4746     		mov	r7, r8
  37 0004 80B4     		push	{r7}
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 24
  40              		.cfi_offset 8, -24
  41 0006 061C     		mov	r6, r0
  42 0008 0C1C     		mov	r4, r1
  43 000a 9046     		mov	r8, r2
  44 000c 1D1C     		mov	r5, r3
  45              	.LVL1:
2330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   uint32_t tickstart = 0U;
2331:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Get tick */ 
2333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   tickstart = HAL_GetTick();
  46              		.loc 1 2333 0
  47 000e FFF7FEFF 		bl	HAL_GetTick
  48              	.LVL2:
  49 0012 071C     		mov	r7, r0
  50              	.LVL3:
2334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   /* Wait until flag is set */
2336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(Status == RESET)
  51              		.loc 1 2336 0
  52 0014 4246     		mov	r2, r8
  53 0016 002A     		cmp	r2, #0
  54 0018 2BD0     		beq	.L14
  55 001a 5CE0     		b	.L15
  56              	.LVL4:
  57              	.L8:
2337:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
2338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     while(__HAL_SPI_GET_FLAG(hspi, Flag) == RESET)
ARM GAS  /tmp/cc1veDgB.s 			page 43


2339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2340:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if(Timeout != HAL_MAX_DELAY)
  58              		.loc 1 2340 0
  59 001c 6B1C     		add	r3, r5, #1
  60 001e 28D0     		beq	.L14
2341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
2342:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
  61              		.loc 1 2342 0
  62 0020 002D     		cmp	r5, #0
  63 0022 04D0     		beq	.L5
  64              		.loc 1 2342 0 is_stmt 0 discriminator 1
  65 0024 FFF7FEFF 		bl	HAL_GetTick
  66              	.LVL5:
  67 0028 C01B     		sub	r0, r0, r7
  68 002a A842     		cmp	r0, r5
  69 002c 21D9     		bls	.L14
  70              	.L5:
2343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         {
2344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           /* Disable the SPI and reset the CRC: the CRC value should be cleared
2345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****              on both master and slave sides in order to resynchronize the master
2346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****              and slave for their respective CRC calculation */
2347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
2349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           __HAL_SPI_DISABLE_IT(hspi, (uint32_t)(SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
  71              		.loc 1 2349 0 is_stmt 1
  72 002e 3368     		ldr	r3, [r6]
  73 0030 5A68     		ldr	r2, [r3, #4]
  74 0032 E021     		mov	r1, #224
  75 0034 8A43     		bic	r2, r1
  76 0036 5A60     		str	r2, [r3, #4]
2350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           /* Disable SPI peripheral */
2352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           __HAL_SPI_DISABLE(hspi);
  77              		.loc 1 2352 0
  78 0038 3368     		ldr	r3, [r6]
  79 003a 1A68     		ldr	r2, [r3]
  80 003c 4021     		mov	r1, #64
  81 003e 8A43     		bic	r2, r1
  82 0040 1A60     		str	r2, [r3]
2353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           /* Reset CRC Calculation */
2355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
  83              		.loc 1 2355 0
  84 0042 8023     		mov	r3, #128
  85 0044 9B01     		lsl	r3, r3, #6
  86 0046 B26A     		ldr	r2, [r6, #40]
  87 0048 9A42     		cmp	r2, r3
  88 004a 0AD1     		bne	.L6
2356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           {
2357:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             SPI_RESET_CRC(hspi);
  89              		.loc 1 2357 0
  90 004c 3368     		ldr	r3, [r6]
  91 004e 1968     		ldr	r1, [r3]
  92 0050 254A     		ldr	r2, .L16
  93 0052 0A40     		and	r2, r1
  94 0054 1A60     		str	r2, [r3]
  95 0056 3368     		ldr	r3, [r6]
ARM GAS  /tmp/cc1veDgB.s 			page 44


  96 0058 1968     		ldr	r1, [r3]
  97 005a 8022     		mov	r2, #128
  98 005c 9201     		lsl	r2, r2, #6
  99 005e 0A43     		orr	r2, r1
 100 0060 1A60     		str	r2, [r3]
 101              	.L6:
2358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           }
2359:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2360:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           hspi->State= HAL_SPI_STATE_READY;
 102              		.loc 1 2360 0
 103 0062 0122     		mov	r2, #1
 104 0064 5123     		mov	r3, #81
 105 0066 F254     		strb	r2, [r6, r3]
2361:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           /* Process Unlocked */
2363:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           __HAL_UNLOCK(hspi);
 106              		.loc 1 2363 0
 107 0068 0022     		mov	r2, #0
 108 006a 5023     		mov	r3, #80
 109 006c F254     		strb	r2, [r6, r3]
2364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           return HAL_TIMEOUT;
 110              		.loc 1 2365 0
 111 006e 0320     		mov	r0, #3
 112 0070 37E0     		b	.L7
 113              	.L14:
2338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     while(__HAL_SPI_GET_FLAG(hspi, Flag) == RESET)
 114              		.loc 1 2338 0 discriminator 1
 115 0072 3368     		ldr	r3, [r6]
 116 0074 9B68     		ldr	r3, [r3, #8]
 117 0076 2340     		and	r3, r4
 118 0078 A342     		cmp	r3, r4
 119 007a CFD1     		bne	.L8
2366:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         }
2367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
2368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
2370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   else
2371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   {
2372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     while(__HAL_SPI_GET_FLAG(hspi, Flag) != RESET)
2373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     {
2374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if(Timeout != HAL_MAX_DELAY)
2375:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       {
2376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
2377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         {
2378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           /* Disable the SPI and reset the CRC: the CRC value should be cleared
2379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****              on both master and slave sides in order to resynchronize the master
2380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****              and slave for their respective CRC calculation */
2381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
2383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           __HAL_SPI_DISABLE_IT(hspi, (uint32_t)(SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
2384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           /* Disable SPI peripheral */
2386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           __HAL_SPI_DISABLE(hspi);
2387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           /* Reset CRC Calculation */
2389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
ARM GAS  /tmp/cc1veDgB.s 			page 45


2390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           {
2391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             SPI_RESET_CRC(hspi);
2392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           }
2393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2394:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           hspi->State= HAL_SPI_STATE_READY;
2395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           /* Process Unlocked */
2397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           __HAL_UNLOCK(hspi);
2398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 
2399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           return HAL_TIMEOUT;
2400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         }
2401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       }
2402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     }
2403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   }
2404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return HAL_OK;
 120              		.loc 1 2404 0
 121 007c 0020     		mov	r0, #0
 122 007e 30E0     		b	.L7
 123              	.L12:
2374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if(Timeout != HAL_MAX_DELAY)
 124              		.loc 1 2374 0
 125 0080 6B1C     		add	r3, r5, #1
 126 0082 28D0     		beq	.L15
2376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 127              		.loc 1 2376 0
 128 0084 002D     		cmp	r5, #0
 129 0086 04D0     		beq	.L10
2376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 130              		.loc 1 2376 0 is_stmt 0 discriminator 1
 131 0088 FFF7FEFF 		bl	HAL_GetTick
 132              	.LVL6:
 133 008c C01B     		sub	r0, r0, r7
 134 008e A842     		cmp	r0, r5
 135 0090 21D9     		bls	.L15
 136              	.L10:
2383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           __HAL_SPI_DISABLE_IT(hspi, (uint32_t)(SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 137              		.loc 1 2383 0 is_stmt 1
 138 0092 3368     		ldr	r3, [r6]
 139 0094 5A68     		ldr	r2, [r3, #4]
 140 0096 E021     		mov	r1, #224
 141 0098 8A43     		bic	r2, r1
 142 009a 5A60     		str	r2, [r3, #4]
2386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           __HAL_SPI_DISABLE(hspi);
 143              		.loc 1 2386 0
 144 009c 3368     		ldr	r3, [r6]
 145 009e 1A68     		ldr	r2, [r3]
 146 00a0 4021     		mov	r1, #64
 147 00a2 8A43     		bic	r2, r1
 148 00a4 1A60     		str	r2, [r3]
2389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 149              		.loc 1 2389 0
 150 00a6 8023     		mov	r3, #128
 151 00a8 9B01     		lsl	r3, r3, #6
 152 00aa B26A     		ldr	r2, [r6, #40]
 153 00ac 9A42     		cmp	r2, r3
 154 00ae 0AD1     		bne	.L11
2391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             SPI_RESET_CRC(hspi);
ARM GAS  /tmp/cc1veDgB.s 			page 46


 155              		.loc 1 2391 0
 156 00b0 3368     		ldr	r3, [r6]
 157 00b2 1968     		ldr	r1, [r3]
 158 00b4 0C4A     		ldr	r2, .L16
 159 00b6 0A40     		and	r2, r1
 160 00b8 1A60     		str	r2, [r3]
 161 00ba 3368     		ldr	r3, [r6]
 162 00bc 1968     		ldr	r1, [r3]
 163 00be 8022     		mov	r2, #128
 164 00c0 9201     		lsl	r2, r2, #6
 165 00c2 0A43     		orr	r2, r1
 166 00c4 1A60     		str	r2, [r3]
 167              	.L11:
2394:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           hspi->State= HAL_SPI_STATE_READY;
 168              		.loc 1 2394 0
 169 00c6 0122     		mov	r2, #1
 170 00c8 5123     		mov	r3, #81
 171 00ca F254     		strb	r2, [r6, r3]
2397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           __HAL_UNLOCK(hspi);
 172              		.loc 1 2397 0
 173 00cc 0022     		mov	r2, #0
 174 00ce 5023     		mov	r3, #80
 175 00d0 F254     		strb	r2, [r6, r3]
2399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           return HAL_TIMEOUT;
 176              		.loc 1 2399 0
 177 00d2 0320     		mov	r0, #3
 178 00d4 05E0     		b	.L7
 179              	.L15:
2372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     while(__HAL_SPI_GET_FLAG(hspi, Flag) != RESET)
 180              		.loc 1 2372 0 discriminator 1
 181 00d6 3368     		ldr	r3, [r6]
 182 00d8 9B68     		ldr	r3, [r3, #8]
 183 00da 2340     		and	r3, r4
 184 00dc A342     		cmp	r3, r4
 185 00de CFD0     		beq	.L12
 186              		.loc 1 2404 0
 187 00e0 0020     		mov	r0, #0
 188              	.L7:
2405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 189              		.loc 1 2405 0
 190              		@ sp needed
 191              	.LVL7:
 192              	.LVL8:
 193              	.LVL9:
 194              	.LVL10:
 195 00e2 04BC     		pop	{r2}
 196 00e4 9046     		mov	r8, r2
 197 00e6 F0BD     		pop	{r4, r5, r6, r7, pc}
 198              	.L17:
 199              		.align	2
 200              	.L16:
 201 00e8 FFDFFFFF 		.word	-8193
 202              		.cfi_endproc
 203              	.LFE74:
 205              		.section	.text.HAL_SPI_MspInit,"ax",%progbits
 206              		.align	2
 207              		.weak	HAL_SPI_MspInit
ARM GAS  /tmp/cc1veDgB.s 			page 47


 208              		.code	16
 209              		.thumb_func
 211              	HAL_SPI_MspInit:
 212              	.LFB38:
 339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****  {
 213              		.loc 1 339 0
 214              		.cfi_startproc
 215              	.LVL11:
 346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 216              		.loc 1 346 0
 217              		@ sp needed
 218 0000 7047     		bx	lr
 219              		.cfi_endproc
 220              	.LFE38:
 222 0002 C046     		.section	.text.HAL_SPI_Init,"ax",%progbits
 223              		.align	2
 224              		.global	HAL_SPI_Init
 225              		.code	16
 226              		.thumb_func
 228              	HAL_SPI_Init:
 229              	.LFB36:
 241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 230              		.loc 1 241 0
 231              		.cfi_startproc
 232              	.LVL12:
 233 0000 38B5     		push	{r3, r4, r5, lr}
 234              	.LCFI2:
 235              		.cfi_def_cfa_offset 16
 236              		.cfi_offset 3, -16
 237              		.cfi_offset 4, -12
 238              		.cfi_offset 5, -8
 239              		.cfi_offset 14, -4
 240 0002 041E     		sub	r4, r0, #0
 243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(hspi == NULL)
 241              		.loc 1 243 0
 242 0004 3BD0     		beq	.L22
 262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(hspi->State == HAL_SPI_STATE_RESET)
 243              		.loc 1 262 0
 244 0006 5123     		mov	r3, #81
 245 0008 C35C     		ldrb	r3, [r0, r3]
 246 000a 002B     		cmp	r3, #0
 247 000c 04D1     		bne	.L21
 265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->Lock = HAL_UNLOCKED;
 248              		.loc 1 265 0
 249 000e 0022     		mov	r2, #0
 250 0010 5023     		mov	r3, #80
 251 0012 C254     		strb	r2, [r0, r3]
 268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     HAL_SPI_MspInit(hspi);
 252              		.loc 1 268 0
 253 0014 FFF7FEFF 		bl	HAL_SPI_MspInit
 254              	.LVL13:
 255              	.L21:
 271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
 256              		.loc 1 271 0
 257 0018 5123     		mov	r3, #81
 258 001a 0222     		mov	r2, #2
 259 001c E254     		strb	r2, [r4, r3]
ARM GAS  /tmp/cc1veDgB.s 			page 48


 274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 260              		.loc 1 274 0
 261 001e 2268     		ldr	r2, [r4]
 262 0020 1168     		ldr	r1, [r2]
 263 0022 4020     		mov	r0, #64
 264 0024 8143     		bic	r1, r0
 265 0026 1160     		str	r1, [r2]
 279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 266              		.loc 1 279 0
 267 0028 2268     		ldr	r2, [r4]
 268 002a 6168     		ldr	r1, [r4, #4]
 269 002c A068     		ldr	r0, [r4, #8]
 270 002e 0143     		orr	r1, r0
 271 0030 E568     		ldr	r5, [r4, #12]
 272 0032 2943     		orr	r1, r5
 273 0034 2069     		ldr	r0, [r4, #16]
 274 0036 0143     		orr	r1, r0
 275 0038 6569     		ldr	r5, [r4, #20]
 276 003a 2943     		orr	r1, r5
 277 003c 8020     		mov	r0, #128
 278 003e 8000     		lsl	r0, r0, #2
 279 0040 A569     		ldr	r5, [r4, #24]
 280 0042 2840     		and	r0, r5
 281 0044 0143     		orr	r1, r0
 282 0046 E069     		ldr	r0, [r4, #28]
 283 0048 0143     		orr	r1, r0
 284 004a 256A     		ldr	r5, [r4, #32]
 285 004c 2943     		orr	r1, r5
 286 004e A06A     		ldr	r0, [r4, #40]
 287 0050 0143     		orr	r1, r0
 288 0052 1160     		str	r1, [r2]
 284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 289              		.loc 1 284 0
 290 0054 2268     		ldr	r2, [r4]
 291 0056 618B     		ldrh	r1, [r4, #26]
 292 0058 0420     		mov	r0, #4
 293 005a 0140     		and	r1, r0
 294 005c 656A     		ldr	r5, [r4, #36]
 295 005e 2943     		orr	r1, r5
 296 0060 5160     		str	r1, [r2, #4]
 288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CRCPR, hspi->Init.CRCPolynomial);
 297              		.loc 1 288 0
 298 0062 2268     		ldr	r2, [r4]
 299 0064 E06A     		ldr	r0, [r4, #44]
 300 0066 1061     		str	r0, [r2, #16]
 292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 301              		.loc 1 292 0
 302 0068 2268     		ldr	r2, [r4]
 303 006a D069     		ldr	r0, [r2, #28]
 304 006c 0549     		ldr	r1, .L23
 305 006e 0140     		and	r1, r0
 306 0070 D161     		str	r1, [r2, #28]
 295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 307              		.loc 1 295 0
 308 0072 0022     		mov	r2, #0
 309 0074 6265     		str	r2, [r4, #84]
 296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
ARM GAS  /tmp/cc1veDgB.s 			page 49


 310              		.loc 1 296 0
 311 0076 0122     		mov	r2, #1
 312 0078 E254     		strb	r2, [r4, r3]
 298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return HAL_OK;
 313              		.loc 1 298 0
 314 007a 0020     		mov	r0, #0
 315 007c 00E0     		b	.L20
 316              	.LVL14:
 317              	.L22:
 245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_ERROR;
 318              		.loc 1 245 0
 319 007e 0120     		mov	r0, #1
 320              	.LVL15:
 321              	.L20:
 299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 322              		.loc 1 299 0
 323              		@ sp needed
 324              	.LVL16:
 325 0080 38BD     		pop	{r3, r4, r5, pc}
 326              	.L24:
 327 0082 C046     		.align	2
 328              	.L23:
 329 0084 FFF7FFFF 		.word	-2049
 330              		.cfi_endproc
 331              	.LFE36:
 333              		.section	.text.HAL_SPI_MspDeInit,"ax",%progbits
 334              		.align	2
 335              		.weak	HAL_SPI_MspDeInit
 336              		.code	16
 337              		.thumb_func
 339              	HAL_SPI_MspDeInit:
 340              	.LFB39:
 355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 341              		.loc 1 355 0
 342              		.cfi_startproc
 343              	.LVL17:
 362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 344              		.loc 1 362 0
 345              		@ sp needed
 346 0000 7047     		bx	lr
 347              		.cfi_endproc
 348              	.LFE39:
 350 0002 C046     		.section	.text.HAL_SPI_DeInit,"ax",%progbits
 351              		.align	2
 352              		.global	HAL_SPI_DeInit
 353              		.code	16
 354              		.thumb_func
 356              	HAL_SPI_DeInit:
 357              	.LFB37:
 308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 358              		.loc 1 308 0
 359              		.cfi_startproc
 360              	.LVL18:
 361 0000 38B5     		push	{r3, r4, r5, lr}
 362              	.LCFI3:
 363              		.cfi_def_cfa_offset 16
 364              		.cfi_offset 3, -16
ARM GAS  /tmp/cc1veDgB.s 			page 50


 365              		.cfi_offset 4, -12
 366              		.cfi_offset 5, -8
 367              		.cfi_offset 14, -4
 368 0002 041E     		sub	r4, r0, #0
 310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(hspi == NULL)
 369              		.loc 1 310 0
 370 0004 10D0     		beq	.L28
 315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
 371              		.loc 1 315 0
 372 0006 5125     		mov	r5, #81
 373 0008 0223     		mov	r3, #2
 374 000a 4355     		strb	r3, [r0, r5]
 318:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 375              		.loc 1 318 0
 376 000c 0368     		ldr	r3, [r0]
 377 000e 1A68     		ldr	r2, [r3]
 378 0010 4021     		mov	r1, #64
 379 0012 8A43     		bic	r2, r1
 380 0014 1A60     		str	r2, [r3]
 321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_SPI_MspDeInit(hspi);
 381              		.loc 1 321 0
 382 0016 FFF7FEFF 		bl	HAL_SPI_MspDeInit
 383              	.LVL19:
 323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 384              		.loc 1 323 0
 385 001a 0023     		mov	r3, #0
 386 001c 6365     		str	r3, [r4, #84]
 324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_RESET;
 387              		.loc 1 324 0
 388 001e 6355     		strb	r3, [r4, r5]
 327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 389              		.loc 1 327 0
 390 0020 5022     		mov	r2, #80
 391 0022 A354     		strb	r3, [r4, r2]
 329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return HAL_OK;
 392              		.loc 1 329 0
 393 0024 0020     		mov	r0, #0
 394 0026 00E0     		b	.L27
 395              	.LVL20:
 396              	.L28:
 312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_ERROR;
 397              		.loc 1 312 0
 398 0028 0120     		mov	r0, #1
 399              	.LVL21:
 400              	.L27:
 330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 401              		.loc 1 330 0
 402              		@ sp needed
 403              	.LVL22:
 404 002a 38BD     		pop	{r3, r4, r5, pc}
 405              		.cfi_endproc
 406              	.LFE37:
 408              		.section	.text.HAL_SPI_Transmit,"ax",%progbits
 409              		.align	2
 410              		.global	HAL_SPI_Transmit
 411              		.code	16
 412              		.thumb_func
ARM GAS  /tmp/cc1veDgB.s 			page 51


 414              	HAL_SPI_Transmit:
 415              	.LFB40:
 432:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 416              		.loc 1 432 0
 417              		.cfi_startproc
 418              	.LVL23:
 419 0000 30B5     		push	{r4, r5, lr}
 420              	.LCFI4:
 421              		.cfi_def_cfa_offset 12
 422              		.cfi_offset 4, -12
 423              		.cfi_offset 5, -8
 424              		.cfi_offset 14, -4
 425 0002 83B0     		sub	sp, sp, #12
 426              	.LCFI5:
 427              		.cfi_def_cfa_offset 24
 428 0004 041C     		mov	r4, r0
 429 0006 1D1C     		mov	r5, r3
 434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(hspi->State == HAL_SPI_STATE_READY)
 430              		.loc 1 434 0
 431 0008 5120     		mov	r0, #81
 432              	.LVL24:
 433 000a 205C     		ldrb	r0, [r4, r0]
 434 000c 0128     		cmp	r0, #1
 435 000e 00D0     		beq	.LCB403
 436 0010 D5E0     		b	.L47	@long jump
 437              	.LCB403:
 436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((pData == NULL ) || (Size == 0U)) 
 438              		.loc 1 436 0
 439 0012 0029     		cmp	r1, #0
 440 0014 00D1     		bne	.LCB405
 441 0016 D4E0     		b	.L48	@long jump
 442              	.LCB405:
 436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((pData == NULL ) || (Size == 0U)) 
 443              		.loc 1 436 0 is_stmt 0 discriminator 1
 444 0018 002A     		cmp	r2, #0
 445 001a 00D1     		bne	.LCB407
 446 001c D3E0     		b	.L49	@long jump
 447              	.LCB407:
 445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_LOCK(hspi);
 448              		.loc 1 445 0 is_stmt 1
 449 001e 5023     		mov	r3, #80
 450              	.LVL25:
 451 0020 E35C     		ldrb	r3, [r4, r3]
 452 0022 012B     		cmp	r3, #1
 453 0024 00D1     		bne	.LCB412
 454 0026 D0E0     		b	.L50	@long jump
 455              	.LCB412:
 445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_LOCK(hspi);
 456              		.loc 1 445 0 is_stmt 0 discriminator 2
 457 0028 5023     		mov	r3, #80
 458 002a E054     		strb	r0, [r4, r3]
 448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX;
 459              		.loc 1 448 0 is_stmt 1 discriminator 2
 460 002c 1220     		mov	r0, #18
 461 002e 5123     		mov	r3, #81
 462 0030 E054     		strb	r0, [r4, r3]
 449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
ARM GAS  /tmp/cc1veDgB.s 			page 52


 463              		.loc 1 449 0 discriminator 2
 464 0032 0023     		mov	r3, #0
 465 0034 6365     		str	r3, [r4, #84]
 451:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pTxBuffPtr  = pData;
 466              		.loc 1 451 0 discriminator 2
 467 0036 2163     		str	r1, [r4, #48]
 452:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferSize  = Size;
 468              		.loc 1 452 0 discriminator 2
 469 0038 A286     		strh	r2, [r4, #52]
 453:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferCount = Size;
 470              		.loc 1 453 0 discriminator 2
 471 003a E286     		strh	r2, [r4, #54]
 456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxISR = 0U;
 472              		.loc 1 456 0 discriminator 2
 473 003c E364     		str	r3, [r4, #76]
 457:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxISR = 0U;
 474              		.loc 1 457 0 discriminator 2
 475 003e A364     		str	r3, [r4, #72]
 458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pRxBuffPtr  = NULL;
 476              		.loc 1 458 0 discriminator 2
 477 0040 A363     		str	r3, [r4, #56]
 459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferSize  = 0U;
 478              		.loc 1 459 0 discriminator 2
 479 0042 A387     		strh	r3, [r4, #60]
 460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferCount = 0U;
 480              		.loc 1 460 0 discriminator 2
 481 0044 E387     		strh	r3, [r4, #62]
 463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 482              		.loc 1 463 0 discriminator 2
 483 0046 8023     		mov	r3, #128
 484 0048 9B01     		lsl	r3, r3, #6
 485 004a A16A     		ldr	r1, [r4, #40]
 486              	.LVL26:
 487 004c 9942     		cmp	r1, r3
 488 004e 0AD1     		bne	.L31
 465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
 489              		.loc 1 465 0
 490 0050 2368     		ldr	r3, [r4]
 491 0052 1968     		ldr	r1, [r3]
 492 0054 604A     		ldr	r2, .L55
 493              	.LVL27:
 494 0056 0A40     		and	r2, r1
 495 0058 1A60     		str	r2, [r3]
 496              	.LVL28:
 497 005a 2368     		ldr	r3, [r4]
 498 005c 1968     		ldr	r1, [r3]
 499 005e 8022     		mov	r2, #128
 500 0060 9201     		lsl	r2, r2, #6
 501 0062 0A43     		orr	r2, r1
 502 0064 1A60     		str	r2, [r3]
 503              	.L31:
 468:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.Direction == SPI_DIRECTION_1LINE)
 504              		.loc 1 468 0
 505 0066 8023     		mov	r3, #128
 506 0068 1B02     		lsl	r3, r3, #8
 507 006a A268     		ldr	r2, [r4, #8]
 508 006c 9A42     		cmp	r2, r3
ARM GAS  /tmp/cc1veDgB.s 			page 53


 509 006e 05D1     		bne	.L32
 471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SPI_1LINE_TX(hspi);
 510              		.loc 1 471 0
 511 0070 2368     		ldr	r3, [r4]
 512 0072 1968     		ldr	r1, [r3]
 513 0074 8022     		mov	r2, #128
 514 0076 D201     		lsl	r2, r2, #7
 515 0078 0A43     		orr	r2, r1
 516 007a 1A60     		str	r2, [r3]
 517              	.L32:
 475:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((hspi->Instance->CR1 &SPI_CR1_SPE) != SPI_CR1_SPE)
 518              		.loc 1 475 0
 519 007c 2368     		ldr	r3, [r4]
 520 007e 1A68     		ldr	r2, [r3]
 521 0080 5106     		lsl	r1, r2, #25
 522 0082 03D4     		bmi	.L33
 478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_ENABLE(hspi);
 523              		.loc 1 478 0
 524 0084 1968     		ldr	r1, [r3]
 525 0086 4022     		mov	r2, #64
 526 0088 0A43     		orr	r2, r1
 527 008a 1A60     		str	r2, [r3]
 528              	.L33:
 482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 529              		.loc 1 482 0
 530 008c E268     		ldr	r2, [r4, #12]
 531 008e 002A     		cmp	r2, #0
 532 0090 34D1     		bne	.L34
 484:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if((hspi->Init.Mode == SPI_MODE_SLAVE)|| (hspi->TxXferCount == 0x01U))
 533              		.loc 1 484 0
 534 0092 6368     		ldr	r3, [r4, #4]
 535 0094 002B     		cmp	r3, #0
 536 0096 03D0     		beq	.L35
 484:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if((hspi->Init.Mode == SPI_MODE_SLAVE)|| (hspi->TxXferCount == 0x01U))
 537              		.loc 1 484 0 is_stmt 0 discriminator 1
 538 0098 E38E     		ldrh	r3, [r4, #54]
 539 009a 9BB2     		uxth	r3, r3
 540 009c 012B     		cmp	r3, #1
 541 009e 1DD1     		bne	.L53
 542              	.L35:
 486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->Instance->DR = (*hspi->pTxBuffPtr++);
 543              		.loc 1 486 0 is_stmt 1
 544 00a0 2268     		ldr	r2, [r4]
 545 00a2 236B     		ldr	r3, [r4, #48]
 546 00a4 591C     		add	r1, r3, #1
 547 00a6 2163     		str	r1, [r4, #48]
 548 00a8 1B78     		ldrb	r3, [r3]
 549 00aa D360     		str	r3, [r2, #12]
 487:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->TxXferCount--;
 550              		.loc 1 487 0
 551 00ac E38E     		ldrh	r3, [r4, #54]
 552 00ae 013B     		sub	r3, r3, #1
 553 00b0 9BB2     		uxth	r3, r3
 554 00b2 E386     		strh	r3, [r4, #54]
 555 00b4 12E0     		b	.L53
 556              	.L38:
 493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_TXE, RESET, Timeout) != HAL_OK)
ARM GAS  /tmp/cc1veDgB.s 			page 54


 557              		.loc 1 493 0
 558 00b6 201C     		mov	r0, r4
 559 00b8 0221     		mov	r1, #2
 560 00ba 0022     		mov	r2, #0
 561 00bc 2B1C     		mov	r3, r5
 562 00be FFF7FEFF 		bl	SPI_WaitOnFlagUntilTimeout
 563              	.LVL29:
 564 00c2 0028     		cmp	r0, #0
 565 00c4 00D0     		beq	.LCB513
 566 00c6 82E0     		b	.L51	@long jump
 567              	.LCB513:
 497:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->Instance->DR = (*hspi->pTxBuffPtr++);
 568              		.loc 1 497 0
 569 00c8 2268     		ldr	r2, [r4]
 570 00ca 236B     		ldr	r3, [r4, #48]
 571 00cc 591C     		add	r1, r3, #1
 572 00ce 2163     		str	r1, [r4, #48]
 573 00d0 1B78     		ldrb	r3, [r3]
 574 00d2 D360     		str	r3, [r2, #12]
 498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->TxXferCount--;
 575              		.loc 1 498 0
 576 00d4 E38E     		ldrh	r3, [r4, #54]
 577 00d6 013B     		sub	r3, r3, #1
 578 00d8 9BB2     		uxth	r3, r3
 579 00da E386     		strh	r3, [r4, #54]
 580              	.L53:
 490:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       while(hspi->TxXferCount > 0U)
 581              		.loc 1 490 0 discriminator 1
 582 00dc E38E     		ldrh	r3, [r4, #54]
 583 00de 9BB2     		uxth	r3, r3
 584 00e0 002B     		cmp	r3, #0
 585 00e2 E8D1     		bne	.L38
 501:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE) 
 586              		.loc 1 501 0
 587 00e4 8023     		mov	r3, #128
 588 00e6 9B01     		lsl	r3, r3, #6
 589 00e8 A16A     		ldr	r1, [r4, #40]
 590 00ea 9942     		cmp	r1, r3
 591 00ec 3BD1     		bne	.L39
 503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 592              		.loc 1 503 0
 593 00ee 2368     		ldr	r3, [r4]
 594 00f0 1968     		ldr	r1, [r3]
 595 00f2 8022     		mov	r2, #128
 596 00f4 5201     		lsl	r2, r2, #5
 597 00f6 0A43     		orr	r2, r1
 598 00f8 1A60     		str	r2, [r3]
 599 00fa 34E0     		b	.L39
 600              	.L34:
 509:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if((hspi->Init.Mode == SPI_MODE_SLAVE) || (hspi->TxXferCount == 0x01U))
 601              		.loc 1 509 0
 602 00fc 6268     		ldr	r2, [r4, #4]
 603 00fe 002A     		cmp	r2, #0
 604 0100 03D0     		beq	.L40
 509:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if((hspi->Init.Mode == SPI_MODE_SLAVE) || (hspi->TxXferCount == 0x01U))
 605              		.loc 1 509 0 is_stmt 0 discriminator 1
 606 0102 E38E     		ldrh	r3, [r4, #54]
ARM GAS  /tmp/cc1veDgB.s 			page 55


 607 0104 9BB2     		uxth	r3, r3
 608 0106 012B     		cmp	r3, #1
 609 0108 1ED1     		bne	.L54
 610              	.L40:
 511:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t*)hspi->pTxBuffPtr);
 611              		.loc 1 511 0 is_stmt 1
 612 010a 2368     		ldr	r3, [r4]
 613 010c 216B     		ldr	r1, [r4, #48]
 614 010e 0A88     		ldrh	r2, [r1]
 615 0110 DA60     		str	r2, [r3, #12]
 512:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->pTxBuffPtr+=2U;
 616              		.loc 1 512 0
 617 0112 236B     		ldr	r3, [r4, #48]
 618 0114 0233     		add	r3, r3, #2
 619 0116 2363     		str	r3, [r4, #48]
 513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->TxXferCount--;
 620              		.loc 1 513 0
 621 0118 E38E     		ldrh	r3, [r4, #54]
 622 011a 013B     		sub	r3, r3, #1
 623 011c 9BB2     		uxth	r3, r3
 624 011e E386     		strh	r3, [r4, #54]
 625 0120 12E0     		b	.L54
 626              	.L43:
 519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_TXE, RESET, Timeout) != HAL_OK)
 627              		.loc 1 519 0
 628 0122 201C     		mov	r0, r4
 629 0124 0221     		mov	r1, #2
 630 0126 0022     		mov	r2, #0
 631 0128 2B1C     		mov	r3, r5
 632 012a FFF7FEFF 		bl	SPI_WaitOnFlagUntilTimeout
 633              	.LVL30:
 634 012e 0028     		cmp	r0, #0
 635 0130 4FD1     		bne	.L52
 523:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t*)hspi->pTxBuffPtr);
 636              		.loc 1 523 0
 637 0132 2368     		ldr	r3, [r4]
 638 0134 216B     		ldr	r1, [r4, #48]
 639 0136 0A88     		ldrh	r2, [r1]
 640 0138 DA60     		str	r2, [r3, #12]
 524:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->pTxBuffPtr+=2U;
 641              		.loc 1 524 0
 642 013a 236B     		ldr	r3, [r4, #48]
 643 013c 0233     		add	r3, r3, #2
 644 013e 2363     		str	r3, [r4, #48]
 525:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->TxXferCount--;
 645              		.loc 1 525 0
 646 0140 E38E     		ldrh	r3, [r4, #54]
 647 0142 013B     		sub	r3, r3, #1
 648 0144 9BB2     		uxth	r3, r3
 649 0146 E386     		strh	r3, [r4, #54]
 650              	.L54:
 516:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       while(hspi->TxXferCount > 0U)
 651              		.loc 1 516 0 discriminator 1
 652 0148 E38E     		ldrh	r3, [r4, #54]
 653 014a 9BB2     		uxth	r3, r3
 654 014c 002B     		cmp	r3, #0
 655 014e E8D1     		bne	.L43
ARM GAS  /tmp/cc1veDgB.s 			page 56


 528:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE) 
 656              		.loc 1 528 0
 657 0150 8023     		mov	r3, #128
 658 0152 9B01     		lsl	r3, r3, #6
 659 0154 A26A     		ldr	r2, [r4, #40]
 660 0156 9A42     		cmp	r2, r3
 661 0158 05D1     		bne	.L39
 530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 662              		.loc 1 530 0
 663 015a 2368     		ldr	r3, [r4]
 664 015c 1968     		ldr	r1, [r3]
 665 015e 8022     		mov	r2, #128
 666 0160 5201     		lsl	r2, r2, #5
 667 0162 0A43     		orr	r2, r1
 668 0164 1A60     		str	r2, [r3]
 669              	.L39:
 535:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_TXE, RESET, Timeout) != HAL_OK)
 670              		.loc 1 535 0
 671 0166 201C     		mov	r0, r4
 672 0168 0221     		mov	r1, #2
 673 016a 0022     		mov	r2, #0
 674 016c 2B1C     		mov	r3, r5
 675 016e FFF7FEFF 		bl	SPI_WaitOnFlagUntilTimeout
 676              	.LVL31:
 677 0172 0028     		cmp	r0, #0
 678 0174 05D0     		beq	.L44
 537:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 679              		.loc 1 537 0
 680 0176 626D     		ldr	r2, [r4, #84]
 681 0178 2023     		mov	r3, #32
 682 017a 1343     		orr	r3, r2
 683 017c 6365     		str	r3, [r4, #84]
 538:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return HAL_TIMEOUT;
 684              		.loc 1 538 0
 685 017e 0320     		mov	r0, #3
 686 0180 28E0     		b	.L30
 687              	.L44:
 542:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_BSY, SET, Timeout) != HAL_OK)
 688              		.loc 1 542 0
 689 0182 201C     		mov	r0, r4
 690 0184 8021     		mov	r1, #128
 691 0186 0122     		mov	r2, #1
 692 0188 2B1C     		mov	r3, r5
 693 018a FFF7FEFF 		bl	SPI_WaitOnFlagUntilTimeout
 694              	.LVL32:
 695 018e 0028     		cmp	r0, #0
 696 0190 05D0     		beq	.L45
 544:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 697              		.loc 1 544 0
 698 0192 626D     		ldr	r2, [r4, #84]
 699 0194 2023     		mov	r3, #32
 700 0196 1343     		orr	r3, r2
 701 0198 6365     		str	r3, [r4, #84]
 545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return HAL_TIMEOUT;
 702              		.loc 1 545 0
 703 019a 0320     		mov	r0, #3
 704 019c 1AE0     		b	.L30
ARM GAS  /tmp/cc1veDgB.s 			page 57


 705              	.L45:
 549:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.Direction == SPI_DIRECTION_2LINES)
 706              		.loc 1 549 0
 707 019e A368     		ldr	r3, [r4, #8]
 708 01a0 002B     		cmp	r3, #0
 709 01a2 05D1     		bne	.L46
 710              	.LBB2:
 551:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_CLEAR_OVRFLAG(hspi);
 711              		.loc 1 551 0
 712 01a4 2368     		ldr	r3, [r4]
 713 01a6 DA68     		ldr	r2, [r3, #12]
 714 01a8 0192     		str	r2, [sp, #4]
 715 01aa 9B68     		ldr	r3, [r3, #8]
 716 01ac 0193     		str	r3, [sp, #4]
 717 01ae 019B     		ldr	r3, [sp, #4]
 718              	.L46:
 719              	.LBE2:
 554:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY; 
 720              		.loc 1 554 0
 721 01b0 0122     		mov	r2, #1
 722 01b2 5123     		mov	r3, #81
 723 01b4 E254     		strb	r2, [r4, r3]
 557:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 724              		.loc 1 557 0
 725 01b6 0022     		mov	r2, #0
 726 01b8 5023     		mov	r3, #80
 727 01ba E254     		strb	r2, [r4, r3]
 559:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_OK;
 728              		.loc 1 559 0
 729 01bc 0AE0     		b	.L30
 730              	.LVL33:
 731              	.L47:
 563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_BUSY;
 732              		.loc 1 563 0
 733 01be 0220     		mov	r0, #2
 734 01c0 08E0     		b	.L30
 735              	.L48:
 438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return  HAL_ERROR;
 736              		.loc 1 438 0
 737 01c2 0120     		mov	r0, #1
 738 01c4 06E0     		b	.L30
 739              	.L49:
 740 01c6 0120     		mov	r0, #1
 741 01c8 04E0     		b	.L30
 742              	.LVL34:
 743              	.L50:
 445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_LOCK(hspi);
 744              		.loc 1 445 0
 745 01ca 0220     		mov	r0, #2
 746 01cc 02E0     		b	.L30
 747              	.LVL35:
 748              	.L51:
 495:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           return HAL_TIMEOUT;
 749              		.loc 1 495 0
 750 01ce 0320     		mov	r0, #3
 751 01d0 00E0     		b	.L30
 752              	.L52:
ARM GAS  /tmp/cc1veDgB.s 			page 58


 521:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           return HAL_TIMEOUT;
 753              		.loc 1 521 0
 754 01d2 0320     		mov	r0, #3
 755              	.L30:
 565:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 756              		.loc 1 565 0
 757 01d4 03B0     		add	sp, sp, #12
 758              		@ sp needed
 759              	.LVL36:
 760              	.LVL37:
 761 01d6 30BD     		pop	{r4, r5, pc}
 762              	.L56:
 763              		.align	2
 764              	.L55:
 765 01d8 FFDFFFFF 		.word	-8193
 766              		.cfi_endproc
 767              	.LFE40:
 769              		.section	.text.HAL_SPI_TransmitReceive,"ax",%progbits
 770              		.align	2
 771              		.global	HAL_SPI_TransmitReceive
 772              		.code	16
 773              		.thumb_func
 775              	HAL_SPI_TransmitReceive:
 776              	.LFB42:
 753:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 777              		.loc 1 753 0
 778              		.cfi_startproc
 779              	.LVL38:
 780 0000 70B5     		push	{r4, r5, r6, lr}
 781              	.LCFI6:
 782              		.cfi_def_cfa_offset 16
 783              		.cfi_offset 4, -16
 784              		.cfi_offset 5, -12
 785              		.cfi_offset 6, -8
 786              		.cfi_offset 14, -4
 787 0002 82B0     		sub	sp, sp, #8
 788              	.LCFI7:
 789              		.cfi_def_cfa_offset 24
 790 0004 041C     		mov	r4, r0
 754:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __IO uint16_t tmpreg = 0U;
 791              		.loc 1 754 0
 792 0006 0025     		mov	r5, #0
 793 0008 6846     		mov	r0, sp
 794              	.LVL39:
 795 000a C580     		strh	r5, [r0, #6]
 756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if((hspi->State == HAL_SPI_STATE_READY) || (hspi->State == HAL_SPI_STATE_BUSY_RX))
 796              		.loc 1 756 0
 797 000c 5120     		mov	r0, #81
 798 000e 205C     		ldrb	r0, [r4, r0]
 799 0010 0128     		cmp	r0, #1
 800 0012 04D0     		beq	.L58
 756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if((hspi->State == HAL_SPI_STATE_READY) || (hspi->State == HAL_SPI_STATE_BUSY_RX))
 801              		.loc 1 756 0 is_stmt 0 discriminator 1
 802 0014 5120     		mov	r0, #81
 803 0016 205C     		ldrb	r0, [r4, r0]
 804 0018 2228     		cmp	r0, #34
 805 001a 00D0     		beq	.LCB774
ARM GAS  /tmp/cc1veDgB.s 			page 59


 806 001c 9EE1     		b	.L81	@long jump
 807              	.LCB774:
 808              	.L58:
 758:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((pTxData == NULL ) || (pRxData == NULL ) || (Size == 0U))
 809              		.loc 1 758 0 is_stmt 1
 810 001e 0029     		cmp	r1, #0
 811 0020 00D1     		bne	.LCB777
 812 0022 9DE1     		b	.L82	@long jump
 813              	.LCB777:
 758:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((pTxData == NULL ) || (pRxData == NULL ) || (Size == 0U))
 814              		.loc 1 758 0 is_stmt 0 discriminator 1
 815 0024 002A     		cmp	r2, #0
 816 0026 00D1     		bne	.LCB779
 817 0028 9CE1     		b	.L83	@long jump
 818              	.LCB779:
 819 002a 002B     		cmp	r3, #0
 820 002c 00D1     		bne	.LCB781
 821 002e 9BE1     		b	.L84	@long jump
 822              	.LCB781:
 767:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_LOCK(hspi);
 823              		.loc 1 767 0 is_stmt 1
 824 0030 5020     		mov	r0, #80
 825 0032 205C     		ldrb	r0, [r4, r0]
 826 0034 0128     		cmp	r0, #1
 827 0036 00D1     		bne	.LCB785
 828 0038 98E1     		b	.L85	@long jump
 829              	.LCB785:
 767:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_LOCK(hspi);
 830              		.loc 1 767 0 is_stmt 0 discriminator 2
 831 003a 0125     		mov	r5, #1
 832 003c 5020     		mov	r0, #80
 833 003e 2554     		strb	r5, [r4, r0]
 770:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->State == HAL_SPI_STATE_READY)
 834              		.loc 1 770 0 is_stmt 1 discriminator 2
 835 0040 5120     		mov	r0, #81
 836 0042 205C     		ldrb	r0, [r4, r0]
 837 0044 0128     		cmp	r0, #1
 838 0046 02D1     		bne	.L60
 772:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 839              		.loc 1 772 0
 840 0048 3225     		mov	r5, #50
 841 004a 5120     		mov	r0, #81
 842 004c 2554     		strb	r5, [r4, r0]
 843              	.L60:
 776:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 844              		.loc 1 776 0
 845 004e 0020     		mov	r0, #0
 846 0050 6065     		str	r0, [r4, #84]
 778:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pRxBuffPtr  = pRxData;
 847              		.loc 1 778 0
 848 0052 A263     		str	r2, [r4, #56]
 779:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferSize  = Size;
 849              		.loc 1 779 0
 850 0054 A387     		strh	r3, [r4, #60]
 780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferCount = Size;  
 851              		.loc 1 780 0
 852 0056 E387     		strh	r3, [r4, #62]
ARM GAS  /tmp/cc1veDgB.s 			page 60


 782:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pTxBuffPtr  = pTxData;
 853              		.loc 1 782 0
 854 0058 2163     		str	r1, [r4, #48]
 783:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferSize  = Size; 
 855              		.loc 1 783 0
 856 005a A386     		strh	r3, [r4, #52]
 784:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferCount = Size;
 857              		.loc 1 784 0
 858 005c E386     		strh	r3, [r4, #54]
 787:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxISR = 0U;
 859              		.loc 1 787 0
 860 005e A064     		str	r0, [r4, #72]
 788:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxISR = 0U;
 861              		.loc 1 788 0
 862 0060 E064     		str	r0, [r4, #76]
 791:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 863              		.loc 1 791 0
 864 0062 8023     		mov	r3, #128
 865              	.LVL40:
 866 0064 9B01     		lsl	r3, r3, #6
 867 0066 A06A     		ldr	r0, [r4, #40]
 868 0068 9842     		cmp	r0, r3
 869 006a 0AD1     		bne	.L61
 793:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
 870              		.loc 1 793 0
 871 006c 2368     		ldr	r3, [r4]
 872 006e 1968     		ldr	r1, [r3]
 873              	.LVL41:
 874 0070 C64A     		ldr	r2, .L96
 875              	.LVL42:
 876 0072 0A40     		and	r2, r1
 877 0074 1A60     		str	r2, [r3]
 878              	.LVL43:
 879 0076 2368     		ldr	r3, [r4]
 880 0078 1968     		ldr	r1, [r3]
 881 007a 8022     		mov	r2, #128
 882 007c 9201     		lsl	r2, r2, #6
 883 007e 0A43     		orr	r2, r1
 884 0080 1A60     		str	r2, [r3]
 885              	.L61:
 797:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((hspi->Instance->CR1 &SPI_CR1_SPE) != SPI_CR1_SPE)
 886              		.loc 1 797 0
 887 0082 2368     		ldr	r3, [r4]
 888 0084 1A68     		ldr	r2, [r3]
 889 0086 5106     		lsl	r1, r2, #25
 890 0088 03D4     		bmi	.L62
 800:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_ENABLE(hspi);
 891              		.loc 1 800 0
 892 008a 1968     		ldr	r1, [r3]
 893 008c 4022     		mov	r2, #64
 894 008e 0A43     		orr	r2, r1
 895 0090 1A60     		str	r2, [r3]
 896              	.L62:
 804:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 897              		.loc 1 804 0
 898 0092 8023     		mov	r3, #128
 899 0094 1B01     		lsl	r3, r3, #4
ARM GAS  /tmp/cc1veDgB.s 			page 61


 900 0096 E268     		ldr	r2, [r4, #12]
 901 0098 9A42     		cmp	r2, r3
 902 009a 00D0     		beq	.LCB854
 903 009c 8EE0     		b	.L63	@long jump
 904              	.LCB854:
 806:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if((hspi->Init.Mode == SPI_MODE_SLAVE) || ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->TxX
 905              		.loc 1 806 0
 906 009e 6368     		ldr	r3, [r4, #4]
 907 00a0 002B     		cmp	r3, #0
 908 00a2 07D0     		beq	.L64
 806:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if((hspi->Init.Mode == SPI_MODE_SLAVE) || ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->TxX
 909              		.loc 1 806 0 is_stmt 0 discriminator 1
 910 00a4 8222     		mov	r2, #130
 911 00a6 5200     		lsl	r2, r2, #1
 912 00a8 9342     		cmp	r3, r2
 913 00aa 0ED1     		bne	.L65
 914 00ac E38E     		ldrh	r3, [r4, #54]
 915 00ae 9BB2     		uxth	r3, r3
 916 00b0 012B     		cmp	r3, #1
 917 00b2 0AD1     		bne	.L65
 918              	.L64:
 808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->Instance->DR = *((uint16_t*)hspi->pTxBuffPtr);
 919              		.loc 1 808 0 is_stmt 1
 920 00b4 2368     		ldr	r3, [r4]
 921 00b6 206B     		ldr	r0, [r4, #48]
 922 00b8 0288     		ldrh	r2, [r0]
 923 00ba DA60     		str	r2, [r3, #12]
 809:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->pTxBuffPtr+=2U;
 924              		.loc 1 809 0
 925 00bc 236B     		ldr	r3, [r4, #48]
 926 00be 0233     		add	r3, r3, #2
 927 00c0 2363     		str	r3, [r4, #48]
 810:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->TxXferCount--;
 928              		.loc 1 810 0
 929 00c2 E38E     		ldrh	r3, [r4, #54]
 930 00c4 013B     		sub	r3, r3, #1
 931 00c6 9BB2     		uxth	r3, r3
 932 00c8 E386     		strh	r3, [r4, #54]
 933              	.L65:
 812:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if(hspi->TxXferCount == 0U)
 934              		.loc 1 812 0
 935 00ca E38E     		ldrh	r3, [r4, #54]
 936 00cc 9BB2     		uxth	r3, r3
 937 00ce 002B     		cmp	r3, #0
 938 00d0 53D1     		bne	.L66
 815:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 939              		.loc 1 815 0
 940 00d2 8023     		mov	r3, #128
 941 00d4 9B01     		lsl	r3, r3, #6
 942 00d6 A16A     		ldr	r1, [r4, #40]
 943 00d8 9942     		cmp	r1, r3
 944 00da 05D1     		bne	.L67
 817:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 945              		.loc 1 817 0
 946 00dc 2368     		ldr	r3, [r4]
 947 00de 1968     		ldr	r1, [r3]
 948 00e0 8022     		mov	r2, #128
ARM GAS  /tmp/cc1veDgB.s 			page 62


 949 00e2 5201     		lsl	r2, r2, #5
 950 00e4 0A43     		orr	r2, r1
 951 00e6 1A60     		str	r2, [r3]
 952              	.L67:
 821:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 953              		.loc 1 821 0
 954 00e8 201C     		mov	r0, r4
 955 00ea 0121     		mov	r1, #1
 956 00ec 0022     		mov	r2, #0
 957 00ee 069B     		ldr	r3, [sp, #24]
 958 00f0 FFF7FEFF 		bl	SPI_WaitOnFlagUntilTimeout
 959              	.LVL44:
 960 00f4 0028     		cmp	r0, #0
 961 00f6 00D0     		beq	.LCB909
 962 00f8 3AE1     		b	.L86	@long jump
 963              	.LCB909:
 826:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         *((uint16_t*)hspi->pRxBuffPtr) = hspi->Instance->DR;
 964              		.loc 1 826 0
 965 00fa 2368     		ldr	r3, [r4]
 966 00fc DB68     		ldr	r3, [r3, #12]
 967 00fe A26B     		ldr	r2, [r4, #56]
 968 0100 1380     		strh	r3, [r2]
 827:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->pRxBuffPtr+=2U;
 969              		.loc 1 827 0
 970 0102 A36B     		ldr	r3, [r4, #56]
 971 0104 0233     		add	r3, r3, #2
 972 0106 A363     		str	r3, [r4, #56]
 828:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->RxXferCount--;
 973              		.loc 1 828 0
 974 0108 E38F     		ldrh	r3, [r4, #62]
 975 010a 013B     		sub	r3, r3, #1
 976 010c 9BB2     		uxth	r3, r3
 977 010e E387     		strh	r3, [r4, #62]
 978 0110 D9E0     		b	.L68
 979              	.L70:
 835:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_TXE, RESET, Timeout) != HAL_OK)
 980              		.loc 1 835 0
 981 0112 201C     		mov	r0, r4
 982 0114 0221     		mov	r1, #2
 983 0116 0022     		mov	r2, #0
 984 0118 069B     		ldr	r3, [sp, #24]
 985 011a FFF7FEFF 		bl	SPI_WaitOnFlagUntilTimeout
 986              	.LVL45:
 987 011e 0028     		cmp	r0, #0
 988 0120 00D0     		beq	.LCB936
 989 0122 27E1     		b	.L87	@long jump
 990              	.LCB936:
 840:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           hspi->Instance->DR = *((uint16_t*)hspi->pTxBuffPtr);
 991              		.loc 1 840 0
 992 0124 2368     		ldr	r3, [r4]
 993 0126 206B     		ldr	r0, [r4, #48]
 994 0128 0288     		ldrh	r2, [r0]
 995 012a DA60     		str	r2, [r3, #12]
 841:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           hspi->pTxBuffPtr+=2U;
 996              		.loc 1 841 0
 997 012c 236B     		ldr	r3, [r4, #48]
 998 012e 0233     		add	r3, r3, #2
ARM GAS  /tmp/cc1veDgB.s 			page 63


 999 0130 2363     		str	r3, [r4, #48]
 842:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           hspi->TxXferCount--;
 1000              		.loc 1 842 0
 1001 0132 E38E     		ldrh	r3, [r4, #54]
 1002 0134 013B     		sub	r3, r3, #1
 1003 0136 9BB2     		uxth	r3, r3
 1004 0138 E386     		strh	r3, [r4, #54]
 845:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           if((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
 1005              		.loc 1 845 0
 1006 013a E38E     		ldrh	r3, [r4, #54]
 1007 013c 9BB2     		uxth	r3, r3
 1008 013e 002B     		cmp	r3, #0
 1009 0140 06D1     		bne	.L69
 845:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           if((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
 1010              		.loc 1 845 0 is_stmt 0 discriminator 1
 1011 0142 A16A     		ldr	r1, [r4, #40]
 1012 0144 A942     		cmp	r1, r5
 1013 0146 03D1     		bne	.L69
 847:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 1014              		.loc 1 847 0 is_stmt 1
 1015 0148 2368     		ldr	r3, [r4]
 1016 014a 1A68     		ldr	r2, [r3]
 1017 014c 3243     		orr	r2, r6
 1018 014e 1A60     		str	r2, [r3]
 1019              	.L69:
 851:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 1020              		.loc 1 851 0
 1021 0150 201C     		mov	r0, r4
 1022 0152 0121     		mov	r1, #1
 1023 0154 0022     		mov	r2, #0
 1024 0156 069B     		ldr	r3, [sp, #24]
 1025 0158 FFF7FEFF 		bl	SPI_WaitOnFlagUntilTimeout
 1026              	.LVL46:
 1027 015c 0028     		cmp	r0, #0
 1028 015e 00D0     		beq	.LCB972
 1029 0160 0AE1     		b	.L88	@long jump
 1030              	.LCB972:
 856:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           *((uint16_t*)hspi->pRxBuffPtr) = hspi->Instance->DR;
 1031              		.loc 1 856 0
 1032 0162 2368     		ldr	r3, [r4]
 1033 0164 DB68     		ldr	r3, [r3, #12]
 1034 0166 A26B     		ldr	r2, [r4, #56]
 1035 0168 1380     		strh	r3, [r2]
 857:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           hspi->pRxBuffPtr+=2U;
 1036              		.loc 1 857 0
 1037 016a A36B     		ldr	r3, [r4, #56]
 1038 016c 0233     		add	r3, r3, #2
 1039 016e A363     		str	r3, [r4, #56]
 858:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           hspi->RxXferCount--;
 1040              		.loc 1 858 0
 1041 0170 E38F     		ldrh	r3, [r4, #62]
 1042 0172 013B     		sub	r3, r3, #1
 1043 0174 9BB2     		uxth	r3, r3
 1044 0176 E387     		strh	r3, [r4, #62]
 1045 0178 03E0     		b	.L94
 1046              	.L66:
 845:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           if((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
ARM GAS  /tmp/cc1veDgB.s 			page 64


 1047              		.loc 1 845 0 discriminator 1
 1048 017a 8025     		mov	r5, #128
 1049 017c AD01     		lsl	r5, r5, #6
 847:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 1050              		.loc 1 847 0 discriminator 1
 1051 017e 8026     		mov	r6, #128
 1052 0180 7601     		lsl	r6, r6, #5
 1053              	.L94:
 832:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         while(hspi->TxXferCount > 0U)
 1054              		.loc 1 832 0 discriminator 1
 1055 0182 E38E     		ldrh	r3, [r4, #54]
 1056 0184 9BB2     		uxth	r3, r3
 1057 0186 002B     		cmp	r3, #0
 1058 0188 C3D1     		bne	.L70
 861:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         if(hspi->Init.Mode == SPI_MODE_SLAVE)
 1059              		.loc 1 861 0
 1060 018a 6368     		ldr	r3, [r4, #4]
 1061 018c 002B     		cmp	r3, #0
 1062 018e 00D0     		beq	.LCB1007
 1063 0190 99E0     		b	.L68	@long jump
 1064              	.LCB1007:
 864:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 1065              		.loc 1 864 0
 1066 0192 201C     		mov	r0, r4
 1067 0194 0121     		mov	r1, #1
 1068 0196 0022     		mov	r2, #0
 1069 0198 069B     		ldr	r3, [sp, #24]
 1070 019a FFF7FEFF 		bl	SPI_WaitOnFlagUntilTimeout
 1071              	.LVL47:
 1072 019e 0028     		cmp	r0, #0
 1073 01a0 00D0     		beq	.LCB1015
 1074 01a2 EBE0     		b	.L89	@long jump
 1075              	.LCB1015:
 869:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           *((uint16_t*)hspi->pRxBuffPtr) = hspi->Instance->DR;
 1076              		.loc 1 869 0
 1077 01a4 2368     		ldr	r3, [r4]
 1078 01a6 DB68     		ldr	r3, [r3, #12]
 1079 01a8 A06B     		ldr	r0, [r4, #56]
 1080 01aa 0380     		strh	r3, [r0]
 870:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           hspi->pRxBuffPtr+=2U;
 1081              		.loc 1 870 0
 1082 01ac A36B     		ldr	r3, [r4, #56]
 1083 01ae 0233     		add	r3, r3, #2
 1084 01b0 A363     		str	r3, [r4, #56]
 871:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           hspi->RxXferCount--;
 1085              		.loc 1 871 0
 1086 01b2 E38F     		ldrh	r3, [r4, #62]
 1087 01b4 013B     		sub	r3, r3, #1
 1088 01b6 9BB2     		uxth	r3, r3
 1089 01b8 E387     		strh	r3, [r4, #62]
 1090 01ba 84E0     		b	.L68
 1091              	.L63:
 878:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if((hspi->Init.Mode == SPI_MODE_SLAVE) || ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->TxX
 1092              		.loc 1 878 0
 1093 01bc 6368     		ldr	r3, [r4, #4]
 1094 01be 002B     		cmp	r3, #0
 1095 01c0 07D0     		beq	.L71
ARM GAS  /tmp/cc1veDgB.s 			page 65


 878:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if((hspi->Init.Mode == SPI_MODE_SLAVE) || ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->TxX
 1096              		.loc 1 878 0 is_stmt 0 discriminator 1
 1097 01c2 8222     		mov	r2, #130
 1098 01c4 5200     		lsl	r2, r2, #1
 1099 01c6 9342     		cmp	r3, r2
 1100 01c8 0DD1     		bne	.L72
 1101 01ca E38E     		ldrh	r3, [r4, #54]
 1102 01cc 9BB2     		uxth	r3, r3
 1103 01ce 012B     		cmp	r3, #1
 1104 01d0 09D1     		bne	.L72
 1105              	.L71:
 880:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->Instance->DR = (*hspi->pTxBuffPtr++);
 1106              		.loc 1 880 0 is_stmt 1
 1107 01d2 2268     		ldr	r2, [r4]
 1108 01d4 236B     		ldr	r3, [r4, #48]
 1109 01d6 591C     		add	r1, r3, #1
 1110 01d8 2163     		str	r1, [r4, #48]
 1111 01da 1B78     		ldrb	r3, [r3]
 1112 01dc D360     		str	r3, [r2, #12]
 881:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->TxXferCount--;
 1113              		.loc 1 881 0
 1114 01de E38E     		ldrh	r3, [r4, #54]
 1115 01e0 013B     		sub	r3, r3, #1
 1116 01e2 9BB2     		uxth	r3, r3
 1117 01e4 E386     		strh	r3, [r4, #54]
 1118              	.L72:
 883:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if(hspi->TxXferCount == 0U)
 1119              		.loc 1 883 0
 1120 01e6 E38E     		ldrh	r3, [r4, #54]
 1121 01e8 9BB2     		uxth	r3, r3
 1122 01ea 002B     		cmp	r3, #0
 1123 01ec 4ED1     		bne	.L73
 886:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 1124              		.loc 1 886 0
 1125 01ee 8023     		mov	r3, #128
 1126 01f0 9B01     		lsl	r3, r3, #6
 1127 01f2 A16A     		ldr	r1, [r4, #40]
 1128 01f4 9942     		cmp	r1, r3
 1129 01f6 05D1     		bne	.L74
 888:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 1130              		.loc 1 888 0
 1131 01f8 2368     		ldr	r3, [r4]
 1132 01fa 1968     		ldr	r1, [r3]
 1133 01fc 8022     		mov	r2, #128
 1134 01fe 5201     		lsl	r2, r2, #5
 1135 0200 0A43     		orr	r2, r1
 1136 0202 1A60     		str	r2, [r3]
 1137              	.L74:
 892:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 1138              		.loc 1 892 0
 1139 0204 201C     		mov	r0, r4
 1140 0206 0121     		mov	r1, #1
 1141 0208 0022     		mov	r2, #0
 1142 020a 069B     		ldr	r3, [sp, #24]
 1143 020c FFF7FEFF 		bl	SPI_WaitOnFlagUntilTimeout
 1144              	.LVL48:
 1145 0210 0028     		cmp	r0, #0
ARM GAS  /tmp/cc1veDgB.s 			page 66


 1146 0212 00D0     		beq	.LCB1087
 1147 0214 B4E0     		b	.L90	@long jump
 1148              	.LCB1087:
 897:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (*hspi->pRxBuffPtr) = hspi->Instance->DR;
 1149              		.loc 1 897 0
 1150 0216 2368     		ldr	r3, [r4]
 1151 0218 DB68     		ldr	r3, [r3, #12]
 1152 021a A26B     		ldr	r2, [r4, #56]
 1153 021c 1370     		strb	r3, [r2]
 898:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->RxXferCount--;
 1154              		.loc 1 898 0
 1155 021e E38F     		ldrh	r3, [r4, #62]
 1156 0220 013B     		sub	r3, r3, #1
 1157 0222 9BB2     		uxth	r3, r3
 1158 0224 E387     		strh	r3, [r4, #62]
 1159 0226 4EE0     		b	.L68
 1160              	.L76:
 905:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_TXE, RESET, Timeout) != HAL_OK)
 1161              		.loc 1 905 0
 1162 0228 201C     		mov	r0, r4
 1163 022a 0221     		mov	r1, #2
 1164 022c 0022     		mov	r2, #0
 1165 022e 069B     		ldr	r3, [sp, #24]
 1166 0230 FFF7FEFF 		bl	SPI_WaitOnFlagUntilTimeout
 1167              	.LVL49:
 1168 0234 0028     		cmp	r0, #0
 1169 0236 00D0     		beq	.LCB1110
 1170 0238 A4E0     		b	.L91	@long jump
 1171              	.LCB1110:
 910:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           hspi->Instance->DR = (*hspi->pTxBuffPtr++);
 1172              		.loc 1 910 0
 1173 023a 2268     		ldr	r2, [r4]
 1174 023c 236B     		ldr	r3, [r4, #48]
 1175 023e 591C     		add	r1, r3, #1
 1176 0240 2163     		str	r1, [r4, #48]
 1177 0242 1B78     		ldrb	r3, [r3]
 1178 0244 D360     		str	r3, [r2, #12]
 911:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           hspi->TxXferCount--;
 1179              		.loc 1 911 0
 1180 0246 E38E     		ldrh	r3, [r4, #54]
 1181 0248 013B     		sub	r3, r3, #1
 1182 024a 9BB2     		uxth	r3, r3
 1183 024c E386     		strh	r3, [r4, #54]
 914:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           if((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
 1184              		.loc 1 914 0
 1185 024e E38E     		ldrh	r3, [r4, #54]
 1186 0250 9BB2     		uxth	r3, r3
 1187 0252 002B     		cmp	r3, #0
 1188 0254 06D1     		bne	.L75
 914:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           if((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
 1189              		.loc 1 914 0 is_stmt 0 discriminator 1
 1190 0256 A36A     		ldr	r3, [r4, #40]
 1191 0258 AB42     		cmp	r3, r5
 1192 025a 03D1     		bne	.L75
 916:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 1193              		.loc 1 916 0 is_stmt 1
 1194 025c 2368     		ldr	r3, [r4]
ARM GAS  /tmp/cc1veDgB.s 			page 67


 1195 025e 1A68     		ldr	r2, [r3]
 1196 0260 3243     		orr	r2, r6
 1197 0262 1A60     		str	r2, [r3]
 1198              	.L75:
 920:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 1199              		.loc 1 920 0
 1200 0264 201C     		mov	r0, r4
 1201 0266 0121     		mov	r1, #1
 1202 0268 0022     		mov	r2, #0
 1203 026a 069B     		ldr	r3, [sp, #24]
 1204 026c FFF7FEFF 		bl	SPI_WaitOnFlagUntilTimeout
 1205              	.LVL50:
 1206 0270 0028     		cmp	r0, #0
 1207 0272 00D0     		beq	.LCB1143
 1208 0274 88E0     		b	.L92	@long jump
 1209              	.LCB1143:
 925:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           (*hspi->pRxBuffPtr++) = hspi->Instance->DR;
 1210              		.loc 1 925 0
 1211 0276 A36B     		ldr	r3, [r4, #56]
 1212 0278 5A1C     		add	r2, r3, #1
 1213 027a A263     		str	r2, [r4, #56]
 1214 027c 2268     		ldr	r2, [r4]
 1215 027e D268     		ldr	r2, [r2, #12]
 1216 0280 1A70     		strb	r2, [r3]
 926:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           hspi->RxXferCount--;
 1217              		.loc 1 926 0
 1218 0282 E38F     		ldrh	r3, [r4, #62]
 1219 0284 013B     		sub	r3, r3, #1
 1220 0286 9BB2     		uxth	r3, r3
 1221 0288 E387     		strh	r3, [r4, #62]
 1222 028a 03E0     		b	.L95
 1223              	.L73:
 914:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           if((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
 1224              		.loc 1 914 0 discriminator 1
 1225 028c 8025     		mov	r5, #128
 1226 028e AD01     		lsl	r5, r5, #6
 916:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 1227              		.loc 1 916 0 discriminator 1
 1228 0290 8026     		mov	r6, #128
 1229 0292 7601     		lsl	r6, r6, #5
 1230              	.L95:
 902:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         while(hspi->TxXferCount > 0U)
 1231              		.loc 1 902 0 discriminator 1
 1232 0294 E38E     		ldrh	r3, [r4, #54]
 1233 0296 9BB2     		uxth	r3, r3
 1234 0298 002B     		cmp	r3, #0
 1235 029a C5D1     		bne	.L76
 928:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         if(hspi->Init.Mode == SPI_MODE_SLAVE)
 1236              		.loc 1 928 0
 1237 029c 6068     		ldr	r0, [r4, #4]
 1238 029e 0028     		cmp	r0, #0
 1239 02a0 11D1     		bne	.L68
 931:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 1240              		.loc 1 931 0
 1241 02a2 201C     		mov	r0, r4
 1242 02a4 0121     		mov	r1, #1
 1243 02a6 0022     		mov	r2, #0
ARM GAS  /tmp/cc1veDgB.s 			page 68


 1244 02a8 069B     		ldr	r3, [sp, #24]
 1245 02aa FFF7FEFF 		bl	SPI_WaitOnFlagUntilTimeout
 1246              	.LVL51:
 1247 02ae 0028     		cmp	r0, #0
 1248 02b0 6ED1     		bne	.L93
 936:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           (*hspi->pRxBuffPtr++) = hspi->Instance->DR;
 1249              		.loc 1 936 0
 1250 02b2 A36B     		ldr	r3, [r4, #56]
 1251 02b4 5A1C     		add	r2, r3, #1
 1252 02b6 A263     		str	r2, [r4, #56]
 1253 02b8 2268     		ldr	r2, [r4]
 1254 02ba D268     		ldr	r2, [r2, #12]
 1255 02bc 1A70     		strb	r2, [r3]
 937:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           hspi->RxXferCount--;
 1256              		.loc 1 937 0
 1257 02be E38F     		ldrh	r3, [r4, #62]
 1258 02c0 013B     		sub	r3, r3, #1
 1259 02c2 9BB2     		uxth	r3, r3
 1260 02c4 E387     		strh	r3, [r4, #62]
 1261              	.L68:
 943:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 1262              		.loc 1 943 0
 1263 02c6 8023     		mov	r3, #128
 1264 02c8 9B01     		lsl	r3, r3, #6
 1265 02ca A16A     		ldr	r1, [r4, #40]
 1266 02cc 9942     		cmp	r1, r3
 1267 02ce 14D1     		bne	.L77
 946:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 1268              		.loc 1 946 0
 1269 02d0 201C     		mov	r0, r4
 1270 02d2 0121     		mov	r1, #1
 1271 02d4 0022     		mov	r2, #0
 1272 02d6 069B     		ldr	r3, [sp, #24]
 1273 02d8 FFF7FEFF 		bl	SPI_WaitOnFlagUntilTimeout
 1274              	.LVL52:
 1275 02dc 0028     		cmp	r0, #0
 1276 02de 05D0     		beq	.L78
 948:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
 1277              		.loc 1 948 0
 1278 02e0 626D     		ldr	r2, [r4, #84]
 1279 02e2 0223     		mov	r3, #2
 1280 02e4 1343     		orr	r3, r2
 1281 02e6 6365     		str	r3, [r4, #84]
 949:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         return HAL_TIMEOUT;
 1282              		.loc 1 949 0
 1283 02e8 0320     		mov	r0, #3
 1284 02ea 52E0     		b	.L59
 1285              	.L78:
 952:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       tmpreg = hspi->Instance->DR;
 1286              		.loc 1 952 0
 1287 02ec 2368     		ldr	r3, [r4]
 1288 02ee DA68     		ldr	r2, [r3, #12]
 1289 02f0 92B2     		uxth	r2, r2
 1290 02f2 6B46     		mov	r3, sp
 1291 02f4 DA80     		strh	r2, [r3, #6]
 1292 02f6 0633     		add	r3, r3, #6
 953:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       UNUSED(tmpreg);		/* avoid warning on tmpreg affectation with stupid compiler */
ARM GAS  /tmp/cc1veDgB.s 			page 69


 1293              		.loc 1 953 0
 1294 02f8 1B88     		ldrh	r3, [r3]
 1295              	.L77:
 957:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_BSY, SET, Timeout) != HAL_OK)
 1296              		.loc 1 957 0
 1297 02fa 201C     		mov	r0, r4
 1298 02fc 8021     		mov	r1, #128
 1299 02fe 0122     		mov	r2, #1
 1300 0300 069B     		ldr	r3, [sp, #24]
 1301 0302 FFF7FEFF 		bl	SPI_WaitOnFlagUntilTimeout
 1302              	.LVL53:
 1303 0306 0028     		cmp	r0, #0
 1304 0308 05D0     		beq	.L79
 959:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 1305              		.loc 1 959 0
 1306 030a 626D     		ldr	r2, [r4, #84]
 1307 030c 2023     		mov	r3, #32
 1308 030e 1343     		orr	r3, r2
 1309 0310 6365     		str	r3, [r4, #84]
 960:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return HAL_TIMEOUT;
 1310              		.loc 1 960 0
 1311 0312 0320     		mov	r0, #3
 1312 0314 3DE0     		b	.L59
 1313              	.L79:
 963:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 1314              		.loc 1 963 0
 1315 0316 0122     		mov	r2, #1
 1316 0318 5123     		mov	r3, #81
 1317 031a E254     		strb	r2, [r4, r3]
 966:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE) && (__HAL_SPI_GET_FLAG(hspi, SPI_FL
 1318              		.loc 1 966 0
 1319 031c 8023     		mov	r3, #128
 1320 031e 9B01     		lsl	r3, r3, #6
 1321 0320 A26A     		ldr	r2, [r4, #40]
 1322 0322 9A42     		cmp	r2, r3
 1323 0324 16D1     		bne	.L80
 966:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE) && (__HAL_SPI_GET_FLAG(hspi, SPI_FL
 1324              		.loc 1 966 0 is_stmt 0 discriminator 1
 1325 0326 2368     		ldr	r3, [r4]
 1326 0328 9A68     		ldr	r2, [r3, #8]
 1327 032a D106     		lsl	r1, r2, #27
 1328 032c 12D5     		bpl	.L80
 968:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
 1329              		.loc 1 968 0 is_stmt 1
 1330 032e 616D     		ldr	r1, [r4, #84]
 1331 0330 0222     		mov	r2, #2
 1332 0332 0A43     		orr	r2, r1
 1333 0334 6265     		str	r2, [r4, #84]
 970:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
 1334              		.loc 1 970 0
 1335 0336 1968     		ldr	r1, [r3]
 1336 0338 144A     		ldr	r2, .L96
 1337 033a 0A40     		and	r2, r1
 1338 033c 1A60     		str	r2, [r3]
 1339 033e 2368     		ldr	r3, [r4]
 1340 0340 1968     		ldr	r1, [r3]
 1341 0342 8022     		mov	r2, #128
ARM GAS  /tmp/cc1veDgB.s 			page 70


 1342 0344 9201     		lsl	r2, r2, #6
 1343 0346 0A43     		orr	r2, r1
 1344 0348 1A60     		str	r2, [r3]
 973:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_UNLOCK(hspi);
 1345              		.loc 1 973 0
 1346 034a 0022     		mov	r2, #0
 1347 034c 5023     		mov	r3, #80
 1348 034e E254     		strb	r2, [r4, r3]
 975:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return HAL_ERROR; 
 1349              		.loc 1 975 0
 1350 0350 0120     		mov	r0, #1
 1351 0352 1EE0     		b	.L59
 1352              	.L80:
 979:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 1353              		.loc 1 979 0
 1354 0354 0022     		mov	r2, #0
 1355 0356 5023     		mov	r3, #80
 1356 0358 E254     		strb	r2, [r4, r3]
 981:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_OK;
 1357              		.loc 1 981 0
 1358 035a 1AE0     		b	.L59
 1359              	.LVL54:
 1360              	.L81:
 985:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_BUSY;
 1361              		.loc 1 985 0
 1362 035c 0220     		mov	r0, #2
 1363 035e 18E0     		b	.L59
 1364              	.L82:
 760:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return  HAL_ERROR;
 1365              		.loc 1 760 0
 1366 0360 0120     		mov	r0, #1
 1367 0362 16E0     		b	.L59
 1368              	.L83:
 1369 0364 0120     		mov	r0, #1
 1370 0366 14E0     		b	.L59
 1371              	.L84:
 1372 0368 0120     		mov	r0, #1
 1373 036a 12E0     		b	.L59
 1374              	.L85:
 767:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_LOCK(hspi);
 1375              		.loc 1 767 0
 1376 036c 0220     		mov	r0, #2
 1377 036e 10E0     		b	.L59
 1378              	.LVL55:
 1379              	.L86:
 823:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           return HAL_TIMEOUT;
 1380              		.loc 1 823 0
 1381 0370 0320     		mov	r0, #3
 1382 0372 0EE0     		b	.L59
 1383              	.L87:
 837:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             return HAL_TIMEOUT;
 1384              		.loc 1 837 0
 1385 0374 0320     		mov	r0, #3
 1386 0376 0CE0     		b	.L59
 1387              	.L88:
 853:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             return HAL_TIMEOUT;
 1388              		.loc 1 853 0
ARM GAS  /tmp/cc1veDgB.s 			page 71


 1389 0378 0320     		mov	r0, #3
 1390 037a 0AE0     		b	.L59
 1391              	.L89:
 866:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             return HAL_TIMEOUT;
 1392              		.loc 1 866 0
 1393 037c 0320     		mov	r0, #3
 1394 037e 08E0     		b	.L59
 1395              	.L90:
 894:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           return HAL_TIMEOUT;
 1396              		.loc 1 894 0
 1397 0380 0320     		mov	r0, #3
 1398 0382 06E0     		b	.L59
 1399              	.L91:
 907:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             return HAL_TIMEOUT;
 1400              		.loc 1 907 0
 1401 0384 0320     		mov	r0, #3
 1402 0386 04E0     		b	.L59
 1403              	.L92:
 922:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             return HAL_TIMEOUT;
 1404              		.loc 1 922 0
 1405 0388 0320     		mov	r0, #3
 1406 038a 02E0     		b	.L59
 1407              	.L97:
 1408              		.align	2
 1409              	.L96:
 1410 038c FFDFFFFF 		.word	-8193
 1411              	.L93:
 933:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****             return HAL_TIMEOUT;
 1412              		.loc 1 933 0
 1413 0390 0320     		mov	r0, #3
 1414              	.L59:
 987:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 1415              		.loc 1 987 0
 1416 0392 02B0     		add	sp, sp, #8
 1417              		@ sp needed
 1418              	.LVL56:
 1419 0394 70BD     		pop	{r4, r5, r6, pc}
 1420              		.cfi_endproc
 1421              	.LFE42:
 1423 0396 C046     		.section	.text.HAL_SPI_Receive,"ax",%progbits
 1424              		.align	2
 1425              		.global	HAL_SPI_Receive
 1426              		.code	16
 1427              		.thumb_func
 1429              	HAL_SPI_Receive:
 1430              	.LFB41:
 577:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 1431              		.loc 1 577 0
 1432              		.cfi_startproc
 1433              	.LVL57:
 1434 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1435              	.LCFI8:
 1436              		.cfi_def_cfa_offset 20
 1437              		.cfi_offset 4, -20
 1438              		.cfi_offset 5, -16
 1439              		.cfi_offset 6, -12
 1440              		.cfi_offset 7, -8
ARM GAS  /tmp/cc1veDgB.s 			page 72


 1441              		.cfi_offset 14, -4
 1442 0002 85B0     		sub	sp, sp, #20
 1443              	.LCFI9:
 1444              		.cfi_def_cfa_offset 40
 1445 0004 041C     		mov	r4, r0
 1446 0006 8C46     		mov	ip, r1
 1447 0008 171C     		mov	r7, r2
 1448 000a 1E1C     		mov	r6, r3
 578:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __IO uint16_t tmpreg = 0U;
 1449              		.loc 1 578 0
 1450 000c 0025     		mov	r5, #0
 1451 000e 6846     		mov	r0, sp
 1452              	.LVL58:
 1453 0010 C581     		strh	r5, [r0, #14]
 580:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(hspi->State == HAL_SPI_STATE_READY)
 1454              		.loc 1 580 0
 1455 0012 5120     		mov	r0, #81
 1456 0014 205C     		ldrb	r0, [r4, r0]
 1457 0016 0128     		cmp	r0, #1
 1458 0018 00D0     		beq	.LCB1426
 1459 001a 06E1     		b	.L116	@long jump
 1460              	.LCB1426:
 582:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((pData == NULL ) || (Size == 0U)) 
 1461              		.loc 1 582 0
 1462 001c 0029     		cmp	r1, #0
 1463 001e 00D1     		bne	.LCB1428
 1464 0020 05E1     		b	.L117	@long jump
 1465              	.LCB1428:
 582:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((pData == NULL ) || (Size == 0U)) 
 1466              		.loc 1 582 0 is_stmt 0 discriminator 1
 1467 0022 002A     		cmp	r2, #0
 1468 0024 00D1     		bne	.LCB1430
 1469 0026 04E1     		b	.L118	@long jump
 1470              	.LCB1430:
 588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_LOCK(hspi);
 1471              		.loc 1 588 0 is_stmt 1
 1472 0028 5023     		mov	r3, #80
 1473              	.LVL59:
 1474 002a E35C     		ldrb	r3, [r4, r3]
 1475 002c 012B     		cmp	r3, #1
 1476 002e 00D1     		bne	.LCB1435
 1477 0030 01E1     		b	.L119	@long jump
 1478              	.LCB1435:
 588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_LOCK(hspi);
 1479              		.loc 1 588 0 is_stmt 0 discriminator 2
 1480 0032 0122     		mov	r2, #1
 1481              	.LVL60:
 1482 0034 5023     		mov	r3, #80
 1483 0036 E254     		strb	r2, [r4, r3]
 591:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State       = HAL_SPI_STATE_BUSY_RX;
 1484              		.loc 1 591 0 is_stmt 1 discriminator 2
 1485 0038 2222     		mov	r2, #34
 1486 003a 5123     		mov	r3, #81
 1487 003c E254     		strb	r2, [r4, r3]
 592:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 1488              		.loc 1 592 0 discriminator 2
 1489 003e 0023     		mov	r3, #0
ARM GAS  /tmp/cc1veDgB.s 			page 73


 1490 0040 6365     		str	r3, [r4, #84]
 594:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pRxBuffPtr  = pData;
 1491              		.loc 1 594 0 discriminator 2
 1492 0042 A163     		str	r1, [r4, #56]
 595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferSize  = Size;
 1493              		.loc 1 595 0 discriminator 2
 1494 0044 A787     		strh	r7, [r4, #60]
 596:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferCount = Size;
 1495              		.loc 1 596 0 discriminator 2
 1496 0046 E787     		strh	r7, [r4, #62]
 599:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxISR = 0U;
 1497              		.loc 1 599 0 discriminator 2
 1498 0048 A364     		str	r3, [r4, #72]
 600:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxISR = 0U;
 1499              		.loc 1 600 0 discriminator 2
 1500 004a E364     		str	r3, [r4, #76]
 601:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pTxBuffPtr  = NULL;
 1501              		.loc 1 601 0 discriminator 2
 1502 004c 2363     		str	r3, [r4, #48]
 602:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferSize  = 0U;
 1503              		.loc 1 602 0 discriminator 2
 1504 004e A386     		strh	r3, [r4, #52]
 603:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferCount = 0U;
 1505              		.loc 1 603 0 discriminator 2
 1506 0050 E386     		strh	r3, [r4, #54]
 606:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.Direction == SPI_DIRECTION_1LINE)
 1507              		.loc 1 606 0 discriminator 2
 1508 0052 8023     		mov	r3, #128
 1509 0054 1B02     		lsl	r3, r3, #8
 1510 0056 A168     		ldr	r1, [r4, #8]
 1511              	.LVL61:
 1512 0058 9942     		cmp	r1, r3
 1513 005a 04D1     		bne	.L100
 608:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SPI_1LINE_RX(hspi);
 1514              		.loc 1 608 0
 1515 005c 2368     		ldr	r3, [r4]
 1516 005e 1968     		ldr	r1, [r3]
 1517 0060 7A4A     		ldr	r2, .L125
 1518 0062 0A40     		and	r2, r1
 1519 0064 1A60     		str	r2, [r3]
 1520              	.L100:
 612:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 1521              		.loc 1 612 0
 1522 0066 8023     		mov	r3, #128
 1523 0068 9B01     		lsl	r3, r3, #6
 1524 006a A26A     		ldr	r2, [r4, #40]
 1525 006c 9A42     		cmp	r2, r3
 1526 006e 0AD1     		bne	.L101
 614:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
 1527              		.loc 1 614 0
 1528 0070 2368     		ldr	r3, [r4]
 1529 0072 1968     		ldr	r1, [r3]
 1530 0074 764A     		ldr	r2, .L125+4
 1531 0076 0A40     		and	r2, r1
 1532 0078 1A60     		str	r2, [r3]
 1533 007a 2368     		ldr	r3, [r4]
 1534 007c 1968     		ldr	r1, [r3]
ARM GAS  /tmp/cc1veDgB.s 			page 74


 1535 007e 8022     		mov	r2, #128
 1536 0080 9201     		lsl	r2, r2, #6
 1537 0082 0A43     		orr	r2, r1
 1538 0084 1A60     		str	r2, [r3]
 1539              	.L101:
 617:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 1540              		.loc 1 617 0
 1541 0086 8223     		mov	r3, #130
 1542 0088 5B00     		lsl	r3, r3, #1
 1543 008a 6168     		ldr	r1, [r4, #4]
 1544 008c 9942     		cmp	r1, r3
 1545 008e 0DD1     		bne	.L102
 617:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 1546              		.loc 1 617 0 is_stmt 0 discriminator 1
 1547 0090 A268     		ldr	r2, [r4, #8]
 1548 0092 002A     		cmp	r2, #0
 1549 0094 0AD1     		bne	.L102
 620:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_UNLOCK(hspi);
 1550              		.loc 1 620 0 is_stmt 1
 1551 0096 5023     		mov	r3, #80
 1552 0098 E254     		strb	r2, [r4, r3]
 623:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 1553              		.loc 1 623 0
 1554 009a 0096     		str	r6, [sp]
 1555 009c 201C     		mov	r0, r4
 1556 009e 6146     		mov	r1, ip
 1557 00a0 6246     		mov	r2, ip
 1558 00a2 3B1C     		mov	r3, r7
 1559 00a4 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 1560              	.LVL62:
 1561 00a8 051C     		mov	r5, r0
 1562 00aa CBE0     		b	.L99
 1563              	.LVL63:
 1564              	.L102:
 627:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((hspi->Instance->CR1 &SPI_CR1_SPE) != SPI_CR1_SPE)
 1565              		.loc 1 627 0
 1566 00ac 2368     		ldr	r3, [r4]
 1567 00ae 1A68     		ldr	r2, [r3]
 1568 00b0 5106     		lsl	r1, r2, #25
 1569 00b2 03D4     		bmi	.L103
 630:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_ENABLE(hspi);
 1570              		.loc 1 630 0
 1571 00b4 1968     		ldr	r1, [r3]
 1572 00b6 4022     		mov	r2, #64
 1573 00b8 0A43     		orr	r2, r1
 1574 00ba 1A60     		str	r2, [r3]
 1575              	.L103:
 634:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 1576              		.loc 1 634 0
 1577 00bc E268     		ldr	r2, [r4, #12]
 1578 00be 002A     		cmp	r2, #0
 1579 00c0 13D0     		beq	.L123
 1580 00c2 36E0     		b	.L124
 1581              	.LVL64:
 1582              	.L106:
 639:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 1583              		.loc 1 639 0
ARM GAS  /tmp/cc1veDgB.s 			page 75


 1584 00c4 201C     		mov	r0, r4
 1585 00c6 0121     		mov	r1, #1
 1586 00c8 0022     		mov	r2, #0
 1587 00ca 331C     		mov	r3, r6
 1588 00cc FFF7FEFF 		bl	SPI_WaitOnFlagUntilTimeout
 1589              	.LVL65:
 1590 00d0 0028     		cmp	r0, #0
 1591 00d2 00D0     		beq	.LCB1541
 1592 00d4 B1E0     		b	.L120	@long jump
 1593              	.LCB1541:
 644:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         (*hspi->pRxBuffPtr++) = hspi->Instance->DR;
 1594              		.loc 1 644 0
 1595 00d6 A36B     		ldr	r3, [r4, #56]
 1596 00d8 5A1C     		add	r2, r3, #1
 1597 00da A263     		str	r2, [r4, #56]
 1598 00dc 2268     		ldr	r2, [r4]
 1599 00de D268     		ldr	r2, [r2, #12]
 1600 00e0 1A70     		strb	r2, [r3]
 645:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->RxXferCount--;
 1601              		.loc 1 645 0
 1602 00e2 E38F     		ldrh	r3, [r4, #62]
 1603 00e4 013B     		sub	r3, r3, #1
 1604 00e6 9BB2     		uxth	r3, r3
 1605 00e8 E387     		strh	r3, [r4, #62]
 1606              	.L123:
 636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       while(hspi->RxXferCount > 1U)
 1607              		.loc 1 636 0 discriminator 1
 1608 00ea E38F     		ldrh	r3, [r4, #62]
 1609 00ec 9BB2     		uxth	r3, r3
 1610 00ee 012B     		cmp	r3, #1
 1611 00f0 E8D8     		bhi	.L106
 648:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE) 
 1612              		.loc 1 648 0
 1613 00f2 8023     		mov	r3, #128
 1614 00f4 9B01     		lsl	r3, r3, #6
 1615 00f6 A16A     		ldr	r1, [r4, #40]
 1616 00f8 9942     		cmp	r1, r3
 1617 00fa 29D1     		bne	.L107
 650:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 1618              		.loc 1 650 0
 1619 00fc 2368     		ldr	r3, [r4]
 1620 00fe 1968     		ldr	r1, [r3]
 1621 0100 8022     		mov	r2, #128
 1622 0102 5201     		lsl	r2, r2, #5
 1623 0104 0A43     		orr	r2, r1
 1624 0106 1A60     		str	r2, [r3]
 1625 0108 22E0     		b	.L107
 1626              	.L108:
 659:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 1627              		.loc 1 659 0
 1628 010a 201C     		mov	r0, r4
 1629 010c 0121     		mov	r1, #1
 1630 010e 0022     		mov	r2, #0
 1631 0110 331C     		mov	r3, r6
 1632 0112 FFF7FEFF 		bl	SPI_WaitOnFlagUntilTimeout
 1633              	.LVL66:
 1634 0116 0028     		cmp	r0, #0
ARM GAS  /tmp/cc1veDgB.s 			page 76


 1635 0118 00D0     		beq	.LCB1585
 1636 011a 90E0     		b	.L121	@long jump
 1637              	.LCB1585:
 664:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         *((uint16_t*)hspi->pRxBuffPtr) = hspi->Instance->DR;
 1638              		.loc 1 664 0
 1639 011c 2368     		ldr	r3, [r4]
 1640 011e DB68     		ldr	r3, [r3, #12]
 1641 0120 A26B     		ldr	r2, [r4, #56]
 1642 0122 1380     		strh	r3, [r2]
 665:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->pRxBuffPtr+=2U;
 1643              		.loc 1 665 0
 1644 0124 A36B     		ldr	r3, [r4, #56]
 1645 0126 0233     		add	r3, r3, #2
 1646 0128 A363     		str	r3, [r4, #56]
 666:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->RxXferCount--;
 1647              		.loc 1 666 0
 1648 012a E38F     		ldrh	r3, [r4, #62]
 1649 012c 013B     		sub	r3, r3, #1
 1650 012e 9BB2     		uxth	r3, r3
 1651 0130 E387     		strh	r3, [r4, #62]
 1652              	.L124:
 656:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       while(hspi->RxXferCount > 1U)
 1653              		.loc 1 656 0 discriminator 1
 1654 0132 E38F     		ldrh	r3, [r4, #62]
 1655 0134 9BB2     		uxth	r3, r3
 1656 0136 012B     		cmp	r3, #1
 1657 0138 E7D8     		bhi	.L108
 669:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE) 
 1658              		.loc 1 669 0
 1659 013a 8023     		mov	r3, #128
 1660 013c 9B01     		lsl	r3, r3, #6
 1661 013e A16A     		ldr	r1, [r4, #40]
 1662 0140 9942     		cmp	r1, r3
 1663 0142 05D1     		bne	.L107
 671:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 1664              		.loc 1 671 0
 1665 0144 2368     		ldr	r3, [r4]
 1666 0146 1968     		ldr	r1, [r3]
 1667 0148 8022     		mov	r2, #128
 1668 014a 5201     		lsl	r2, r2, #5
 1669 014c 0A43     		orr	r2, r1
 1670 014e 1A60     		str	r2, [r3]
 1671              	.L107:
 676:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 1672              		.loc 1 676 0
 1673 0150 201C     		mov	r0, r4
 1674 0152 0121     		mov	r1, #1
 1675 0154 0022     		mov	r2, #0
 1676 0156 331C     		mov	r3, r6
 1677 0158 FFF7FEFF 		bl	SPI_WaitOnFlagUntilTimeout
 1678              	.LVL67:
 1679 015c 051E     		sub	r5, r0, #0
 1680 015e 70D1     		bne	.L122
 682:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 1681              		.loc 1 682 0
 1682 0160 E268     		ldr	r2, [r4, #12]
 1683 0162 002A     		cmp	r2, #0
ARM GAS  /tmp/cc1veDgB.s 			page 77


 1684 0164 06D1     		bne	.L109
 684:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       (*hspi->pRxBuffPtr++) = hspi->Instance->DR;
 1685              		.loc 1 684 0
 1686 0166 A36B     		ldr	r3, [r4, #56]
 1687 0168 5A1C     		add	r2, r3, #1
 1688 016a A263     		str	r2, [r4, #56]
 1689 016c 2268     		ldr	r2, [r4]
 1690 016e D268     		ldr	r2, [r2, #12]
 1691 0170 1A70     		strb	r2, [r3]
 1692 0172 06E0     		b	.L110
 1693              	.L109:
 689:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       *((uint16_t*)hspi->pRxBuffPtr) = hspi->Instance->DR;
 1694              		.loc 1 689 0
 1695 0174 2368     		ldr	r3, [r4]
 1696 0176 DB68     		ldr	r3, [r3, #12]
 1697 0178 A16B     		ldr	r1, [r4, #56]
 1698 017a 0B80     		strh	r3, [r1]
 690:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->pRxBuffPtr+=2U;
 1699              		.loc 1 690 0
 1700 017c A36B     		ldr	r3, [r4, #56]
 1701 017e 0233     		add	r3, r3, #2
 1702 0180 A363     		str	r3, [r4, #56]
 1703              	.L110:
 692:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferCount--;
 1704              		.loc 1 692 0
 1705 0182 E38F     		ldrh	r3, [r4, #62]
 1706 0184 013B     		sub	r3, r3, #1
 1707 0186 9BB2     		uxth	r3, r3
 1708 0188 E387     		strh	r3, [r4, #62]
 695:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 1709              		.loc 1 695 0
 1710 018a 8023     		mov	r3, #128
 1711 018c 9B01     		lsl	r3, r3, #6
 1712 018e A26A     		ldr	r2, [r4, #40]
 1713 0190 9A42     		cmp	r2, r3
 1714 0192 14D1     		bne	.L111
 698:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout) != HAL_OK)
 1715              		.loc 1 698 0
 1716 0194 201C     		mov	r0, r4
 1717 0196 0121     		mov	r1, #1
 1718 0198 0022     		mov	r2, #0
 1719 019a 331C     		mov	r3, r6
 1720 019c FFF7FEFF 		bl	SPI_WaitOnFlagUntilTimeout
 1721              	.LVL68:
 1722 01a0 0028     		cmp	r0, #0
 1723 01a2 05D0     		beq	.L112
 700:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
 1724              		.loc 1 700 0
 1725 01a4 636D     		ldr	r3, [r4, #84]
 1726 01a6 0222     		mov	r2, #2
 1727 01a8 1343     		orr	r3, r2
 1728 01aa 6365     		str	r3, [r4, #84]
 701:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         return HAL_TIMEOUT;
 1729              		.loc 1 701 0
 1730 01ac 0325     		mov	r5, #3
 1731 01ae 49E0     		b	.L99
 1732              	.L112:
ARM GAS  /tmp/cc1veDgB.s 			page 78


 705:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       tmpreg = hspi->Instance->DR;
 1733              		.loc 1 705 0
 1734 01b0 2368     		ldr	r3, [r4]
 1735 01b2 DA68     		ldr	r2, [r3, #12]
 1736 01b4 92B2     		uxth	r2, r2
 1737 01b6 6B46     		mov	r3, sp
 1738 01b8 DA81     		strh	r2, [r3, #14]
 1739 01ba 0E33     		add	r3, r3, #14
 706:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       UNUSED(tmpreg);		/* avoid warning on tmpreg affectation with stupid compiler */
 1740              		.loc 1 706 0
 1741 01bc 1B88     		ldrh	r3, [r3]
 1742              	.L111:
 709:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((hspi->Init.Mode == SPI_MODE_MASTER)&&((hspi->Init.Direction == SPI_DIRECTION_1LINE)||(hspi-
 1743              		.loc 1 709 0
 1744 01be 8223     		mov	r3, #130
 1745 01c0 5B00     		lsl	r3, r3, #1
 1746 01c2 6168     		ldr	r1, [r4, #4]
 1747 01c4 9942     		cmp	r1, r3
 1748 01c6 0DD1     		bne	.L113
 709:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((hspi->Init.Mode == SPI_MODE_MASTER)&&((hspi->Init.Direction == SPI_DIRECTION_1LINE)||(hspi-
 1749              		.loc 1 709 0 is_stmt 0 discriminator 1
 1750 01c8 A368     		ldr	r3, [r4, #8]
 1751 01ca 8022     		mov	r2, #128
 1752 01cc 1202     		lsl	r2, r2, #8
 1753 01ce 9342     		cmp	r3, r2
 1754 01d0 03D0     		beq	.L114
 1755 01d2 8022     		mov	r2, #128
 1756 01d4 D200     		lsl	r2, r2, #3
 1757 01d6 9342     		cmp	r3, r2
 1758 01d8 04D1     		bne	.L113
 1759              	.L114:
 712:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_DISABLE(hspi);
 1760              		.loc 1 712 0 is_stmt 1
 1761 01da 2368     		ldr	r3, [r4]
 1762 01dc 1A68     		ldr	r2, [r3]
 1763 01de 4021     		mov	r1, #64
 1764 01e0 8A43     		bic	r2, r1
 1765 01e2 1A60     		str	r2, [r3]
 1766              	.L113:
 715:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 1767              		.loc 1 715 0
 1768 01e4 0122     		mov	r2, #1
 1769 01e6 5123     		mov	r3, #81
 1770 01e8 E254     		strb	r2, [r4, r3]
 718:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE) && (__HAL_SPI_GET_FLAG(hspi, SPI_FL
 1771              		.loc 1 718 0
 1772 01ea 8023     		mov	r3, #128
 1773 01ec 9B01     		lsl	r3, r3, #6
 1774 01ee A26A     		ldr	r2, [r4, #40]
 1775 01f0 9A42     		cmp	r2, r3
 1776 01f2 16D1     		bne	.L115
 718:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE) && (__HAL_SPI_GET_FLAG(hspi, SPI_FL
 1777              		.loc 1 718 0 is_stmt 0 discriminator 1
 1778 01f4 2368     		ldr	r3, [r4]
 1779 01f6 9A68     		ldr	r2, [r3, #8]
 1780 01f8 D106     		lsl	r1, r2, #27
 1781 01fa 12D5     		bpl	.L115
ARM GAS  /tmp/cc1veDgB.s 			page 79


 720:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
 1782              		.loc 1 720 0 is_stmt 1
 1783 01fc 626D     		ldr	r2, [r4, #84]
 1784 01fe 0221     		mov	r1, #2
 1785 0200 0A43     		orr	r2, r1
 1786 0202 6265     		str	r2, [r4, #84]
 723:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
 1787              		.loc 1 723 0
 1788 0204 1968     		ldr	r1, [r3]
 1789 0206 124A     		ldr	r2, .L125+4
 1790 0208 0A40     		and	r2, r1
 1791 020a 1A60     		str	r2, [r3]
 1792 020c 2368     		ldr	r3, [r4]
 1793 020e 1968     		ldr	r1, [r3]
 1794 0210 8022     		mov	r2, #128
 1795 0212 9201     		lsl	r2, r2, #6
 1796 0214 0A43     		orr	r2, r1
 1797 0216 1A60     		str	r2, [r3]
 726:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_UNLOCK(hspi);
 1798              		.loc 1 726 0
 1799 0218 0022     		mov	r2, #0
 1800 021a 5023     		mov	r3, #80
 1801 021c E254     		strb	r2, [r4, r3]
 728:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return HAL_ERROR; 
 1802              		.loc 1 728 0
 1803 021e 0125     		mov	r5, #1
 1804 0220 10E0     		b	.L99
 1805              	.L115:
 732:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 1806              		.loc 1 732 0
 1807 0222 0022     		mov	r2, #0
 1808 0224 5023     		mov	r3, #80
 1809 0226 E254     		strb	r2, [r4, r3]
 734:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_OK;
 1810              		.loc 1 734 0
 1811 0228 0CE0     		b	.L99
 1812              	.LVL69:
 1813              	.L116:
 738:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_BUSY;
 1814              		.loc 1 738 0
 1815 022a 0225     		mov	r5, #2
 1816 022c 0AE0     		b	.L99
 1817              	.L117:
 584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return  HAL_ERROR;
 1818              		.loc 1 584 0
 1819 022e 0125     		mov	r5, #1
 1820 0230 08E0     		b	.L99
 1821              	.L118:
 1822 0232 0125     		mov	r5, #1
 1823 0234 06E0     		b	.L99
 1824              	.LVL70:
 1825              	.L119:
 588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_LOCK(hspi);
 1826              		.loc 1 588 0
 1827 0236 0225     		mov	r5, #2
 1828 0238 04E0     		b	.L99
 1829              	.LVL71:
ARM GAS  /tmp/cc1veDgB.s 			page 80


 1830              	.L120:
 641:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           return HAL_TIMEOUT;
 1831              		.loc 1 641 0
 1832 023a 0325     		mov	r5, #3
 1833 023c 02E0     		b	.L99
 1834              	.L121:
 661:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           return HAL_TIMEOUT;
 1835              		.loc 1 661 0
 1836 023e 0325     		mov	r5, #3
 1837 0240 00E0     		b	.L99
 1838              	.L122:
 678:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return HAL_TIMEOUT;
 1839              		.loc 1 678 0
 1840 0242 0325     		mov	r5, #3
 1841              	.L99:
 740:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 1842              		.loc 1 740 0
 1843 0244 281C     		mov	r0, r5
 1844 0246 05B0     		add	sp, sp, #20
 1845              		@ sp needed
 1846              	.LVL72:
 1847              	.LVL73:
 1848 0248 F0BD     		pop	{r4, r5, r6, r7, pc}
 1849              	.L126:
 1850 024a C046     		.align	2
 1851              	.L125:
 1852 024c FFBFFFFF 		.word	-16385
 1853 0250 FFDFFFFF 		.word	-8193
 1854              		.cfi_endproc
 1855              	.LFE41:
 1857              		.section	.text.HAL_SPI_Transmit_IT,"ax",%progbits
 1858              		.align	2
 1859              		.global	HAL_SPI_Transmit_IT
 1860              		.code	16
 1861              		.thumb_func
 1863              	HAL_SPI_Transmit_IT:
 1864              	.LFB43:
 998:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 1865              		.loc 1 998 0
 1866              		.cfi_startproc
 1867              	.LVL74:
 1868 0000 10B5     		push	{r4, lr}
 1869              	.LCFI10:
 1870              		.cfi_def_cfa_offset 8
 1871              		.cfi_offset 4, -8
 1872              		.cfi_offset 14, -4
 999:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(hspi->State == HAL_SPI_STATE_READY)
 1873              		.loc 1 999 0
 1874 0002 5123     		mov	r3, #81
 1875 0004 C35C     		ldrb	r3, [r0, r3]
 1876 0006 012B     		cmp	r3, #1
 1877 0008 4ED1     		bne	.L133
1001:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((pData == NULL) || (Size == 0U))
 1878              		.loc 1 1001 0
 1879 000a 0029     		cmp	r1, #0
 1880 000c 4ED0     		beq	.L134
1001:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((pData == NULL) || (Size == 0U))
ARM GAS  /tmp/cc1veDgB.s 			page 81


 1881              		.loc 1 1001 0 is_stmt 0 discriminator 1
 1882 000e 002A     		cmp	r2, #0
 1883 0010 4ED0     		beq	.L135
1010:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_LOCK(hspi);
 1884              		.loc 1 1010 0 is_stmt 1
 1885 0012 5023     		mov	r3, #80
 1886 0014 C35C     		ldrb	r3, [r0, r3]
 1887 0016 012B     		cmp	r3, #1
 1888 0018 4CD0     		beq	.L136
1010:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_LOCK(hspi);
 1889              		.loc 1 1010 0 is_stmt 0 discriminator 2
 1890 001a 0124     		mov	r4, #1
 1891 001c 5023     		mov	r3, #80
 1892 001e C454     		strb	r4, [r0, r3]
1013:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State        = HAL_SPI_STATE_BUSY_TX;
 1893              		.loc 1 1013 0 is_stmt 1 discriminator 2
 1894 0020 1224     		mov	r4, #18
 1895 0022 5123     		mov	r3, #81
 1896 0024 C454     		strb	r4, [r0, r3]
1014:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->ErrorCode    = HAL_SPI_ERROR_NONE;
 1897              		.loc 1 1014 0 discriminator 2
 1898 0026 0023     		mov	r3, #0
 1899 0028 4365     		str	r3, [r0, #84]
1016:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxISR        = &SPI_TxISR;
 1900              		.loc 1 1016 0 discriminator 2
 1901 002a 244C     		ldr	r4, .L138
 1902 002c C464     		str	r4, [r0, #76]
1017:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pTxBuffPtr   = pData;
 1903              		.loc 1 1017 0 discriminator 2
 1904 002e 0163     		str	r1, [r0, #48]
1018:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferSize   = Size;
 1905              		.loc 1 1018 0 discriminator 2
 1906 0030 8286     		strh	r2, [r0, #52]
1019:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferCount  = Size;
 1907              		.loc 1 1019 0 discriminator 2
 1908 0032 C286     		strh	r2, [r0, #54]
1022:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxISR        = 0U;
 1909              		.loc 1 1022 0 discriminator 2
 1910 0034 8364     		str	r3, [r0, #72]
1023:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pRxBuffPtr   = NULL;
 1911              		.loc 1 1023 0 discriminator 2
 1912 0036 8363     		str	r3, [r0, #56]
1024:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferSize   = 0U;
 1913              		.loc 1 1024 0 discriminator 2
 1914 0038 8387     		strh	r3, [r0, #60]
1025:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferCount  = 0U;
 1915              		.loc 1 1025 0 discriminator 2
 1916 003a C387     		strh	r3, [r0, #62]
1028:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.Direction == SPI_DIRECTION_1LINE)
 1917              		.loc 1 1028 0 discriminator 2
 1918 003c 8023     		mov	r3, #128
 1919 003e 1B02     		lsl	r3, r3, #8
 1920 0040 8168     		ldr	r1, [r0, #8]
 1921              	.LVL75:
 1922 0042 9942     		cmp	r1, r3
 1923 0044 05D1     		bne	.L129
1030:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SPI_1LINE_TX(hspi);
ARM GAS  /tmp/cc1veDgB.s 			page 82


 1924              		.loc 1 1030 0
 1925 0046 0368     		ldr	r3, [r0]
 1926 0048 1968     		ldr	r1, [r3]
 1927 004a 8022     		mov	r2, #128
 1928              	.LVL76:
 1929 004c D201     		lsl	r2, r2, #7
 1930 004e 0A43     		orr	r2, r1
 1931 0050 1A60     		str	r2, [r3]
 1932              	.LVL77:
 1933              	.L129:
1034:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 1934              		.loc 1 1034 0
 1935 0052 8023     		mov	r3, #128
 1936 0054 9B01     		lsl	r3, r3, #6
 1937 0056 826A     		ldr	r2, [r0, #40]
 1938 0058 9A42     		cmp	r2, r3
 1939 005a 0AD1     		bne	.L130
1036:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
 1940              		.loc 1 1036 0
 1941 005c 0368     		ldr	r3, [r0]
 1942 005e 1968     		ldr	r1, [r3]
 1943 0060 174A     		ldr	r2, .L138+4
 1944 0062 0A40     		and	r2, r1
 1945 0064 1A60     		str	r2, [r3]
 1946 0066 0368     		ldr	r3, [r0]
 1947 0068 1968     		ldr	r1, [r3]
 1948 006a 8022     		mov	r2, #128
 1949 006c 9201     		lsl	r2, r2, #6
 1950 006e 0A43     		orr	r2, r1
 1951 0070 1A60     		str	r2, [r3]
 1952              	.L130:
1039:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 1953              		.loc 1 1039 0
 1954 0072 8368     		ldr	r3, [r0, #8]
 1955 0074 002B     		cmp	r3, #0
 1956 0076 05D1     		bne	.L131
1041:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE));
 1957              		.loc 1 1041 0
 1958 0078 0368     		ldr	r3, [r0]
 1959 007a 5968     		ldr	r1, [r3, #4]
 1960 007c 8022     		mov	r2, #128
 1961 007e 0A43     		orr	r2, r1
 1962 0080 5A60     		str	r2, [r3, #4]
 1963 0082 04E0     		b	.L132
 1964              	.L131:
1046:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_ERR));
 1965              		.loc 1 1046 0
 1966 0084 0368     		ldr	r3, [r0]
 1967 0086 5968     		ldr	r1, [r3, #4]
 1968 0088 A022     		mov	r2, #160
 1969 008a 0A43     		orr	r2, r1
 1970 008c 5A60     		str	r2, [r3, #4]
 1971              	.L132:
1049:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 1972              		.loc 1 1049 0
 1973 008e 0022     		mov	r2, #0
 1974 0090 5023     		mov	r3, #80
ARM GAS  /tmp/cc1veDgB.s 			page 83


 1975 0092 C254     		strb	r2, [r0, r3]
1052:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((hspi->Instance->CR1 &SPI_CR1_SPE) != SPI_CR1_SPE)
 1976              		.loc 1 1052 0
 1977 0094 0368     		ldr	r3, [r0]
 1978 0096 1A68     		ldr	r2, [r3]
 1979 0098 5106     		lsl	r1, r2, #25
 1980 009a 0DD4     		bmi	.L137
1055:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_ENABLE(hspi);
 1981              		.loc 1 1055 0
 1982 009c 1968     		ldr	r1, [r3]
 1983 009e 4022     		mov	r2, #64
 1984 00a0 0A43     		orr	r2, r1
 1985 00a2 1A60     		str	r2, [r3]
1058:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_OK;
 1986              		.loc 1 1058 0
 1987 00a4 0020     		mov	r0, #0
 1988              	.LVL78:
 1989 00a6 08E0     		b	.L128
 1990              	.LVL79:
 1991              	.L133:
1062:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_BUSY;
 1992              		.loc 1 1062 0
 1993 00a8 0220     		mov	r0, #2
 1994              	.LVL80:
 1995 00aa 06E0     		b	.L128
 1996              	.LVL81:
 1997              	.L134:
1003:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return  HAL_ERROR;
 1998              		.loc 1 1003 0
 1999 00ac 0120     		mov	r0, #1
 2000              	.LVL82:
 2001 00ae 04E0     		b	.L128
 2002              	.LVL83:
 2003              	.L135:
 2004 00b0 0120     		mov	r0, #1
 2005              	.LVL84:
 2006 00b2 02E0     		b	.L128
 2007              	.LVL85:
 2008              	.L136:
1010:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_LOCK(hspi);
 2009              		.loc 1 1010 0
 2010 00b4 0220     		mov	r0, #2
 2011              	.LVL86:
 2012 00b6 00E0     		b	.L128
 2013              	.LVL87:
 2014              	.L137:
1058:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_OK;
 2015              		.loc 1 1058 0
 2016 00b8 0020     		mov	r0, #0
 2017              	.LVL88:
 2018              	.L128:
1064:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 2019              		.loc 1 1064 0
 2020              		@ sp needed
 2021 00ba 10BD     		pop	{r4, pc}
 2022              	.L139:
 2023              		.align	2
ARM GAS  /tmp/cc1veDgB.s 			page 84


 2024              	.L138:
 2025 00bc 00000000 		.word	SPI_TxISR
 2026 00c0 FFDFFFFF 		.word	-8193
 2027              		.cfi_endproc
 2028              	.LFE43:
 2030              		.section	.text.HAL_SPI_TransmitReceive_IT,"ax",%progbits
 2031              		.align	2
 2032              		.global	HAL_SPI_TransmitReceive_IT
 2033              		.code	16
 2034              		.thumb_func
 2036              	HAL_SPI_TransmitReceive_IT:
 2037              	.LFB45:
1156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 2038              		.loc 1 1156 0
 2039              		.cfi_startproc
 2040              	.LVL89:
 2041 0000 30B5     		push	{r4, r5, lr}
 2042              	.LCFI11:
 2043              		.cfi_def_cfa_offset 12
 2044              		.cfi_offset 4, -12
 2045              		.cfi_offset 5, -8
 2046              		.cfi_offset 14, -4
1158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if((hspi->State == HAL_SPI_STATE_READY) || \
 2047              		.loc 1 1158 0
 2048 0002 5124     		mov	r4, #81
 2049 0004 045D     		ldrb	r4, [r0, r4]
 2050 0006 012C     		cmp	r4, #1
 2051 0008 0BD0     		beq	.L141
1158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if((hspi->State == HAL_SPI_STATE_READY) || \
 2052              		.loc 1 1158 0 is_stmt 0 discriminator 1
 2053 000a 8224     		mov	r4, #130
 2054 000c 6400     		lsl	r4, r4, #1
 2055 000e 4568     		ldr	r5, [r0, #4]
 2056 0010 A542     		cmp	r5, r4
 2057 0012 48D1     		bne	.L145
1159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****      ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hs
 2058              		.loc 1 1159 0 is_stmt 1
 2059 0014 8468     		ldr	r4, [r0, #8]
 2060 0016 002C     		cmp	r4, #0
 2061 0018 47D1     		bne	.L146
1159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****      ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hs
 2062              		.loc 1 1159 0 is_stmt 0 discriminator 1
 2063 001a 5124     		mov	r4, #81
 2064 001c 045D     		ldrb	r4, [r0, r4]
 2065 001e 222C     		cmp	r4, #34
 2066 0020 45D1     		bne	.L147
 2067              	.L141:
1161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((pTxData == NULL ) || (pRxData == NULL ) || (Size == 0U)) 
 2068              		.loc 1 1161 0 is_stmt 1
 2069 0022 0029     		cmp	r1, #0
 2070 0024 45D0     		beq	.L148
1161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((pTxData == NULL ) || (pRxData == NULL ) || (Size == 0U)) 
 2071              		.loc 1 1161 0 is_stmt 0 discriminator 1
 2072 0026 002A     		cmp	r2, #0
 2073 0028 45D0     		beq	.L149
 2074 002a 002B     		cmp	r3, #0
 2075 002c 45D0     		beq	.L150
ARM GAS  /tmp/cc1veDgB.s 			page 85


1170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_LOCK(hspi);
 2076              		.loc 1 1170 0 is_stmt 1
 2077 002e 5024     		mov	r4, #80
 2078 0030 045D     		ldrb	r4, [r0, r4]
 2079 0032 012C     		cmp	r4, #1
 2080 0034 43D0     		beq	.L151
1170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_LOCK(hspi);
 2081              		.loc 1 1170 0 is_stmt 0 discriminator 2
 2082 0036 0125     		mov	r5, #1
 2083 0038 5024     		mov	r4, #80
 2084 003a 0555     		strb	r5, [r0, r4]
1173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->State != HAL_SPI_STATE_BUSY_RX)
 2085              		.loc 1 1173 0 is_stmt 1 discriminator 2
 2086 003c 5124     		mov	r4, #81
 2087 003e 045D     		ldrb	r4, [r0, r4]
 2088 0040 222C     		cmp	r4, #34
 2089 0042 02D0     		beq	.L143
1175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 2090              		.loc 1 1175 0
 2091 0044 3225     		mov	r5, #50
 2092 0046 5124     		mov	r4, #81
 2093 0048 0555     		strb	r5, [r0, r4]
 2094              	.L143:
1179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->ErrorCode    = HAL_SPI_ERROR_NONE;
 2095              		.loc 1 1179 0
 2096 004a 0024     		mov	r4, #0
 2097 004c 4465     		str	r4, [r0, #84]
1181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxISR = &SPI_TxISR;
 2098              		.loc 1 1181 0
 2099 004e 1E4C     		ldr	r4, .L153
 2100 0050 C464     		str	r4, [r0, #76]
1182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pTxBuffPtr   = pTxData;
 2101              		.loc 1 1182 0
 2102 0052 0163     		str	r1, [r0, #48]
1183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferSize   = Size;
 2103              		.loc 1 1183 0
 2104 0054 8386     		strh	r3, [r0, #52]
1184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferCount  = Size;
 2105              		.loc 1 1184 0
 2106 0056 C386     		strh	r3, [r0, #54]
1186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxISR = &SPI_2LinesRxISR;
 2107              		.loc 1 1186 0
 2108 0058 1C49     		ldr	r1, .L153+4
 2109              	.LVL90:
 2110 005a 8164     		str	r1, [r0, #72]
1187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pRxBuffPtr   = pRxData;
 2111              		.loc 1 1187 0
 2112 005c 8263     		str	r2, [r0, #56]
1188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferSize   = Size;
 2113              		.loc 1 1188 0
 2114 005e 8387     		strh	r3, [r0, #60]
1189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferCount  = Size;
 2115              		.loc 1 1189 0
 2116 0060 C387     		strh	r3, [r0, #62]
1192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 2117              		.loc 1 1192 0
 2118 0062 8023     		mov	r3, #128
ARM GAS  /tmp/cc1veDgB.s 			page 86


 2119              	.LVL91:
 2120 0064 9B01     		lsl	r3, r3, #6
 2121 0066 856A     		ldr	r5, [r0, #40]
 2122 0068 9D42     		cmp	r5, r3
 2123 006a 0AD1     		bne	.L144
1194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
 2124              		.loc 1 1194 0
 2125 006c 0368     		ldr	r3, [r0]
 2126 006e 1968     		ldr	r1, [r3]
 2127 0070 174A     		ldr	r2, .L153+8
 2128              	.LVL92:
 2129 0072 0A40     		and	r2, r1
 2130 0074 1A60     		str	r2, [r3]
 2131              	.LVL93:
 2132 0076 0368     		ldr	r3, [r0]
 2133 0078 1968     		ldr	r1, [r3]
 2134 007a 8022     		mov	r2, #128
 2135 007c 9201     		lsl	r2, r2, #6
 2136 007e 0A43     		orr	r2, r1
 2137 0080 1A60     		str	r2, [r3]
 2138              	.L144:
1198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 2139              		.loc 1 1198 0
 2140 0082 0368     		ldr	r3, [r0]
 2141 0084 5968     		ldr	r1, [r3, #4]
 2142 0086 E022     		mov	r2, #224
 2143 0088 0A43     		orr	r2, r1
 2144 008a 5A60     		str	r2, [r3, #4]
1201:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 2145              		.loc 1 1201 0
 2146 008c 0022     		mov	r2, #0
 2147 008e 5023     		mov	r3, #80
 2148 0090 C254     		strb	r2, [r0, r3]
1204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((hspi->Instance->CR1 &SPI_CR1_SPE) != SPI_CR1_SPE)
 2149              		.loc 1 1204 0
 2150 0092 0368     		ldr	r3, [r0]
 2151 0094 1A68     		ldr	r2, [r3]
 2152 0096 5106     		lsl	r1, r2, #25
 2153 0098 13D4     		bmi	.L152
1207:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_ENABLE(hspi);
 2154              		.loc 1 1207 0
 2155 009a 1968     		ldr	r1, [r3]
 2156 009c 4022     		mov	r2, #64
 2157 009e 0A43     		orr	r2, r1
 2158 00a0 1A60     		str	r2, [r3]
1210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_OK;
 2159              		.loc 1 1210 0
 2160 00a2 0020     		mov	r0, #0
 2161              	.LVL94:
 2162 00a4 0EE0     		b	.L142
 2163              	.LVL95:
 2164              	.L145:
1214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_BUSY; 
 2165              		.loc 1 1214 0
 2166 00a6 0220     		mov	r0, #2
 2167              	.LVL96:
 2168 00a8 0CE0     		b	.L142
ARM GAS  /tmp/cc1veDgB.s 			page 87


 2169              	.LVL97:
 2170              	.L146:
 2171 00aa 0220     		mov	r0, #2
 2172              	.LVL98:
 2173 00ac 0AE0     		b	.L142
 2174              	.LVL99:
 2175              	.L147:
 2176 00ae 0220     		mov	r0, #2
 2177              	.LVL100:
 2178 00b0 08E0     		b	.L142
 2179              	.LVL101:
 2180              	.L148:
1163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return  HAL_ERROR;
 2181              		.loc 1 1163 0
 2182 00b2 0120     		mov	r0, #1
 2183              	.LVL102:
 2184 00b4 06E0     		b	.L142
 2185              	.LVL103:
 2186              	.L149:
 2187 00b6 0120     		mov	r0, #1
 2188              	.LVL104:
 2189 00b8 04E0     		b	.L142
 2190              	.LVL105:
 2191              	.L150:
 2192 00ba 0120     		mov	r0, #1
 2193              	.LVL106:
 2194 00bc 02E0     		b	.L142
 2195              	.LVL107:
 2196              	.L151:
1170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_LOCK(hspi);
 2197              		.loc 1 1170 0
 2198 00be 0220     		mov	r0, #2
 2199              	.LVL108:
 2200 00c0 00E0     		b	.L142
 2201              	.LVL109:
 2202              	.L152:
1210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_OK;
 2203              		.loc 1 1210 0
 2204 00c2 0020     		mov	r0, #0
 2205              	.LVL110:
 2206              	.L142:
1216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 2207              		.loc 1 1216 0
 2208              		@ sp needed
 2209 00c4 30BD     		pop	{r4, r5, pc}
 2210              	.L154:
 2211 00c6 C046     		.align	2
 2212              	.L153:
 2213 00c8 00000000 		.word	SPI_TxISR
 2214 00cc 00000000 		.word	SPI_2LinesRxISR
 2215 00d0 FFDFFFFF 		.word	-8193
 2216              		.cfi_endproc
 2217              	.LFE45:
 2219              		.section	.text.HAL_SPI_Receive_IT,"ax",%progbits
 2220              		.align	2
 2221              		.global	HAL_SPI_Receive_IT
 2222              		.code	16
ARM GAS  /tmp/cc1veDgB.s 			page 88


 2223              		.thumb_func
 2225              	HAL_SPI_Receive_IT:
 2226              	.LFB44:
1075:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 2227              		.loc 1 1075 0
 2228              		.cfi_startproc
 2229              	.LVL111:
 2230 0000 38B5     		push	{r3, r4, r5, lr}
 2231              	.LCFI12:
 2232              		.cfi_def_cfa_offset 16
 2233              		.cfi_offset 3, -16
 2234              		.cfi_offset 4, -12
 2235              		.cfi_offset 5, -8
 2236              		.cfi_offset 14, -4
 2237 0002 0D1C     		mov	r5, r1
 2238 0004 131C     		mov	r3, r2
1076:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(hspi->State == HAL_SPI_STATE_READY)
 2239              		.loc 1 1076 0
 2240 0006 5124     		mov	r4, #81
 2241 0008 045D     		ldrb	r4, [r0, r4]
 2242 000a 012C     		cmp	r4, #1
 2243 000c 54D1     		bne	.L160
1078:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((pData == NULL) || (Size == 0U)) 
 2244              		.loc 1 1078 0
 2245 000e 0029     		cmp	r1, #0
 2246 0010 54D0     		beq	.L161
1078:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((pData == NULL) || (Size == 0U)) 
 2247              		.loc 1 1078 0 is_stmt 0 discriminator 1
 2248 0012 002A     		cmp	r2, #0
 2249 0014 54D0     		beq	.L162
1084:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_LOCK(hspi);
 2250              		.loc 1 1084 0 is_stmt 1
 2251 0016 5022     		mov	r2, #80
 2252              	.LVL112:
 2253 0018 825C     		ldrb	r2, [r0, r2]
 2254 001a 012A     		cmp	r2, #1
 2255 001c 52D0     		beq	.L163
1084:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_LOCK(hspi);
 2256              		.loc 1 1084 0 is_stmt 0 discriminator 2
 2257 001e 0121     		mov	r1, #1
 2258              	.LVL113:
 2259 0020 5022     		mov	r2, #80
 2260 0022 8154     		strb	r1, [r0, r2]
1087:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State        = HAL_SPI_STATE_BUSY_RX;
 2261              		.loc 1 1087 0 is_stmt 1 discriminator 2
 2262 0024 2221     		mov	r1, #34
 2263 0026 5122     		mov	r2, #81
 2264 0028 8154     		strb	r1, [r0, r2]
1088:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->ErrorCode    = HAL_SPI_ERROR_NONE;
 2265              		.loc 1 1088 0 discriminator 2
 2266 002a 0022     		mov	r2, #0
 2267 002c 4265     		str	r2, [r0, #84]
1090:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxISR        = &SPI_RxISR;
 2268              		.loc 1 1090 0 discriminator 2
 2269 002e 2749     		ldr	r1, .L165
 2270 0030 8164     		str	r1, [r0, #72]
1091:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pRxBuffPtr   = pData;
ARM GAS  /tmp/cc1veDgB.s 			page 89


 2271              		.loc 1 1091 0 discriminator 2
 2272 0032 8563     		str	r5, [r0, #56]
1092:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferSize   = Size;
 2273              		.loc 1 1092 0 discriminator 2
 2274 0034 8387     		strh	r3, [r0, #60]
1093:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferCount  = Size ; 
 2275              		.loc 1 1093 0 discriminator 2
 2276 0036 C387     		strh	r3, [r0, #62]
1096:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxISR        = 0U;
 2277              		.loc 1 1096 0 discriminator 2
 2278 0038 C264     		str	r2, [r0, #76]
1097:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pTxBuffPtr   = NULL;
 2279              		.loc 1 1097 0 discriminator 2
 2280 003a 0263     		str	r2, [r0, #48]
1098:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferSize   = 0U;
 2281              		.loc 1 1098 0 discriminator 2
 2282 003c 8286     		strh	r2, [r0, #52]
1099:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferCount  = 0U;
 2283              		.loc 1 1099 0 discriminator 2
 2284 003e C286     		strh	r2, [r0, #54]
1102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.Direction == SPI_DIRECTION_1LINE)
 2285              		.loc 1 1102 0 discriminator 2
 2286 0040 8268     		ldr	r2, [r0, #8]
 2287 0042 8021     		mov	r1, #128
 2288 0044 0902     		lsl	r1, r1, #8
 2289 0046 8A42     		cmp	r2, r1
 2290 0048 05D1     		bne	.L157
1104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SPI_1LINE_RX(hspi);
 2291              		.loc 1 1104 0
 2292 004a 0368     		ldr	r3, [r0]
 2293 004c 1968     		ldr	r1, [r3]
 2294 004e 204A     		ldr	r2, .L165+4
 2295 0050 0A40     		and	r2, r1
 2296 0052 1A60     		str	r2, [r3]
 2297 0054 0EE0     		b	.L158
 2298              	.L157:
1106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     else if((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
 2299              		.loc 1 1106 0
 2300 0056 002A     		cmp	r2, #0
 2301 0058 0CD1     		bne	.L158
1106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     else if((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
 2302              		.loc 1 1106 0 is_stmt 0 discriminator 1
 2303 005a 8222     		mov	r2, #130
 2304 005c 5200     		lsl	r2, r2, #1
 2305 005e 4168     		ldr	r1, [r0, #4]
 2306 0060 9142     		cmp	r1, r2
 2307 0062 07D1     		bne	.L158
1109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_UNLOCK(hspi);
 2308              		.loc 1 1109 0 is_stmt 1
 2309 0064 0021     		mov	r1, #0
 2310 0066 5022     		mov	r2, #80
 2311 0068 8154     		strb	r1, [r0, r2]
1112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return HAL_SPI_TransmitReceive_IT(hspi, pData, pData, Size);
 2312              		.loc 1 1112 0
 2313 006a 291C     		mov	r1, r5
 2314 006c 2A1C     		mov	r2, r5
 2315 006e FFF7FEFF 		bl	HAL_SPI_TransmitReceive_IT
ARM GAS  /tmp/cc1veDgB.s 			page 90


 2316              	.LVL114:
 2317 0072 2AE0     		b	.L156
 2318              	.LVL115:
 2319              	.L158:
1116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 2320              		.loc 1 1116 0
 2321 0074 8023     		mov	r3, #128
 2322 0076 9B01     		lsl	r3, r3, #6
 2323 0078 826A     		ldr	r2, [r0, #40]
 2324 007a 9A42     		cmp	r2, r3
 2325 007c 0AD1     		bne	.L159
1118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
 2326              		.loc 1 1118 0
 2327 007e 0368     		ldr	r3, [r0]
 2328 0080 1968     		ldr	r1, [r3]
 2329 0082 144A     		ldr	r2, .L165+8
 2330 0084 0A40     		and	r2, r1
 2331 0086 1A60     		str	r2, [r3]
 2332 0088 0368     		ldr	r3, [r0]
 2333 008a 1968     		ldr	r1, [r3]
 2334 008c 8022     		mov	r2, #128
 2335 008e 9201     		lsl	r2, r2, #6
 2336 0090 0A43     		orr	r2, r1
 2337 0092 1A60     		str	r2, [r3]
 2338              	.L159:
1122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
 2339              		.loc 1 1122 0
 2340 0094 0368     		ldr	r3, [r0]
 2341 0096 5968     		ldr	r1, [r3, #4]
 2342 0098 6022     		mov	r2, #96
 2343 009a 0A43     		orr	r2, r1
 2344 009c 5A60     		str	r2, [r3, #4]
1125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 2345              		.loc 1 1125 0
 2346 009e 0022     		mov	r2, #0
 2347 00a0 5023     		mov	r3, #80
 2348 00a2 C254     		strb	r2, [r0, r3]
1132:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((hspi->Instance->CR1 &SPI_CR1_SPE) != SPI_CR1_SPE)
 2349              		.loc 1 1132 0
 2350 00a4 0368     		ldr	r3, [r0]
 2351 00a6 1A68     		ldr	r2, [r3]
 2352 00a8 5106     		lsl	r1, r2, #25
 2353 00aa 0DD4     		bmi	.L164
1135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_ENABLE(hspi);
 2354              		.loc 1 1135 0
 2355 00ac 1968     		ldr	r1, [r3]
 2356 00ae 4022     		mov	r2, #64
 2357 00b0 0A43     		orr	r2, r1
 2358 00b2 1A60     		str	r2, [r3]
1138:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_OK;
 2359              		.loc 1 1138 0
 2360 00b4 0020     		mov	r0, #0
 2361              	.LVL116:
 2362 00b6 08E0     		b	.L156
 2363              	.LVL117:
 2364              	.L160:
1142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_BUSY; 
ARM GAS  /tmp/cc1veDgB.s 			page 91


 2365              		.loc 1 1142 0
 2366 00b8 0220     		mov	r0, #2
 2367              	.LVL118:
 2368 00ba 06E0     		b	.L156
 2369              	.LVL119:
 2370              	.L161:
1080:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return  HAL_ERROR;
 2371              		.loc 1 1080 0
 2372 00bc 0120     		mov	r0, #1
 2373              	.LVL120:
 2374 00be 04E0     		b	.L156
 2375              	.LVL121:
 2376              	.L162:
 2377 00c0 0120     		mov	r0, #1
 2378              	.LVL122:
 2379 00c2 02E0     		b	.L156
 2380              	.LVL123:
 2381              	.L163:
1084:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_LOCK(hspi);
 2382              		.loc 1 1084 0
 2383 00c4 0220     		mov	r0, #2
 2384              	.LVL124:
 2385 00c6 00E0     		b	.L156
 2386              	.LVL125:
 2387              	.L164:
1138:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_OK;
 2388              		.loc 1 1138 0
 2389 00c8 0020     		mov	r0, #0
 2390              	.LVL126:
 2391              	.L156:
1144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 2392              		.loc 1 1144 0
 2393              		@ sp needed
 2394              	.LVL127:
 2395 00ca 38BD     		pop	{r3, r4, r5, pc}
 2396              	.L166:
 2397              		.align	2
 2398              	.L165:
 2399 00cc 00000000 		.word	SPI_RxISR
 2400 00d0 FFBFFFFF 		.word	-16385
 2401 00d4 FFDFFFFF 		.word	-8193
 2402              		.cfi_endproc
 2403              	.LFE44:
 2405              		.section	.text.HAL_SPI_Transmit_DMA,"ax",%progbits
 2406              		.align	2
 2407              		.global	HAL_SPI_Transmit_DMA
 2408              		.code	16
 2409              		.thumb_func
 2411              	HAL_SPI_Transmit_DMA:
 2412              	.LFB46:
1227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 2413              		.loc 1 1227 0
 2414              		.cfi_startproc
 2415              	.LVL128:
 2416 0000 38B5     		push	{r3, r4, r5, lr}
 2417              	.LCFI13:
 2418              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/cc1veDgB.s 			page 92


 2419              		.cfi_offset 3, -16
 2420              		.cfi_offset 4, -12
 2421              		.cfi_offset 5, -8
 2422              		.cfi_offset 14, -4
 2423 0002 041C     		mov	r4, r0
1228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(hspi->State == HAL_SPI_STATE_READY)
 2424              		.loc 1 1228 0
 2425 0004 5123     		mov	r3, #81
 2426 0006 C35C     		ldrb	r3, [r0, r3]
 2427 0008 012B     		cmp	r3, #1
 2428 000a 60D1     		bne	.L168
1230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((pData == NULL) || (Size == 0U))
 2429              		.loc 1 1230 0
 2430 000c 0029     		cmp	r1, #0
 2431 000e 01D0     		beq	.L169
1230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((pData == NULL) || (Size == 0U))
 2432              		.loc 1 1230 0 is_stmt 0 discriminator 1
 2433 0010 002A     		cmp	r2, #0
 2434 0012 04D1     		bne	.L170
 2435              	.L169:
1233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_UNLOCK(hspi);
 2436              		.loc 1 1233 0 is_stmt 1
 2437 0014 0022     		mov	r2, #0
 2438              	.LVL129:
 2439 0016 5023     		mov	r3, #80
 2440 0018 E254     		strb	r2, [r4, r3]
1234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return  HAL_ERROR;
 2441              		.loc 1 1234 0
 2442 001a 0120     		mov	r0, #1
 2443              	.LVL130:
 2444 001c 5FE0     		b	.L171
 2445              	.LVL131:
 2446              	.L170:
1241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_LOCK(hspi);
 2447              		.loc 1 1241 0
 2448 001e 5023     		mov	r3, #80
 2449 0020 C35C     		ldrb	r3, [r0, r3]
 2450 0022 012B     		cmp	r3, #1
 2451 0024 58D0     		beq	.L174
1241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_LOCK(hspi);
 2452              		.loc 1 1241 0 is_stmt 0 discriminator 2
 2453 0026 0120     		mov	r0, #1
 2454              	.LVL132:
 2455 0028 5023     		mov	r3, #80
 2456 002a E054     		strb	r0, [r4, r3]
1244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State       = HAL_SPI_STATE_BUSY_TX;
 2457              		.loc 1 1244 0 is_stmt 1 discriminator 2
 2458 002c 1220     		mov	r0, #18
 2459 002e 5123     		mov	r3, #81
 2460 0030 E054     		strb	r0, [r4, r3]
1245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2461              		.loc 1 1245 0 discriminator 2
 2462 0032 0023     		mov	r3, #0
 2463 0034 6365     		str	r3, [r4, #84]
1247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pTxBuffPtr  = (uint8_t*)pData;
 2464              		.loc 1 1247 0 discriminator 2
 2465 0036 2163     		str	r1, [r4, #48]
ARM GAS  /tmp/cc1veDgB.s 			page 93


1248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferSize  = Size;
 2466              		.loc 1 1248 0 discriminator 2
 2467 0038 A286     		strh	r2, [r4, #52]
1249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferCount = Size;
 2468              		.loc 1 1249 0 discriminator 2
 2469 003a E286     		strh	r2, [r4, #54]
1252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxISR       = 0U;
 2470              		.loc 1 1252 0 discriminator 2
 2471 003c E364     		str	r3, [r4, #76]
1253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxISR       = 0U;
 2472              		.loc 1 1253 0 discriminator 2
 2473 003e A364     		str	r3, [r4, #72]
1255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pRxBuffPtr  = NULL;
 2474              		.loc 1 1255 0 discriminator 2
 2475 0040 A363     		str	r3, [r4, #56]
1256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferSize  = 0U;
 2476              		.loc 1 1256 0 discriminator 2
 2477 0042 A387     		strh	r3, [r4, #60]
1257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferCount = 0U;
 2478              		.loc 1 1257 0 discriminator 2
 2479 0044 E387     		strh	r3, [r4, #62]
1260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.Direction == SPI_DIRECTION_1LINE)
 2480              		.loc 1 1260 0 discriminator 2
 2481 0046 8023     		mov	r3, #128
 2482 0048 1B02     		lsl	r3, r3, #8
 2483 004a A168     		ldr	r1, [r4, #8]
 2484              	.LVL133:
 2485 004c 9942     		cmp	r1, r3
 2486 004e 05D1     		bne	.L172
1262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SPI_1LINE_TX(hspi);
 2487              		.loc 1 1262 0
 2488 0050 2368     		ldr	r3, [r4]
 2489 0052 1968     		ldr	r1, [r3]
 2490 0054 8022     		mov	r2, #128
 2491              	.LVL134:
 2492 0056 D201     		lsl	r2, r2, #7
 2493 0058 0A43     		orr	r2, r1
 2494 005a 1A60     		str	r2, [r3]
 2495              	.LVL135:
 2496              	.L172:
1266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 2497              		.loc 1 1266 0
 2498 005c 8023     		mov	r3, #128
 2499 005e 9B01     		lsl	r3, r3, #6
 2500 0060 A26A     		ldr	r2, [r4, #40]
 2501 0062 9A42     		cmp	r2, r3
 2502 0064 0AD1     		bne	.L173
1268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
 2503              		.loc 1 1268 0
 2504 0066 2368     		ldr	r3, [r4]
 2505 0068 1968     		ldr	r1, [r3]
 2506 006a 1D4A     		ldr	r2, .L176
 2507 006c 0A40     		and	r2, r1
 2508 006e 1A60     		str	r2, [r3]
 2509 0070 2368     		ldr	r3, [r4]
 2510 0072 1968     		ldr	r1, [r3]
 2511 0074 8022     		mov	r2, #128
ARM GAS  /tmp/cc1veDgB.s 			page 94


 2512 0076 9201     		lsl	r2, r2, #6
 2513 0078 0A43     		orr	r2, r1
 2514 007a 1A60     		str	r2, [r3]
 2515              	.L173:
1272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
 2516              		.loc 1 1272 0
 2517 007c 236C     		ldr	r3, [r4, #64]
 2518 007e 194A     		ldr	r2, .L176+4
 2519 0080 1A63     		str	r2, [r3, #48]
1275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
 2520              		.loc 1 1275 0
 2521 0082 236C     		ldr	r3, [r4, #64]
 2522 0084 184A     		ldr	r2, .L176+8
 2523 0086 DA62     		str	r2, [r3, #44]
1278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->hdmatx->XferErrorCallback = SPI_DMAError;
 2524              		.loc 1 1278 0
 2525 0088 236C     		ldr	r3, [r4, #64]
 2526 008a 184A     		ldr	r2, .L176+12
 2527 008c 5A63     		str	r2, [r3, #52]
1281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** 	hspi->hdmarx->XferHalfCpltCallback = (void (*)(DMA_HandleTypeDef *))NULL;
 2528              		.loc 1 1281 0
 2529 008e 636C     		ldr	r3, [r4, #68]
 2530 0090 0025     		mov	r5, #0
 2531 0092 1D63     		str	r5, [r3, #48]
1282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = (void (*)(DMA_HandleTypeDef *))NULL;
 2532              		.loc 1 1282 0
 2533 0094 636C     		ldr	r3, [r4, #68]
 2534 0096 DD62     		str	r5, [r3, #44]
1283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->hdmarx->XferErrorCallback    = (void (*)(DMA_HandleTypeDef *))NULL;
 2535              		.loc 1 1283 0
 2536 0098 636C     		ldr	r3, [r4, #68]
 2537 009a 5D63     		str	r5, [r3, #52]
1286:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR, hspi-
 2538              		.loc 1 1286 0
 2539 009c 2268     		ldr	r2, [r4]
 2540 009e 0C32     		add	r2, r2, #12
 2541 00a0 E38E     		ldrh	r3, [r4, #54]
 2542 00a2 9BB2     		uxth	r3, r3
 2543 00a4 206C     		ldr	r0, [r4, #64]
 2544 00a6 216B     		ldr	r1, [r4, #48]
 2545 00a8 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2546              	.LVL136:
1289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 2547              		.loc 1 1289 0
 2548 00ac 2368     		ldr	r3, [r4]
 2549 00ae 5968     		ldr	r1, [r3, #4]
 2550 00b0 0222     		mov	r2, #2
 2551 00b2 0A43     		orr	r2, r1
 2552 00b4 5A60     		str	r2, [r3, #4]
1292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 2553              		.loc 1 1292 0
 2554 00b6 5023     		mov	r3, #80
 2555 00b8 E554     		strb	r5, [r4, r3]
1295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((hspi->Instance->CR1 &SPI_CR1_SPE) != SPI_CR1_SPE)
 2556              		.loc 1 1295 0
 2557 00ba 2368     		ldr	r3, [r4]
 2558 00bc 1A68     		ldr	r2, [r3]
ARM GAS  /tmp/cc1veDgB.s 			page 95


 2559 00be 5106     		lsl	r1, r2, #25
 2560 00c0 0CD4     		bmi	.L175
1298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_ENABLE(hspi);
 2561              		.loc 1 1298 0
 2562 00c2 1968     		ldr	r1, [r3]
 2563 00c4 4022     		mov	r2, #64
 2564 00c6 0A43     		orr	r2, r1
 2565 00c8 1A60     		str	r2, [r3]
1301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_OK;
 2566              		.loc 1 1301 0
 2567 00ca 0020     		mov	r0, #0
 2568 00cc 07E0     		b	.L171
 2569              	.LVL137:
 2570              	.L168:
1306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 2571              		.loc 1 1306 0
 2572 00ce 0022     		mov	r2, #0
 2573              	.LVL138:
 2574 00d0 5023     		mov	r3, #80
 2575 00d2 C254     		strb	r2, [r0, r3]
1307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_BUSY;
 2576              		.loc 1 1307 0
 2577 00d4 0220     		mov	r0, #2
 2578              	.LVL139:
 2579 00d6 02E0     		b	.L171
 2580              	.LVL140:
 2581              	.L174:
1241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_LOCK(hspi);
 2582              		.loc 1 1241 0
 2583 00d8 0220     		mov	r0, #2
 2584              	.LVL141:
 2585 00da 00E0     		b	.L171
 2586              	.LVL142:
 2587              	.L175:
1301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_OK;
 2588              		.loc 1 1301 0
 2589 00dc 0020     		mov	r0, #0
 2590              	.L171:
1309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 2591              		.loc 1 1309 0
 2592              		@ sp needed
 2593              	.LVL143:
 2594 00de 38BD     		pop	{r3, r4, r5, pc}
 2595              	.L177:
 2596              		.align	2
 2597              	.L176:
 2598 00e0 FFDFFFFF 		.word	-8193
 2599 00e4 00000000 		.word	SPI_DMAHalfTransmitCplt
 2600 00e8 00000000 		.word	SPI_DMATransmitCplt
 2601 00ec 00000000 		.word	SPI_DMAError
 2602              		.cfi_endproc
 2603              	.LFE46:
 2605              		.section	.text.HAL_SPI_TransmitReceive_DMA,"ax",%progbits
 2606              		.align	2
 2607              		.global	HAL_SPI_TransmitReceive_DMA
 2608              		.code	16
 2609              		.thumb_func
ARM GAS  /tmp/cc1veDgB.s 			page 96


 2611              	HAL_SPI_TransmitReceive_DMA:
 2612              	.LFB48:
1421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 2613              		.loc 1 1421 0
 2614              		.cfi_startproc
 2615              	.LVL144:
 2616 0000 38B5     		push	{r3, r4, r5, lr}
 2617              	.LCFI14:
 2618              		.cfi_def_cfa_offset 16
 2619              		.cfi_offset 3, -16
 2620              		.cfi_offset 4, -12
 2621              		.cfi_offset 5, -8
 2622              		.cfi_offset 14, -4
 2623 0002 041C     		mov	r4, r0
1422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if((hspi->State == HAL_SPI_STATE_READY) || \
 2624              		.loc 1 1422 0
 2625 0004 5120     		mov	r0, #81
 2626              	.LVL145:
 2627 0006 205C     		ldrb	r0, [r4, r0]
 2628 0008 0128     		cmp	r0, #1
 2629 000a 0BD0     		beq	.L179
1422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if((hspi->State == HAL_SPI_STATE_READY) || \
 2630              		.loc 1 1422 0 is_stmt 0 discriminator 1
 2631 000c 8220     		mov	r0, #130
 2632 000e 4000     		lsl	r0, r0, #1
 2633 0010 6568     		ldr	r5, [r4, #4]
 2634 0012 8542     		cmp	r5, r0
 2635 0014 76D1     		bne	.L186
1423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****      ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hs
 2636              		.loc 1 1423 0 is_stmt 1
 2637 0016 A068     		ldr	r0, [r4, #8]
 2638 0018 0028     		cmp	r0, #0
 2639 001a 75D1     		bne	.L187
1423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****      ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hs
 2640              		.loc 1 1423 0 is_stmt 0 discriminator 1
 2641 001c 5120     		mov	r0, #81
 2642 001e 205C     		ldrb	r0, [r4, r0]
 2643 0020 2228     		cmp	r0, #34
 2644 0022 73D1     		bne	.L188
 2645              	.L179:
1425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((pTxData == NULL ) || (pRxData == NULL ) || (Size == 0U))
 2646              		.loc 1 1425 0 is_stmt 1
 2647 0024 0029     		cmp	r1, #0
 2648 0026 73D0     		beq	.L189
1425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((pTxData == NULL ) || (pRxData == NULL ) || (Size == 0U))
 2649              		.loc 1 1425 0 is_stmt 0 discriminator 1
 2650 0028 002A     		cmp	r2, #0
 2651 002a 73D0     		beq	.L190
 2652 002c 002B     		cmp	r3, #0
 2653 002e 73D0     		beq	.L191
1434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_LOCK(hspi);
 2654              		.loc 1 1434 0 is_stmt 1
 2655 0030 5020     		mov	r0, #80
 2656 0032 205C     		ldrb	r0, [r4, r0]
 2657 0034 0128     		cmp	r0, #1
 2658 0036 71D0     		beq	.L192
1434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_LOCK(hspi);
ARM GAS  /tmp/cc1veDgB.s 			page 97


 2659              		.loc 1 1434 0 is_stmt 0 discriminator 2
 2660 0038 0125     		mov	r5, #1
 2661 003a 5020     		mov	r0, #80
 2662 003c 2554     		strb	r5, [r4, r0]
1437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->State != HAL_SPI_STATE_BUSY_RX)
 2663              		.loc 1 1437 0 is_stmt 1 discriminator 2
 2664 003e 5120     		mov	r0, #81
 2665 0040 205C     		ldrb	r0, [r4, r0]
 2666 0042 2228     		cmp	r0, #34
 2667 0044 02D0     		beq	.L181
1439:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 2668              		.loc 1 1439 0
 2669 0046 3225     		mov	r5, #50
 2670 0048 5120     		mov	r0, #81
 2671 004a 2554     		strb	r5, [r4, r0]
 2672              	.L181:
1443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2673              		.loc 1 1443 0
 2674 004c 0020     		mov	r0, #0
 2675 004e 6065     		str	r0, [r4, #84]
1445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pTxBuffPtr  = (uint8_t*)pTxData;
 2676              		.loc 1 1445 0
 2677 0050 2163     		str	r1, [r4, #48]
1446:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferSize  = Size;
 2678              		.loc 1 1446 0
 2679 0052 A386     		strh	r3, [r4, #52]
1447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferCount = Size;
 2680              		.loc 1 1447 0
 2681 0054 E386     		strh	r3, [r4, #54]
1449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pRxBuffPtr  = (uint8_t*)pRxData;
 2682              		.loc 1 1449 0
 2683 0056 A263     		str	r2, [r4, #56]
1450:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferSize  = Size;
 2684              		.loc 1 1450 0
 2685 0058 A387     		strh	r3, [r4, #60]
1451:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferCount = Size;
 2686              		.loc 1 1451 0
 2687 005a E387     		strh	r3, [r4, #62]
1454:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxISR = 0U;
 2688              		.loc 1 1454 0
 2689 005c A064     		str	r0, [r4, #72]
1455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxISR = 0U;
 2690              		.loc 1 1455 0
 2691 005e E064     		str	r0, [r4, #76]
1458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 2692              		.loc 1 1458 0
 2693 0060 8023     		mov	r3, #128
 2694              	.LVL146:
 2695 0062 9B01     		lsl	r3, r3, #6
 2696 0064 A16A     		ldr	r1, [r4, #40]
 2697              	.LVL147:
 2698 0066 9942     		cmp	r1, r3
 2699 0068 0AD1     		bne	.L182
1460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
 2700              		.loc 1 1460 0
 2701 006a 2368     		ldr	r3, [r4]
 2702 006c 1968     		ldr	r1, [r3]
ARM GAS  /tmp/cc1veDgB.s 			page 98


 2703 006e 2C4A     		ldr	r2, .L193
 2704              	.LVL148:
 2705 0070 0A40     		and	r2, r1
 2706 0072 1A60     		str	r2, [r3]
 2707              	.LVL149:
 2708 0074 2368     		ldr	r3, [r4]
 2709 0076 1968     		ldr	r1, [r3]
 2710 0078 8022     		mov	r2, #128
 2711 007a 9201     		lsl	r2, r2, #6
 2712 007c 0A43     		orr	r2, r1
 2713 007e 1A60     		str	r2, [r3]
 2714              	.L182:
1464:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->State == HAL_SPI_STATE_BUSY_RX)
 2715              		.loc 1 1464 0
 2716 0080 5123     		mov	r3, #81
 2717 0082 E35C     		ldrb	r3, [r4, r3]
 2718 0084 222B     		cmp	r3, #34
 2719 0086 06D1     		bne	.L183
1467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
 2720              		.loc 1 1467 0
 2721 0088 636C     		ldr	r3, [r4, #68]
 2722 008a 264A     		ldr	r2, .L193+4
 2723 008c 1A63     		str	r2, [r3, #48]
1469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->hdmarx->XferCpltCallback = SPI_DMAReceiveCplt;
 2724              		.loc 1 1469 0
 2725 008e 636C     		ldr	r3, [r4, #68]
 2726 0090 254A     		ldr	r2, .L193+8
 2727 0092 DA62     		str	r2, [r3, #44]
 2728 0094 05E0     		b	.L184
 2729              	.L183:
1474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfTransmitReceiveCplt;
 2730              		.loc 1 1474 0
 2731 0096 636C     		ldr	r3, [r4, #68]
 2732 0098 244A     		ldr	r2, .L193+12
 2733 009a 1A63     		str	r2, [r3, #48]
1476:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->hdmarx->XferCpltCallback = SPI_DMATransmitReceiveCplt;
 2734              		.loc 1 1476 0
 2735 009c 636C     		ldr	r3, [r4, #68]
 2736 009e 244A     		ldr	r2, .L193+16
 2737 00a0 DA62     		str	r2, [r3, #44]
 2738              	.L184:
1480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->hdmarx->XferErrorCallback = SPI_DMAError;
 2739              		.loc 1 1480 0
 2740 00a2 636C     		ldr	r3, [r4, #68]
 2741 00a4 234D     		ldr	r5, .L193+20
 2742 00a6 5D63     		str	r5, [r3, #52]
1483:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBuffPtr, hspi-
 2743              		.loc 1 1483 0
 2744 00a8 2168     		ldr	r1, [r4]
 2745 00aa 0C31     		add	r1, r1, #12
 2746 00ac E38F     		ldrh	r3, [r4, #62]
 2747 00ae 9BB2     		uxth	r3, r3
 2748 00b0 606C     		ldr	r0, [r4, #68]
 2749 00b2 A26B     		ldr	r2, [r4, #56]
 2750 00b4 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2751              	.LVL150:
1486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
ARM GAS  /tmp/cc1veDgB.s 			page 99


 2752              		.loc 1 1486 0
 2753 00b8 2368     		ldr	r3, [r4]
 2754 00ba 5968     		ldr	r1, [r3, #4]
 2755 00bc 0122     		mov	r2, #1
 2756 00be 0A43     		orr	r2, r1
 2757 00c0 5A60     		str	r2, [r3, #4]
1490:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->hdmatx->XferHalfCpltCallback = (void (*)(DMA_HandleTypeDef *))NULL;
 2758              		.loc 1 1490 0
 2759 00c2 226C     		ldr	r2, [r4, #64]
 2760 00c4 0023     		mov	r3, #0
 2761 00c6 1363     		str	r3, [r2, #48]
1491:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->hdmatx->XferCpltCallback     = (void (*)(DMA_HandleTypeDef *))NULL;
 2762              		.loc 1 1491 0
 2763 00c8 226C     		ldr	r2, [r4, #64]
 2764 00ca D362     		str	r3, [r2, #44]
1494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->hdmatx->XferErrorCallback    = SPI_DMAError;
 2765              		.loc 1 1494 0
 2766 00cc 236C     		ldr	r3, [r4, #64]
 2767 00ce 5D63     		str	r5, [r3, #52]
1497:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR, hspi-
 2768              		.loc 1 1497 0
 2769 00d0 2268     		ldr	r2, [r4]
 2770 00d2 0C32     		add	r2, r2, #12
 2771 00d4 E38E     		ldrh	r3, [r4, #54]
 2772 00d6 9BB2     		uxth	r3, r3
 2773 00d8 206C     		ldr	r0, [r4, #64]
 2774 00da 216B     		ldr	r1, [r4, #48]
 2775 00dc FFF7FEFF 		bl	HAL_DMA_Start_IT
 2776              	.LVL151:
1500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 2777              		.loc 1 1500 0
 2778 00e0 2368     		ldr	r3, [r4]
 2779 00e2 1A68     		ldr	r2, [r3]
 2780 00e4 5506     		lsl	r5, r2, #25
 2781 00e6 03D4     		bmi	.L185
1503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_ENABLE(hspi);
 2782              		.loc 1 1503 0
 2783 00e8 1968     		ldr	r1, [r3]
 2784 00ea 4022     		mov	r2, #64
 2785 00ec 0A43     		orr	r2, r1
 2786 00ee 1A60     		str	r2, [r3]
 2787              	.L185:
1507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 2788              		.loc 1 1507 0
 2789 00f0 2368     		ldr	r3, [r4]
 2790 00f2 5968     		ldr	r1, [r3, #4]
 2791 00f4 0222     		mov	r2, #2
 2792 00f6 0A43     		orr	r2, r1
 2793 00f8 5A60     		str	r2, [r3, #4]
1510:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 2794              		.loc 1 1510 0
 2795 00fa 0022     		mov	r2, #0
 2796 00fc 5023     		mov	r3, #80
 2797 00fe E254     		strb	r2, [r4, r3]
1512:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_OK;
 2798              		.loc 1 1512 0
 2799 0100 0020     		mov	r0, #0
ARM GAS  /tmp/cc1veDgB.s 			page 100


 2800 0102 0CE0     		b	.L180
 2801              	.LVL152:
 2802              	.L186:
1516:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_BUSY;
 2803              		.loc 1 1516 0
 2804 0104 0220     		mov	r0, #2
 2805 0106 0AE0     		b	.L180
 2806              	.L187:
 2807 0108 0220     		mov	r0, #2
 2808 010a 08E0     		b	.L180
 2809              	.L188:
 2810 010c 0220     		mov	r0, #2
 2811 010e 06E0     		b	.L180
 2812              	.L189:
1427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return  HAL_ERROR;
 2813              		.loc 1 1427 0
 2814 0110 0120     		mov	r0, #1
 2815 0112 04E0     		b	.L180
 2816              	.L190:
 2817 0114 0120     		mov	r0, #1
 2818 0116 02E0     		b	.L180
 2819              	.L191:
 2820 0118 0120     		mov	r0, #1
 2821 011a 00E0     		b	.L180
 2822              	.L192:
1434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_LOCK(hspi);
 2823              		.loc 1 1434 0
 2824 011c 0220     		mov	r0, #2
 2825              	.LVL153:
 2826              	.L180:
1518:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 2827              		.loc 1 1518 0
 2828              		@ sp needed
 2829              	.LVL154:
 2830 011e 38BD     		pop	{r3, r4, r5, pc}
 2831              	.L194:
 2832              		.align	2
 2833              	.L193:
 2834 0120 FFDFFFFF 		.word	-8193
 2835 0124 00000000 		.word	SPI_DMAHalfReceiveCplt
 2836 0128 00000000 		.word	SPI_DMAReceiveCplt
 2837 012c 00000000 		.word	SPI_DMAHalfTransmitReceiveCplt
 2838 0130 00000000 		.word	SPI_DMATransmitReceiveCplt
 2839 0134 00000000 		.word	SPI_DMAError
 2840              		.cfi_endproc
 2841              	.LFE48:
 2843              		.section	.text.HAL_SPI_Receive_DMA,"ax",%progbits
 2844              		.align	2
 2845              		.global	HAL_SPI_Receive_DMA
 2846              		.code	16
 2847              		.thumb_func
 2849              	HAL_SPI_Receive_DMA:
 2850              	.LFB47:
1321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 2851              		.loc 1 1321 0
 2852              		.cfi_startproc
 2853              	.LVL155:
ARM GAS  /tmp/cc1veDgB.s 			page 101


 2854 0000 38B5     		push	{r3, r4, r5, lr}
 2855              	.LCFI15:
 2856              		.cfi_def_cfa_offset 16
 2857              		.cfi_offset 3, -16
 2858              		.cfi_offset 4, -12
 2859              		.cfi_offset 5, -8
 2860              		.cfi_offset 14, -4
 2861 0002 041C     		mov	r4, r0
 2862 0004 0D1C     		mov	r5, r1
 2863 0006 131C     		mov	r3, r2
1322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(hspi->State == HAL_SPI_STATE_READY)
 2864              		.loc 1 1322 0
 2865 0008 5120     		mov	r0, #81
 2866              	.LVL156:
 2867 000a 205C     		ldrb	r0, [r4, r0]
 2868 000c 0128     		cmp	r0, #1
 2869 000e 70D1     		bne	.L196
1324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((pData == NULL) || (Size == 0U))
 2870              		.loc 1 1324 0
 2871 0010 0029     		cmp	r1, #0
 2872 0012 01D0     		beq	.L197
1324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((pData == NULL) || (Size == 0U))
 2873              		.loc 1 1324 0 is_stmt 0 discriminator 1
 2874 0014 002A     		cmp	r2, #0
 2875 0016 04D1     		bne	.L198
 2876              	.L197:
1327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_UNLOCK(hspi);
 2877              		.loc 1 1327 0 is_stmt 1
 2878 0018 0022     		mov	r2, #0
 2879              	.LVL157:
 2880 001a 5023     		mov	r3, #80
 2881 001c E254     		strb	r2, [r4, r3]
1328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return  HAL_ERROR;
 2882              		.loc 1 1328 0
 2883 001e 0120     		mov	r0, #1
 2884 0020 6FE0     		b	.L199
 2885              	.LVL158:
 2886              	.L198:
1332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_LOCK(hspi);
 2887              		.loc 1 1332 0
 2888 0022 5022     		mov	r2, #80
 2889              	.LVL159:
 2890 0024 A25C     		ldrb	r2, [r4, r2]
 2891 0026 012A     		cmp	r2, #1
 2892 0028 68D0     		beq	.L203
1332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_LOCK(hspi);
 2893              		.loc 1 1332 0 is_stmt 0 discriminator 2
 2894 002a 0121     		mov	r1, #1
 2895              	.LVL160:
 2896 002c 5022     		mov	r2, #80
 2897 002e A154     		strb	r1, [r4, r2]
1335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State       = HAL_SPI_STATE_BUSY_RX;
 2898              		.loc 1 1335 0 is_stmt 1 discriminator 2
 2899 0030 2221     		mov	r1, #34
 2900 0032 5122     		mov	r2, #81
 2901 0034 A154     		strb	r1, [r4, r2]
1336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
ARM GAS  /tmp/cc1veDgB.s 			page 102


 2902              		.loc 1 1336 0 discriminator 2
 2903 0036 0022     		mov	r2, #0
 2904 0038 6265     		str	r2, [r4, #84]
1338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pRxBuffPtr  = (uint8_t*)pData;
 2905              		.loc 1 1338 0 discriminator 2
 2906 003a A563     		str	r5, [r4, #56]
1339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferSize  = Size;
 2907              		.loc 1 1339 0 discriminator 2
 2908 003c A387     		strh	r3, [r4, #60]
1340:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferCount = Size;
 2909              		.loc 1 1340 0 discriminator 2
 2910 003e E387     		strh	r3, [r4, #62]
1343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxISR       = 0U;
 2911              		.loc 1 1343 0 discriminator 2
 2912 0040 A264     		str	r2, [r4, #72]
1344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxISR       = 0U;
 2913              		.loc 1 1344 0 discriminator 2
 2914 0042 E264     		str	r2, [r4, #76]
1346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pTxBuffPtr  = NULL;
 2915              		.loc 1 1346 0 discriminator 2
 2916 0044 2263     		str	r2, [r4, #48]
1347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferSize  = 0U;
 2917              		.loc 1 1347 0 discriminator 2
 2918 0046 A286     		strh	r2, [r4, #52]
1348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferCount = 0U;
 2919              		.loc 1 1348 0 discriminator 2
 2920 0048 E286     		strh	r2, [r4, #54]
1351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.Direction == SPI_DIRECTION_1LINE)
 2921              		.loc 1 1351 0 discriminator 2
 2922 004a A268     		ldr	r2, [r4, #8]
 2923 004c 8021     		mov	r1, #128
 2924 004e 0902     		lsl	r1, r1, #8
 2925 0050 8A42     		cmp	r2, r1
 2926 0052 05D1     		bne	.L200
1353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SPI_1LINE_RX(hspi);
 2927              		.loc 1 1353 0
 2928 0054 2368     		ldr	r3, [r4]
 2929 0056 1968     		ldr	r1, [r3]
 2930 0058 2A4A     		ldr	r2, .L205
 2931 005a 0A40     		and	r2, r1
 2932 005c 1A60     		str	r2, [r3]
 2933 005e 0FE0     		b	.L201
 2934              	.L200:
1355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     else if((hspi->Init.Direction == SPI_DIRECTION_2LINES)&&(hspi->Init.Mode == SPI_MODE_MASTER))
 2935              		.loc 1 1355 0
 2936 0060 002A     		cmp	r2, #0
 2937 0062 0DD1     		bne	.L201
1355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     else if((hspi->Init.Direction == SPI_DIRECTION_2LINES)&&(hspi->Init.Mode == SPI_MODE_MASTER))
 2938              		.loc 1 1355 0 is_stmt 0 discriminator 1
 2939 0064 8222     		mov	r2, #130
 2940 0066 5200     		lsl	r2, r2, #1
 2941 0068 6168     		ldr	r1, [r4, #4]
 2942 006a 9142     		cmp	r1, r2
 2943 006c 08D1     		bne	.L201
1358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_UNLOCK(hspi);
 2944              		.loc 1 1358 0 is_stmt 1
 2945 006e 0021     		mov	r1, #0
ARM GAS  /tmp/cc1veDgB.s 			page 103


 2946 0070 5022     		mov	r2, #80
 2947 0072 A154     		strb	r1, [r4, r2]
1361:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       return HAL_SPI_TransmitReceive_DMA(hspi, pData, pData, Size);
 2948              		.loc 1 1361 0
 2949 0074 201C     		mov	r0, r4
 2950 0076 291C     		mov	r1, r5
 2951 0078 2A1C     		mov	r2, r5
 2952 007a FFF7FEFF 		bl	HAL_SPI_TransmitReceive_DMA
 2953              	.LVL161:
 2954 007e 40E0     		b	.L199
 2955              	.L201:
1365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 2956              		.loc 1 1365 0
 2957 0080 8023     		mov	r3, #128
 2958 0082 9B01     		lsl	r3, r3, #6
 2959 0084 A26A     		ldr	r2, [r4, #40]
 2960 0086 9A42     		cmp	r2, r3
 2961 0088 0AD1     		bne	.L202
1367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
 2962              		.loc 1 1367 0
 2963 008a 2368     		ldr	r3, [r4]
 2964 008c 1968     		ldr	r1, [r3]
 2965 008e 1E4A     		ldr	r2, .L205+4
 2966 0090 0A40     		and	r2, r1
 2967 0092 1A60     		str	r2, [r3]
 2968 0094 2368     		ldr	r3, [r4]
 2969 0096 1968     		ldr	r1, [r3]
 2970 0098 8022     		mov	r2, #128
 2971 009a 9201     		lsl	r2, r2, #6
 2972 009c 0A43     		orr	r2, r1
 2973 009e 1A60     		str	r2, [r3]
 2974              	.L202:
1371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
 2975              		.loc 1 1371 0
 2976 00a0 636C     		ldr	r3, [r4, #68]
 2977 00a2 1A4A     		ldr	r2, .L205+8
 2978 00a4 1A63     		str	r2, [r3, #48]
1374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback = SPI_DMAReceiveCplt;
 2979              		.loc 1 1374 0
 2980 00a6 636C     		ldr	r3, [r4, #68]
 2981 00a8 194A     		ldr	r2, .L205+12
 2982 00aa DA62     		str	r2, [r3, #44]
1377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->hdmarx->XferErrorCallback = SPI_DMAError;
 2983              		.loc 1 1377 0
 2984 00ac 636C     		ldr	r3, [r4, #68]
 2985 00ae 194A     		ldr	r2, .L205+16
 2986 00b0 5A63     		str	r2, [r3, #52]
1380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->hdmatx->XferHalfCpltCallback = (void (*)(DMA_HandleTypeDef *))NULL;
 2987              		.loc 1 1380 0
 2988 00b2 236C     		ldr	r3, [r4, #64]
 2989 00b4 0025     		mov	r5, #0
 2990              	.LVL162:
 2991 00b6 1D63     		str	r5, [r3, #48]
1381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->hdmatx->XferCpltCallback     = (void (*)(DMA_HandleTypeDef *))NULL;
 2992              		.loc 1 1381 0
 2993 00b8 236C     		ldr	r3, [r4, #64]
 2994 00ba DD62     		str	r5, [r3, #44]
ARM GAS  /tmp/cc1veDgB.s 			page 104


1382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->hdmatx->XferErrorCallback    = (void (*)(DMA_HandleTypeDef *))NULL;
 2995              		.loc 1 1382 0
 2996 00bc 236C     		ldr	r3, [r4, #64]
 2997 00be 5D63     		str	r5, [r3, #52]
1385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBuffPtr, hspi-
 2998              		.loc 1 1385 0
 2999 00c0 2168     		ldr	r1, [r4]
 3000 00c2 0C31     		add	r1, r1, #12
 3001 00c4 E38F     		ldrh	r3, [r4, #62]
 3002 00c6 9BB2     		uxth	r3, r3
 3003 00c8 606C     		ldr	r0, [r4, #68]
 3004 00ca A26B     		ldr	r2, [r4, #56]
 3005 00cc FFF7FEFF 		bl	HAL_DMA_Start_IT
 3006              	.LVL163:
1388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
 3007              		.loc 1 1388 0
 3008 00d0 2368     		ldr	r3, [r4]
 3009 00d2 5968     		ldr	r1, [r3, #4]
 3010 00d4 0122     		mov	r2, #1
 3011 00d6 0A43     		orr	r2, r1
 3012 00d8 5A60     		str	r2, [r3, #4]
1391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 3013              		.loc 1 1391 0
 3014 00da 5023     		mov	r3, #80
 3015 00dc E554     		strb	r5, [r4, r3]
1394:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((hspi->Instance->CR1 &SPI_CR1_SPE) != SPI_CR1_SPE)
 3016              		.loc 1 1394 0
 3017 00de 2368     		ldr	r3, [r4]
 3018 00e0 1A68     		ldr	r2, [r3]
 3019 00e2 5106     		lsl	r1, r2, #25
 3020 00e4 0CD4     		bmi	.L204
1397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_ENABLE(hspi);
 3021              		.loc 1 1397 0
 3022 00e6 1968     		ldr	r1, [r3]
 3023 00e8 4022     		mov	r2, #64
 3024 00ea 0A43     		orr	r2, r1
 3025 00ec 1A60     		str	r2, [r3]
1400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_OK;
 3026              		.loc 1 1400 0
 3027 00ee 0020     		mov	r0, #0
 3028 00f0 07E0     		b	.L199
 3029              	.LVL164:
 3030              	.L196:
1405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 3031              		.loc 1 1405 0
 3032 00f2 0022     		mov	r2, #0
 3033              	.LVL165:
 3034 00f4 5023     		mov	r3, #80
 3035 00f6 E254     		strb	r2, [r4, r3]
1406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_BUSY;
 3036              		.loc 1 1406 0
 3037 00f8 0220     		mov	r0, #2
 3038 00fa 02E0     		b	.L199
 3039              	.L203:
1332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_LOCK(hspi);
 3040              		.loc 1 1332 0
 3041 00fc 0220     		mov	r0, #2
ARM GAS  /tmp/cc1veDgB.s 			page 105


 3042 00fe 00E0     		b	.L199
 3043              	.LVL166:
 3044              	.L204:
1400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return HAL_OK;
 3045              		.loc 1 1400 0
 3046 0100 0020     		mov	r0, #0
 3047              	.L199:
1408:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 3048              		.loc 1 1408 0
 3049              		@ sp needed
 3050              	.LVL167:
 3051 0102 38BD     		pop	{r3, r4, r5, pc}
 3052              	.L206:
 3053              		.align	2
 3054              	.L205:
 3055 0104 FFBFFFFF 		.word	-16385
 3056 0108 FFDFFFFF 		.word	-8193
 3057 010c 00000000 		.word	SPI_DMAHalfReceiveCplt
 3058 0110 00000000 		.word	SPI_DMAReceiveCplt
 3059 0114 00000000 		.word	SPI_DMAError
 3060              		.cfi_endproc
 3061              	.LFE47:
 3063              		.section	.text.HAL_SPI_DMAPause,"ax",%progbits
 3064              		.align	2
 3065              		.global	HAL_SPI_DMAPause
 3066              		.code	16
 3067              		.thumb_func
 3069              	HAL_SPI_DMAPause:
 3070              	.LFB49:
1528:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 3071              		.loc 1 1528 0
 3072              		.cfi_startproc
 3073              	.LVL168:
 3074 0000 30B5     		push	{r4, r5, lr}
 3075              	.LCFI16:
 3076              		.cfi_def_cfa_offset 12
 3077              		.cfi_offset 4, -12
 3078              		.cfi_offset 5, -8
 3079              		.cfi_offset 14, -4
1530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_LOCK(hspi);
 3080              		.loc 1 1530 0
 3081 0002 5023     		mov	r3, #80
 3082 0004 C35C     		ldrb	r3, [r0, r3]
 3083 0006 012B     		cmp	r3, #1
 3084 0008 0FD0     		beq	.L209
1530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_LOCK(hspi);
 3085              		.loc 1 1530 0 is_stmt 0 discriminator 2
 3086 000a 5023     		mov	r3, #80
 3087 000c 0121     		mov	r1, #1
 3088 000e C154     		strb	r1, [r0, r3]
1533:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 3089              		.loc 1 1533 0 is_stmt 1 discriminator 2
 3090 0010 0268     		ldr	r2, [r0]
 3091 0012 5468     		ldr	r4, [r2, #4]
 3092 0014 0225     		mov	r5, #2
 3093 0016 AC43     		bic	r4, r5
 3094 0018 5460     		str	r4, [r2, #4]
ARM GAS  /tmp/cc1veDgB.s 			page 106


1534:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
 3095              		.loc 1 1534 0 discriminator 2
 3096 001a 0268     		ldr	r2, [r0]
 3097 001c 5468     		ldr	r4, [r2, #4]
 3098 001e 8C43     		bic	r4, r1
 3099 0020 5460     		str	r4, [r2, #4]
1537:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 3100              		.loc 1 1537 0 discriminator 2
 3101 0022 0022     		mov	r2, #0
 3102 0024 C254     		strb	r2, [r0, r3]
1539:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return HAL_OK; 
 3103              		.loc 1 1539 0 discriminator 2
 3104 0026 0020     		mov	r0, #0
 3105              	.LVL169:
 3106 0028 00E0     		b	.L208
 3107              	.LVL170:
 3108              	.L209:
1530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_LOCK(hspi);
 3109              		.loc 1 1530 0
 3110 002a 0220     		mov	r0, #2
 3111              	.LVL171:
 3112              	.L208:
1540:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 3113              		.loc 1 1540 0
 3114              		@ sp needed
 3115 002c 30BD     		pop	{r4, r5, pc}
 3116              		.cfi_endproc
 3117              	.LFE49:
 3119 002e C046     		.section	.text.HAL_SPI_DMAResume,"ax",%progbits
 3120              		.align	2
 3121              		.global	HAL_SPI_DMAResume
 3122              		.code	16
 3123              		.thumb_func
 3125              	HAL_SPI_DMAResume:
 3126              	.LFB50:
1549:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 3127              		.loc 1 1549 0
 3128              		.cfi_startproc
 3129              	.LVL172:
 3130 0000 30B5     		push	{r4, r5, lr}
 3131              	.LCFI17:
 3132              		.cfi_def_cfa_offset 12
 3133              		.cfi_offset 4, -12
 3134              		.cfi_offset 5, -8
 3135              		.cfi_offset 14, -4
1551:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_LOCK(hspi);
 3136              		.loc 1 1551 0
 3137 0002 5023     		mov	r3, #80
 3138 0004 C35C     		ldrb	r3, [r0, r3]
 3139 0006 012B     		cmp	r3, #1
 3140 0008 0FD0     		beq	.L212
1551:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_LOCK(hspi);
 3141              		.loc 1 1551 0 is_stmt 0 discriminator 2
 3142 000a 5023     		mov	r3, #80
 3143 000c 0121     		mov	r1, #1
 3144 000e C154     		strb	r1, [r0, r3]
1554:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
ARM GAS  /tmp/cc1veDgB.s 			page 107


 3145              		.loc 1 1554 0 is_stmt 1 discriminator 2
 3146 0010 0268     		ldr	r2, [r0]
 3147 0012 5568     		ldr	r5, [r2, #4]
 3148 0014 0224     		mov	r4, #2
 3149 0016 2C43     		orr	r4, r5
 3150 0018 5460     		str	r4, [r2, #4]
1555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
 3151              		.loc 1 1555 0 discriminator 2
 3152 001a 0268     		ldr	r2, [r0]
 3153 001c 5468     		ldr	r4, [r2, #4]
 3154 001e 2143     		orr	r1, r4
 3155 0020 5160     		str	r1, [r2, #4]
1558:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 3156              		.loc 1 1558 0 discriminator 2
 3157 0022 0022     		mov	r2, #0
 3158 0024 C254     		strb	r2, [r0, r3]
1560:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return HAL_OK;
 3159              		.loc 1 1560 0 discriminator 2
 3160 0026 0020     		mov	r0, #0
 3161              	.LVL173:
 3162 0028 00E0     		b	.L211
 3163              	.LVL174:
 3164              	.L212:
1551:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_LOCK(hspi);
 3165              		.loc 1 1551 0
 3166 002a 0220     		mov	r0, #2
 3167              	.LVL175:
 3168              	.L211:
1561:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 3169              		.loc 1 1561 0
 3170              		@ sp needed
 3171 002c 30BD     		pop	{r4, r5, pc}
 3172              		.cfi_endproc
 3173              	.LFE50:
 3175 002e C046     		.section	.text.HAL_SPI_DMAStop,"ax",%progbits
 3176              		.align	2
 3177              		.global	HAL_SPI_DMAStop
 3178              		.code	16
 3179              		.thumb_func
 3181              	HAL_SPI_DMAStop:
 3182              	.LFB51:
1570:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 3183              		.loc 1 1570 0
 3184              		.cfi_startproc
 3185              	.LVL176:
 3186 0000 10B5     		push	{r4, lr}
 3187              	.LCFI18:
 3188              		.cfi_def_cfa_offset 8
 3189              		.cfi_offset 4, -8
 3190              		.cfi_offset 14, -4
 3191 0002 041C     		mov	r4, r0
1578:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(hspi->hdmatx != NULL)
 3192              		.loc 1 1578 0
 3193 0004 006C     		ldr	r0, [r0, #64]
 3194              	.LVL177:
 3195 0006 0028     		cmp	r0, #0
 3196 0008 01D0     		beq	.L214
ARM GAS  /tmp/cc1veDgB.s 			page 108


1580:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     HAL_DMA_Abort(hspi->hdmatx);
 3197              		.loc 1 1580 0
 3198 000a FFF7FEFF 		bl	HAL_DMA_Abort
 3199              	.LVL178:
 3200              	.L214:
1583:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(hspi->hdmarx != NULL)
 3201              		.loc 1 1583 0
 3202 000e 606C     		ldr	r0, [r4, #68]
 3203 0010 0028     		cmp	r0, #0
 3204 0012 01D0     		beq	.L215
1585:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     HAL_DMA_Abort(hspi->hdmarx);
 3205              		.loc 1 1585 0
 3206 0014 FFF7FEFF 		bl	HAL_DMA_Abort
 3207              	.LVL179:
 3208              	.L215:
1589:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 3209              		.loc 1 1589 0
 3210 0018 2368     		ldr	r3, [r4]
 3211 001a 5A68     		ldr	r2, [r3, #4]
 3212 001c 0221     		mov	r1, #2
 3213 001e 8A43     		bic	r2, r1
 3214 0020 5A60     		str	r2, [r3, #4]
1590:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
 3215              		.loc 1 1590 0
 3216 0022 2268     		ldr	r2, [r4]
 3217 0024 5168     		ldr	r1, [r2, #4]
 3218 0026 0123     		mov	r3, #1
 3219 0028 9943     		bic	r1, r3
 3220 002a 5160     		str	r1, [r2, #4]
1592:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 3221              		.loc 1 1592 0
 3222 002c 5122     		mov	r2, #81
 3223 002e A354     		strb	r3, [r4, r2]
1595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 3224              		.loc 1 1595 0
 3225 0030 0020     		mov	r0, #0
 3226              		@ sp needed
 3227              	.LVL180:
 3228 0032 10BD     		pop	{r4, pc}
 3229              		.cfi_endproc
 3230              	.LFE51:
 3232              		.section	.text.HAL_SPI_TxCpltCallback,"ax",%progbits
 3233              		.align	2
 3234              		.weak	HAL_SPI_TxCpltCallback
 3235              		.code	16
 3236              		.thumb_func
 3238              	HAL_SPI_TxCpltCallback:
 3239              	.LFB53:
1668:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 3240              		.loc 1 1668 0
 3241              		.cfi_startproc
 3242              	.LVL181:
1675:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 3243              		.loc 1 1675 0
 3244              		@ sp needed
 3245 0000 7047     		bx	lr
 3246              		.cfi_endproc
ARM GAS  /tmp/cc1veDgB.s 			page 109


 3247              	.LFE53:
 3249 0002 C046     		.section	.text.HAL_SPI_RxCpltCallback,"ax",%progbits
 3250              		.align	2
 3251              		.weak	HAL_SPI_RxCpltCallback
 3252              		.code	16
 3253              		.thumb_func
 3255              	HAL_SPI_RxCpltCallback:
 3256              	.LFB54:
1684:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 3257              		.loc 1 1684 0
 3258              		.cfi_startproc
 3259              	.LVL182:
1691:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 3260              		.loc 1 1691 0
 3261              		@ sp needed
 3262 0000 7047     		bx	lr
 3263              		.cfi_endproc
 3264              	.LFE54:
 3266 0002 C046     		.section	.text.HAL_SPI_TxRxCpltCallback,"ax",%progbits
 3267              		.align	2
 3268              		.weak	HAL_SPI_TxRxCpltCallback
 3269              		.code	16
 3270              		.thumb_func
 3272              	HAL_SPI_TxRxCpltCallback:
 3273              	.LFB55:
1700:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 3274              		.loc 1 1700 0
 3275              		.cfi_startproc
 3276              	.LVL183:
1707:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 3277              		.loc 1 1707 0
 3278              		@ sp needed
 3279 0000 7047     		bx	lr
 3280              		.cfi_endproc
 3281              	.LFE55:
 3283 0002 C046     		.section	.text.HAL_SPI_TxHalfCpltCallback,"ax",%progbits
 3284              		.align	2
 3285              		.weak	HAL_SPI_TxHalfCpltCallback
 3286              		.code	16
 3287              		.thumb_func
 3289              	HAL_SPI_TxHalfCpltCallback:
 3290              	.LFB56:
1716:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 3291              		.loc 1 1716 0
 3292              		.cfi_startproc
 3293              	.LVL184:
1723:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 3294              		.loc 1 1723 0
 3295              		@ sp needed
 3296 0000 7047     		bx	lr
 3297              		.cfi_endproc
 3298              	.LFE56:
 3300 0002 C046     		.section	.text.SPI_DMAHalfTransmitCplt,"ax",%progbits
 3301              		.align	2
 3302              		.code	16
 3303              		.thumb_func
 3305              	SPI_DMAHalfTransmitCplt:
ARM GAS  /tmp/cc1veDgB.s 			page 110


 3306              	.LFB70:
2271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 3307              		.loc 1 2271 0
 3308              		.cfi_startproc
 3309              	.LVL185:
 3310 0000 08B5     		push	{r3, lr}
 3311              	.LCFI19:
 3312              		.cfi_def_cfa_offset 8
 3313              		.cfi_offset 3, -8
 3314              		.cfi_offset 14, -4
2272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = ( SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3315              		.loc 1 2272 0
 3316 0002 806A     		ldr	r0, [r0, #40]
 3317              	.LVL186:
2274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_SPI_TxHalfCpltCallback(hspi);
 3318              		.loc 1 2274 0
 3319 0004 FFF7FEFF 		bl	HAL_SPI_TxHalfCpltCallback
 3320              	.LVL187:
2275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 3321              		.loc 1 2275 0
 3322              		@ sp needed
 3323 0008 08BD     		pop	{r3, pc}
 3324              		.cfi_endproc
 3325              	.LFE70:
 3327 000a C046     		.section	.text.HAL_SPI_RxHalfCpltCallback,"ax",%progbits
 3328              		.align	2
 3329              		.weak	HAL_SPI_RxHalfCpltCallback
 3330              		.code	16
 3331              		.thumb_func
 3333              	HAL_SPI_RxHalfCpltCallback:
 3334              	.LFB57:
1732:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 3335              		.loc 1 1732 0
 3336              		.cfi_startproc
 3337              	.LVL188:
1739:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 3338              		.loc 1 1739 0
 3339              		@ sp needed
 3340 0000 7047     		bx	lr
 3341              		.cfi_endproc
 3342              	.LFE57:
 3344 0002 C046     		.section	.text.SPI_DMAHalfReceiveCplt,"ax",%progbits
 3345              		.align	2
 3346              		.code	16
 3347              		.thumb_func
 3349              	SPI_DMAHalfReceiveCplt:
 3350              	.LFB71:
2284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 3351              		.loc 1 2284 0
 3352              		.cfi_startproc
 3353              	.LVL189:
 3354 0000 08B5     		push	{r3, lr}
 3355              	.LCFI20:
 3356              		.cfi_def_cfa_offset 8
 3357              		.cfi_offset 3, -8
 3358              		.cfi_offset 14, -4
2285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = ( SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
ARM GAS  /tmp/cc1veDgB.s 			page 111


 3359              		.loc 1 2285 0
 3360 0002 806A     		ldr	r0, [r0, #40]
 3361              	.LVL190:
2287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_SPI_RxHalfCpltCallback(hspi);
 3362              		.loc 1 2287 0
 3363 0004 FFF7FEFF 		bl	HAL_SPI_RxHalfCpltCallback
 3364              	.LVL191:
2288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 3365              		.loc 1 2288 0
 3366              		@ sp needed
 3367 0008 08BD     		pop	{r3, pc}
 3368              		.cfi_endproc
 3369              	.LFE71:
 3371 000a C046     		.section	.text.HAL_SPI_TxRxHalfCpltCallback,"ax",%progbits
 3372              		.align	2
 3373              		.weak	HAL_SPI_TxRxHalfCpltCallback
 3374              		.code	16
 3375              		.thumb_func
 3377              	HAL_SPI_TxRxHalfCpltCallback:
 3378              	.LFB58:
1748:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 3379              		.loc 1 1748 0
 3380              		.cfi_startproc
 3381              	.LVL192:
1755:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 3382              		.loc 1 1755 0
 3383              		@ sp needed
 3384 0000 7047     		bx	lr
 3385              		.cfi_endproc
 3386              	.LFE58:
 3388 0002 C046     		.section	.text.SPI_DMAHalfTransmitReceiveCplt,"ax",%progbits
 3389              		.align	2
 3390              		.code	16
 3391              		.thumb_func
 3393              	SPI_DMAHalfTransmitReceiveCplt:
 3394              	.LFB72:
2297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 3395              		.loc 1 2297 0
 3396              		.cfi_startproc
 3397              	.LVL193:
 3398 0000 08B5     		push	{r3, lr}
 3399              	.LCFI21:
 3400              		.cfi_def_cfa_offset 8
 3401              		.cfi_offset 3, -8
 3402              		.cfi_offset 14, -4
2298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = ( SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3403              		.loc 1 2298 0
 3404 0002 806A     		ldr	r0, [r0, #40]
 3405              	.LVL194:
2300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_SPI_TxRxHalfCpltCallback(hspi);
 3406              		.loc 1 2300 0
 3407 0004 FFF7FEFF 		bl	HAL_SPI_TxRxHalfCpltCallback
 3408              	.LVL195:
2301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 3409              		.loc 1 2301 0
 3410              		@ sp needed
 3411 0008 08BD     		pop	{r3, pc}
ARM GAS  /tmp/cc1veDgB.s 			page 112


 3412              		.cfi_endproc
 3413              	.LFE72:
 3415 000a C046     		.section	.text.HAL_SPI_ErrorCallback,"ax",%progbits
 3416              		.align	2
 3417              		.weak	HAL_SPI_ErrorCallback
 3418              		.code	16
 3419              		.thumb_func
 3421              	HAL_SPI_ErrorCallback:
 3422              	.LFB59:
1764:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 3423              		.loc 1 1764 0
 3424              		.cfi_startproc
 3425              	.LVL196:
1773:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 3426              		.loc 1 1773 0
 3427              		@ sp needed
 3428 0000 7047     		bx	lr
 3429              		.cfi_endproc
 3430              	.LFE59:
 3432 0002 C046     		.section	.text.SPI_TxCloseIRQHandler,"ax",%progbits
 3433              		.align	2
 3434              		.code	16
 3435              		.thumb_func
 3437              	SPI_TxCloseIRQHandler:
 3438              	.LFB62:
1838:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 3439              		.loc 1 1838 0
 3440              		.cfi_startproc
 3441              	.LVL197:
 3442 0000 10B5     		push	{r4, lr}
 3443              	.LCFI22:
 3444              		.cfi_def_cfa_offset 8
 3445              		.cfi_offset 4, -8
 3446              		.cfi_offset 14, -4
 3447 0002 82B0     		sub	sp, sp, #8
 3448              	.LCFI23:
 3449              		.cfi_def_cfa_offset 16
 3450 0004 041C     		mov	r4, r0
1840:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_TXE, RESET, SPI_TIMEOUT_VALUE) != HAL_OK)
 3451              		.loc 1 1840 0
 3452 0006 0221     		mov	r1, #2
 3453 0008 0022     		mov	r2, #0
 3454 000a 0A23     		mov	r3, #10
 3455 000c FFF7FEFF 		bl	SPI_WaitOnFlagUntilTimeout
 3456              	.LVL198:
 3457 0010 0028     		cmp	r0, #0
 3458 0012 03D0     		beq	.L227
1842:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 3459              		.loc 1 1842 0
 3460 0014 626D     		ldr	r2, [r4, #84]
 3461 0016 2023     		mov	r3, #32
 3462 0018 1343     		orr	r3, r2
 3463 001a 6365     		str	r3, [r4, #84]
 3464              	.L227:
1846:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE));
 3465              		.loc 1 1846 0
 3466 001c 2368     		ldr	r3, [r4]
ARM GAS  /tmp/cc1veDgB.s 			page 113


 3467 001e 5A68     		ldr	r2, [r3, #4]
 3468 0020 8021     		mov	r1, #128
 3469 0022 8A43     		bic	r2, r1
 3470 0024 5A60     		str	r2, [r3, #4]
1849:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(__HAL_SPI_GET_IT_SOURCE(hspi, SPI_IT_RXNE) == RESET)
 3471              		.loc 1 1849 0
 3472 0026 2368     		ldr	r3, [r4]
 3473 0028 5A68     		ldr	r2, [r3, #4]
 3474 002a 5106     		lsl	r1, r2, #25
 3475 002c 33D4     		bmi	.L226
1851:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_ERR));
 3476              		.loc 1 1851 0
 3477 002e 5A68     		ldr	r2, [r3, #4]
 3478 0030 2021     		mov	r1, #32
 3479 0032 8A43     		bic	r2, r1
 3480 0034 5A60     		str	r2, [r3, #4]
1854:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_BSY, SET, SPI_TIMEOUT_VALUE) != HAL_OK)
 3481              		.loc 1 1854 0
 3482 0036 201C     		mov	r0, r4
 3483 0038 8021     		mov	r1, #128
 3484 003a 0122     		mov	r2, #1
 3485 003c 0A23     		mov	r3, #10
 3486 003e FFF7FEFF 		bl	SPI_WaitOnFlagUntilTimeout
 3487              	.LVL199:
 3488 0042 0028     		cmp	r0, #0
 3489 0044 03D0     		beq	.L229
1856:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 3490              		.loc 1 1856 0
 3491 0046 626D     		ldr	r2, [r4, #84]
 3492 0048 2023     		mov	r3, #32
 3493 004a 1343     		orr	r3, r2
 3494 004c 6365     		str	r3, [r4, #84]
 3495              	.L229:
1860:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.Direction == SPI_DIRECTION_2LINES)
 3496              		.loc 1 1860 0
 3497 004e A368     		ldr	r3, [r4, #8]
 3498 0050 002B     		cmp	r3, #0
 3499 0052 05D1     		bne	.L230
 3500              	.LBB3:
1862:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_CLEAR_OVRFLAG(hspi);
 3501              		.loc 1 1862 0
 3502 0054 2368     		ldr	r3, [r4]
 3503 0056 DA68     		ldr	r2, [r3, #12]
 3504 0058 0192     		str	r2, [sp, #4]
 3505 005a 9B68     		ldr	r3, [r3, #8]
 3506 005c 0193     		str	r3, [sp, #4]
 3507 005e 019B     		ldr	r3, [sp, #4]
 3508              	.L230:
 3509              	.LBE3:
1866:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->ErrorCode ==  HAL_SPI_ERROR_NONE)
 3510              		.loc 1 1866 0
 3511 0060 636D     		ldr	r3, [r4, #84]
 3512 0062 002B     		cmp	r3, #0
 3513 0064 11D1     		bne	.L231
1869:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if(hspi->State == HAL_SPI_STATE_BUSY_TX_RX)
 3514              		.loc 1 1869 0
 3515 0066 5123     		mov	r3, #81
ARM GAS  /tmp/cc1veDgB.s 			page 114


 3516 0068 E35C     		ldrb	r3, [r4, r3]
 3517 006a 322B     		cmp	r3, #50
 3518 006c 06D1     		bne	.L232
1872:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
 3519              		.loc 1 1872 0
 3520 006e 0122     		mov	r2, #1
 3521 0070 5123     		mov	r3, #81
 3522 0072 E254     		strb	r2, [r4, r3]
1873:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         HAL_SPI_TxRxCpltCallback(hspi);
 3523              		.loc 1 1873 0
 3524 0074 201C     		mov	r0, r4
 3525 0076 FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 3526              	.LVL200:
 3527 007a 0CE0     		b	.L226
 3528              	.L232:
1878:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
 3529              		.loc 1 1878 0
 3530 007c 0122     		mov	r2, #1
 3531 007e 5123     		mov	r3, #81
 3532 0080 E254     		strb	r2, [r4, r3]
1879:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         HAL_SPI_TxCpltCallback(hspi);
 3533              		.loc 1 1879 0
 3534 0082 201C     		mov	r0, r4
 3535 0084 FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 3536              	.LVL201:
 3537 0088 05E0     		b	.L226
 3538              	.L231:
1885:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
 3539              		.loc 1 1885 0
 3540 008a 0122     		mov	r2, #1
 3541 008c 5123     		mov	r3, #81
 3542 008e E254     		strb	r2, [r4, r3]
1887:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
 3543              		.loc 1 1887 0
 3544 0090 201C     		mov	r0, r4
 3545 0092 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 3546              	.LVL202:
 3547              	.L226:
1890:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 3548              		.loc 1 1890 0
 3549 0096 02B0     		add	sp, sp, #8
 3550              		@ sp needed
 3551              	.LVL203:
 3552 0098 10BD     		pop	{r4, pc}
 3553              		.cfi_endproc
 3554              	.LFE62:
 3556 009a C046     		.section	.text.SPI_TxISR,"ax",%progbits
 3557              		.align	2
 3558              		.code	16
 3559              		.thumb_func
 3561              	SPI_TxISR:
 3562              	.LFB63:
1899:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 3563              		.loc 1 1899 0
 3564              		.cfi_startproc
 3565              	.LVL204:
 3566 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/cc1veDgB.s 			page 115


 3567              	.LCFI24:
 3568              		.cfi_def_cfa_offset 8
 3569              		.cfi_offset 3, -8
 3570              		.cfi_offset 14, -4
1901:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 3571              		.loc 1 1901 0
 3572 0002 C168     		ldr	r1, [r0, #12]
 3573 0004 0029     		cmp	r1, #0
 3574 0006 06D1     		bne	.L234
1903:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->Instance->DR = (*hspi->pTxBuffPtr++);
 3575              		.loc 1 1903 0
 3576 0008 0268     		ldr	r2, [r0]
 3577 000a 036B     		ldr	r3, [r0, #48]
 3578 000c 591C     		add	r1, r3, #1
 3579 000e 0163     		str	r1, [r0, #48]
 3580 0010 1B78     		ldrb	r3, [r3]
 3581 0012 D360     		str	r3, [r2, #12]
 3582 0014 06E0     		b	.L235
 3583              	.L234:
1908:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->Instance->DR = *((uint16_t*)hspi->pTxBuffPtr);
 3584              		.loc 1 1908 0
 3585 0016 0368     		ldr	r3, [r0]
 3586 0018 016B     		ldr	r1, [r0, #48]
 3587 001a 0A88     		ldrh	r2, [r1]
 3588 001c DA60     		str	r2, [r3, #12]
1909:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pTxBuffPtr+=2U;
 3589              		.loc 1 1909 0
 3590 001e 036B     		ldr	r3, [r0, #48]
 3591 0020 0233     		add	r3, r3, #2
 3592 0022 0363     		str	r3, [r0, #48]
 3593              	.L235:
1911:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferCount--;
 3594              		.loc 1 1911 0
 3595 0024 C38E     		ldrh	r3, [r0, #54]
 3596 0026 013B     		sub	r3, r3, #1
 3597 0028 9BB2     		uxth	r3, r3
 3598 002a C386     		strh	r3, [r0, #54]
1913:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(hspi->TxXferCount == 0U)
 3599              		.loc 1 1913 0
 3600 002c C38E     		ldrh	r3, [r0, #54]
 3601 002e 9BB2     		uxth	r3, r3
 3602 0030 002B     		cmp	r3, #0
 3603 0032 0CD1     		bne	.L233
1915:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 3604              		.loc 1 1915 0
 3605 0034 8023     		mov	r3, #128
 3606 0036 9B01     		lsl	r3, r3, #6
 3607 0038 826A     		ldr	r2, [r0, #40]
 3608 003a 9A42     		cmp	r2, r3
 3609 003c 05D1     		bne	.L237
1918:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 3610              		.loc 1 1918 0
 3611 003e 0368     		ldr	r3, [r0]
 3612 0040 1968     		ldr	r1, [r3]
 3613 0042 8022     		mov	r2, #128
 3614 0044 5201     		lsl	r2, r2, #5
 3615 0046 0A43     		orr	r2, r1
ARM GAS  /tmp/cc1veDgB.s 			page 116


 3616 0048 1A60     		str	r2, [r3]
 3617              	.L237:
1920:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SPI_TxCloseIRQHandler(hspi);
 3618              		.loc 1 1920 0
 3619 004a FFF7FEFF 		bl	SPI_TxCloseIRQHandler
 3620              	.LVL205:
 3621              	.L233:
1922:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 3622              		.loc 1 1922 0
 3623              		@ sp needed
 3624 004e 08BD     		pop	{r3, pc}
 3625              		.cfi_endproc
 3626              	.LFE63:
 3628              		.section	.text.SPI_RxCloseIRQHandler,"ax",%progbits
 3629              		.align	2
 3630              		.code	16
 3631              		.thumb_func
 3633              	SPI_RxCloseIRQHandler:
 3634              	.LFB64:
1931:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 3635              		.loc 1 1931 0
 3636              		.cfi_startproc
 3637              	.LVL206:
 3638 0000 10B5     		push	{r4, lr}
 3639              	.LCFI25:
 3640              		.cfi_def_cfa_offset 8
 3641              		.cfi_offset 4, -8
 3642              		.cfi_offset 14, -4
 3643 0002 82B0     		sub	sp, sp, #8
 3644              	.LCFI26:
 3645              		.cfi_def_cfa_offset 16
 3646 0004 041C     		mov	r4, r0
1932:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __IO uint16_t tmpreg = 0U;
 3647              		.loc 1 1932 0
 3648 0006 0022     		mov	r2, #0
 3649 0008 6B46     		mov	r3, sp
 3650 000a DA80     		strh	r2, [r3, #6]
1934:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 3651              		.loc 1 1934 0
 3652 000c 8023     		mov	r3, #128
 3653 000e 9B01     		lsl	r3, r3, #6
 3654 0010 816A     		ldr	r1, [r0, #40]
 3655 0012 9942     		cmp	r1, r3
 3656 0014 2ED1     		bne	.L239
1937:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, SPI_TIMEOUT_VALUE) != HAL_OK)
 3657              		.loc 1 1937 0
 3658 0016 0121     		mov	r1, #1
 3659 0018 0A23     		mov	r3, #10
 3660 001a FFF7FEFF 		bl	SPI_WaitOnFlagUntilTimeout
 3661              	.LVL207:
 3662 001e 0028     		cmp	r0, #0
 3663 0020 03D0     		beq	.L240
1939:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 3664              		.loc 1 1939 0
 3665 0022 626D     		ldr	r2, [r4, #84]
 3666 0024 2023     		mov	r3, #32
 3667 0026 1343     		orr	r3, r2
ARM GAS  /tmp/cc1veDgB.s 			page 117


 3668 0028 6365     		str	r3, [r4, #84]
 3669              	.L240:
1943:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     tmpreg = hspi->Instance->DR;
 3670              		.loc 1 1943 0
 3671 002a 2368     		ldr	r3, [r4]
 3672 002c DA68     		ldr	r2, [r3, #12]
 3673 002e 92B2     		uxth	r2, r2
 3674 0030 6B46     		mov	r3, sp
 3675 0032 DA80     		strh	r2, [r3, #6]
 3676 0034 0633     		add	r3, r3, #6
1944:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     UNUSED(tmpreg);		/* avoid warning on tmpreg affectation with some compiler */
 3677              		.loc 1 1944 0
 3678 0036 1B88     		ldrh	r3, [r3]
1947:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, SET, SPI_TIMEOUT_VALUE) != HAL_OK)
 3679              		.loc 1 1947 0
 3680 0038 201C     		mov	r0, r4
 3681 003a 0121     		mov	r1, #1
 3682 003c 0122     		mov	r2, #1
 3683 003e 0A23     		mov	r3, #10
 3684 0040 FFF7FEFF 		bl	SPI_WaitOnFlagUntilTimeout
 3685              	.LVL208:
 3686 0044 0028     		cmp	r0, #0
 3687 0046 03D0     		beq	.L241
1949:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 3688              		.loc 1 1949 0
 3689 0048 626D     		ldr	r2, [r4, #84]
 3690 004a 2023     		mov	r3, #32
 3691 004c 1343     		orr	r3, r2
 3692 004e 6365     		str	r3, [r4, #84]
 3693              	.L241:
1953:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
 3694              		.loc 1 1953 0
 3695 0050 2368     		ldr	r3, [r4]
 3696 0052 9A68     		ldr	r2, [r3, #8]
 3697 0054 D106     		lsl	r1, r2, #27
 3698 0056 0DD5     		bpl	.L239
1955:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
 3699              		.loc 1 1955 0
 3700 0058 616D     		ldr	r1, [r4, #84]
 3701 005a 0222     		mov	r2, #2
 3702 005c 0A43     		orr	r2, r1
 3703 005e 6265     		str	r2, [r4, #84]
1958:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
 3704              		.loc 1 1958 0
 3705 0060 1968     		ldr	r1, [r3]
 3706 0062 234A     		ldr	r2, .L247
 3707 0064 0A40     		and	r2, r1
 3708 0066 1A60     		str	r2, [r3]
 3709 0068 2368     		ldr	r3, [r4]
 3710 006a 1968     		ldr	r1, [r3]
 3711 006c 8022     		mov	r2, #128
 3712 006e 9201     		lsl	r2, r2, #6
 3713 0070 0A43     		orr	r2, r1
 3714 0072 1A60     		str	r2, [r3]
 3715              	.L239:
1963:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE));
 3716              		.loc 1 1963 0
ARM GAS  /tmp/cc1veDgB.s 			page 118


 3717 0074 2368     		ldr	r3, [r4]
 3718 0076 5A68     		ldr	r2, [r3, #4]
 3719 0078 4021     		mov	r1, #64
 3720 007a 8A43     		bic	r2, r1
 3721 007c 5A60     		str	r2, [r3, #4]
1966:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(__HAL_SPI_GET_IT_SOURCE(hspi, SPI_IT_TXE) == RESET)
 3722              		.loc 1 1966 0
 3723 007e 2368     		ldr	r3, [r4]
 3724 0080 5A68     		ldr	r2, [r3, #4]
 3725 0082 1106     		lsl	r1, r2, #24
 3726 0084 31D4     		bmi	.L238
1969:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_ERR));
 3727              		.loc 1 1969 0
 3728 0086 5A68     		ldr	r2, [r3, #4]
 3729 0088 2021     		mov	r1, #32
 3730 008a 8A43     		bic	r2, r1
 3731 008c 5A60     		str	r2, [r3, #4]
1971:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((hspi->Init.Mode == SPI_MODE_MASTER)&&((hspi->Init.Direction == SPI_DIRECTION_1LINE)||(hspi-
 3732              		.loc 1 1971 0
 3733 008e 8223     		mov	r3, #130
 3734 0090 5B00     		lsl	r3, r3, #1
 3735 0092 6268     		ldr	r2, [r4, #4]
 3736 0094 9A42     		cmp	r2, r3
 3737 0096 0DD1     		bne	.L243
1971:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((hspi->Init.Mode == SPI_MODE_MASTER)&&((hspi->Init.Direction == SPI_DIRECTION_1LINE)||(hspi-
 3738              		.loc 1 1971 0 is_stmt 0 discriminator 1
 3739 0098 A368     		ldr	r3, [r4, #8]
 3740 009a 8022     		mov	r2, #128
 3741 009c 1202     		lsl	r2, r2, #8
 3742 009e 9342     		cmp	r3, r2
 3743 00a0 03D0     		beq	.L244
 3744 00a2 8022     		mov	r2, #128
 3745 00a4 D200     		lsl	r2, r2, #3
 3746 00a6 9342     		cmp	r3, r2
 3747 00a8 04D1     		bne	.L243
 3748              	.L244:
1974:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_DISABLE(hspi);
 3749              		.loc 1 1974 0 is_stmt 1
 3750 00aa 2368     		ldr	r3, [r4]
 3751 00ac 1A68     		ldr	r2, [r3]
 3752 00ae 4021     		mov	r1, #64
 3753 00b0 8A43     		bic	r2, r1
 3754 00b2 1A60     		str	r2, [r3]
 3755              	.L243:
1978:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->ErrorCode ==  HAL_SPI_ERROR_NONE)
 3756              		.loc 1 1978 0
 3757 00b4 636D     		ldr	r3, [r4, #84]
 3758 00b6 002B     		cmp	r3, #0
 3759 00b8 11D1     		bne	.L245
1981:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if(hspi->State == HAL_SPI_STATE_BUSY_TX_RX)
 3760              		.loc 1 1981 0
 3761 00ba 5123     		mov	r3, #81
 3762 00bc E35C     		ldrb	r3, [r4, r3]
 3763 00be 322B     		cmp	r3, #50
 3764 00c0 06D1     		bne	.L246
1984:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
 3765              		.loc 1 1984 0
ARM GAS  /tmp/cc1veDgB.s 			page 119


 3766 00c2 0122     		mov	r2, #1
 3767 00c4 5123     		mov	r3, #81
 3768 00c6 E254     		strb	r2, [r4, r3]
1985:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         HAL_SPI_TxRxCpltCallback(hspi);
 3769              		.loc 1 1985 0
 3770 00c8 201C     		mov	r0, r4
 3771 00ca FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 3772              	.LVL209:
 3773 00ce 0CE0     		b	.L238
 3774              	.L246:
1990:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
 3775              		.loc 1 1990 0
 3776 00d0 0122     		mov	r2, #1
 3777 00d2 5123     		mov	r3, #81
 3778 00d4 E254     		strb	r2, [r4, r3]
1991:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         HAL_SPI_RxCpltCallback(hspi);
 3779              		.loc 1 1991 0
 3780 00d6 201C     		mov	r0, r4
 3781 00d8 FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 3782              	.LVL210:
 3783 00dc 05E0     		b	.L238
 3784              	.L245:
1997:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
 3785              		.loc 1 1997 0
 3786 00de 0122     		mov	r2, #1
 3787 00e0 5123     		mov	r3, #81
 3788 00e2 E254     		strb	r2, [r4, r3]
1999:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
 3789              		.loc 1 1999 0
 3790 00e4 201C     		mov	r0, r4
 3791 00e6 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 3792              	.LVL211:
 3793              	.L238:
2002:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 3794              		.loc 1 2002 0
 3795 00ea 02B0     		add	sp, sp, #8
 3796              		@ sp needed
 3797              	.LVL212:
 3798 00ec 10BD     		pop	{r4, pc}
 3799              	.L248:
 3800 00ee C046     		.align	2
 3801              	.L247:
 3802 00f0 FFDFFFFF 		.word	-8193
 3803              		.cfi_endproc
 3804              	.LFE64:
 3806              		.section	.text.SPI_RxISR,"ax",%progbits
 3807              		.align	2
 3808              		.code	16
 3809              		.thumb_func
 3811              	SPI_RxISR:
 3812              	.LFB66:
2038:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 3813              		.loc 1 2038 0
 3814              		.cfi_startproc
 3815              	.LVL213:
 3816 0000 08B5     		push	{r3, lr}
 3817              	.LCFI27:
ARM GAS  /tmp/cc1veDgB.s 			page 120


 3818              		.cfi_def_cfa_offset 8
 3819              		.cfi_offset 3, -8
 3820              		.cfi_offset 14, -4
2040:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 3821              		.loc 1 2040 0
 3822 0002 C268     		ldr	r2, [r0, #12]
 3823 0004 002A     		cmp	r2, #0
 3824 0006 06D1     		bne	.L250
2042:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     (*hspi->pRxBuffPtr++) = hspi->Instance->DR;
 3825              		.loc 1 2042 0
 3826 0008 836B     		ldr	r3, [r0, #56]
 3827 000a 5A1C     		add	r2, r3, #1
 3828 000c 8263     		str	r2, [r0, #56]
 3829 000e 0268     		ldr	r2, [r0]
 3830 0010 D268     		ldr	r2, [r2, #12]
 3831 0012 1A70     		strb	r2, [r3]
 3832 0014 06E0     		b	.L251
 3833              	.L250:
2047:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     *((uint16_t*)hspi->pRxBuffPtr) = hspi->Instance->DR;
 3834              		.loc 1 2047 0
 3835 0016 0368     		ldr	r3, [r0]
 3836 0018 DB68     		ldr	r3, [r3, #12]
 3837 001a 826B     		ldr	r2, [r0, #56]
 3838 001c 1380     		strh	r3, [r2]
2048:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pRxBuffPtr+=2U;
 3839              		.loc 1 2048 0
 3840 001e 836B     		ldr	r3, [r0, #56]
 3841 0020 0233     		add	r3, r3, #2
 3842 0022 8363     		str	r3, [r0, #56]
 3843              	.L251:
2050:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferCount--;
 3844              		.loc 1 2050 0
 3845 0024 C38F     		ldrh	r3, [r0, #62]
 3846 0026 013B     		sub	r3, r3, #1
 3847 0028 9BB2     		uxth	r3, r3
 3848 002a C387     		strh	r3, [r0, #62]
2053:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if((hspi->RxXferCount == 1U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
 3849              		.loc 1 2053 0
 3850 002c C38F     		ldrh	r3, [r0, #62]
 3851 002e 9BB2     		uxth	r3, r3
 3852 0030 012B     		cmp	r3, #1
 3853 0032 0AD1     		bne	.L252
2053:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if((hspi->RxXferCount == 1U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
 3854              		.loc 1 2053 0 is_stmt 0 discriminator 1
 3855 0034 8023     		mov	r3, #128
 3856 0036 9B01     		lsl	r3, r3, #6
 3857 0038 826A     		ldr	r2, [r0, #40]
 3858 003a 9A42     		cmp	r2, r3
 3859 003c 05D1     		bne	.L252
2056:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 3860              		.loc 1 2056 0 is_stmt 1
 3861 003e 0368     		ldr	r3, [r0]
 3862 0040 1968     		ldr	r1, [r3]
 3863 0042 8022     		mov	r2, #128
 3864 0044 5201     		lsl	r2, r2, #5
 3865 0046 0A43     		orr	r2, r1
 3866 0048 1A60     		str	r2, [r3]
ARM GAS  /tmp/cc1veDgB.s 			page 121


 3867              	.L252:
2059:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(hspi->RxXferCount == 0U)
 3868              		.loc 1 2059 0
 3869 004a C38F     		ldrh	r3, [r0, #62]
 3870 004c 9BB2     		uxth	r3, r3
 3871 004e 002B     		cmp	r3, #0
 3872 0050 01D1     		bne	.L249
2061:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SPI_RxCloseIRQHandler(hspi);
 3873              		.loc 1 2061 0
 3874 0052 FFF7FEFF 		bl	SPI_RxCloseIRQHandler
 3875              	.LVL214:
 3876              	.L249:
2063:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 3877              		.loc 1 2063 0
 3878              		@ sp needed
 3879 0056 08BD     		pop	{r3, pc}
 3880              		.cfi_endproc
 3881              	.LFE66:
 3883              		.section	.text.SPI_2LinesRxISR,"ax",%progbits
 3884              		.align	2
 3885              		.code	16
 3886              		.thumb_func
 3888              	SPI_2LinesRxISR:
 3889              	.LFB65:
2011:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 3890              		.loc 1 2011 0
 3891              		.cfi_startproc
 3892              	.LVL215:
 3893 0000 08B5     		push	{r3, lr}
 3894              	.LCFI28:
 3895              		.cfi_def_cfa_offset 8
 3896              		.cfi_offset 3, -8
 3897              		.cfi_offset 14, -4
2013:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 3898              		.loc 1 2013 0
 3899 0002 C268     		ldr	r2, [r0, #12]
 3900 0004 002A     		cmp	r2, #0
 3901 0006 06D1     		bne	.L255
2015:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     (*hspi->pRxBuffPtr++) = hspi->Instance->DR;
 3902              		.loc 1 2015 0
 3903 0008 836B     		ldr	r3, [r0, #56]
 3904 000a 5A1C     		add	r2, r3, #1
 3905 000c 8263     		str	r2, [r0, #56]
 3906 000e 0268     		ldr	r2, [r0]
 3907 0010 D268     		ldr	r2, [r2, #12]
 3908 0012 1A70     		strb	r2, [r3]
 3909 0014 06E0     		b	.L256
 3910              	.L255:
2020:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     *((uint16_t*)hspi->pRxBuffPtr) = hspi->Instance->DR;
 3911              		.loc 1 2020 0
 3912 0016 0368     		ldr	r3, [r0]
 3913 0018 DB68     		ldr	r3, [r3, #12]
 3914 001a 826B     		ldr	r2, [r0, #56]
 3915 001c 1380     		strh	r3, [r2]
2021:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->pRxBuffPtr+=2U;
 3916              		.loc 1 2021 0
 3917 001e 836B     		ldr	r3, [r0, #56]
ARM GAS  /tmp/cc1veDgB.s 			page 122


 3918 0020 0233     		add	r3, r3, #2
 3919 0022 8363     		str	r3, [r0, #56]
 3920              	.L256:
2023:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferCount--;
 3921              		.loc 1 2023 0
 3922 0024 C38F     		ldrh	r3, [r0, #62]
 3923 0026 013B     		sub	r3, r3, #1
 3924 0028 9BB2     		uxth	r3, r3
 3925 002a C387     		strh	r3, [r0, #62]
2025:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(hspi->RxXferCount==0U)
 3926              		.loc 1 2025 0
 3927 002c C38F     		ldrh	r3, [r0, #62]
 3928 002e 9BB2     		uxth	r3, r3
 3929 0030 002B     		cmp	r3, #0
 3930 0032 01D1     		bne	.L254
2027:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     SPI_RxCloseIRQHandler(hspi);
 3931              		.loc 1 2027 0
 3932 0034 FFF7FEFF 		bl	SPI_RxCloseIRQHandler
 3933              	.LVL216:
 3934              	.L254:
2029:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 3935              		.loc 1 2029 0
 3936              		@ sp needed
 3937 0038 08BD     		pop	{r3, pc}
 3938              		.cfi_endproc
 3939              	.LFE65:
 3941 003a C046     		.section	.text.SPI_DMAError,"ax",%progbits
 3942              		.align	2
 3943              		.code	16
 3944              		.thumb_func
 3946              	SPI_DMAError:
 3947              	.LFB73:
2310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 3948              		.loc 1 2310 0
 3949              		.cfi_startproc
 3950              	.LVL217:
 3951 0000 08B5     		push	{r3, lr}
 3952              	.LCFI29:
 3953              		.cfi_def_cfa_offset 8
 3954              		.cfi_offset 3, -8
 3955              		.cfi_offset 14, -4
2311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = (SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3956              		.loc 1 2311 0
 3957 0002 806A     		ldr	r0, [r0, #40]
 3958              	.LVL218:
2312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 3959              		.loc 1 2312 0
 3960 0004 0023     		mov	r3, #0
 3961 0006 C386     		strh	r3, [r0, #54]
2313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 3962              		.loc 1 2313 0
 3963 0008 C387     		strh	r3, [r0, #62]
2314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   hspi->State= HAL_SPI_STATE_READY;
 3964              		.loc 1 2314 0
 3965 000a 0122     		mov	r2, #1
 3966 000c 5123     		mov	r3, #81
 3967 000e C254     		strb	r2, [r0, r3]
ARM GAS  /tmp/cc1veDgB.s 			page 123


2315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 3968              		.loc 1 2315 0
 3969 0010 426D     		ldr	r2, [r0, #84]
 3970 0012 1023     		mov	r3, #16
 3971 0014 1343     		orr	r3, r2
 3972 0016 4365     		str	r3, [r0, #84]
2316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   HAL_SPI_ErrorCallback(hspi);
 3973              		.loc 1 2316 0
 3974 0018 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 3975              	.LVL219:
2317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 3976              		.loc 1 2317 0
 3977              		@ sp needed
 3978 001c 08BD     		pop	{r3, pc}
 3979              		.cfi_endproc
 3980              	.LFE73:
 3982 001e C046     		.section	.text.SPI_DMATransmitCplt,"ax",%progbits
 3983              		.align	2
 3984              		.code	16
 3985              		.thumb_func
 3987              	SPI_DMATransmitCplt:
 3988              	.LFB67:
2072:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 3989              		.loc 1 2072 0
 3990              		.cfi_startproc
 3991              	.LVL220:
 3992 0000 10B5     		push	{r4, lr}
 3993              	.LCFI30:
 3994              		.cfi_def_cfa_offset 8
 3995              		.cfi_offset 4, -8
 3996              		.cfi_offset 14, -4
 3997 0002 82B0     		sub	sp, sp, #8
 3998              	.LCFI31:
 3999              		.cfi_def_cfa_offset 16
2073:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = ( SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4000              		.loc 1 2073 0
 4001 0004 846A     		ldr	r4, [r0, #40]
 4002              	.LVL221:
2077:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
 4003              		.loc 1 2077 0
 4004 0006 0368     		ldr	r3, [r0]
 4005 0008 1B68     		ldr	r3, [r3]
 4006 000a 9A06     		lsl	r2, r3, #26
 4007 000c 21D4     		bmi	.L260
2080:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_TXE, RESET, SPI_TIMEOUT_VALUE) != HAL_OK)
 4008              		.loc 1 2080 0
 4009 000e 201C     		mov	r0, r4
 4010              	.LVL222:
 4011 0010 0221     		mov	r1, #2
 4012 0012 0022     		mov	r2, #0
 4013 0014 0A23     		mov	r3, #10
 4014 0016 FFF7FEFF 		bl	SPI_WaitOnFlagUntilTimeout
 4015              	.LVL223:
 4016 001a 0028     		cmp	r0, #0
 4017 001c 03D0     		beq	.L261
2082:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 4018              		.loc 1 2082 0
ARM GAS  /tmp/cc1veDgB.s 			page 124


 4019 001e 626D     		ldr	r2, [r4, #84]
 4020 0020 2023     		mov	r3, #32
 4021 0022 1343     		orr	r3, r2
 4022 0024 6365     		str	r3, [r4, #84]
 4023              	.L261:
2086:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 4024              		.loc 1 2086 0
 4025 0026 2368     		ldr	r3, [r4]
 4026 0028 5A68     		ldr	r2, [r3, #4]
 4027 002a 0221     		mov	r1, #2
 4028 002c 8A43     		bic	r2, r1
 4029 002e 5A60     		str	r2, [r3, #4]
2089:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_BSY, SET, SPI_TIMEOUT_VALUE) != HAL_OK)
 4030              		.loc 1 2089 0
 4031 0030 201C     		mov	r0, r4
 4032 0032 8021     		mov	r1, #128
 4033 0034 0122     		mov	r2, #1
 4034 0036 0A23     		mov	r3, #10
 4035 0038 FFF7FEFF 		bl	SPI_WaitOnFlagUntilTimeout
 4036              	.LVL224:
 4037 003c 0028     		cmp	r0, #0
 4038 003e 03D0     		beq	.L262
2091:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 4039              		.loc 1 2091 0
 4040 0040 626D     		ldr	r2, [r4, #84]
 4041 0042 2023     		mov	r3, #32
 4042 0044 1343     		orr	r3, r2
 4043 0046 6365     		str	r3, [r4, #84]
 4044              	.L262:
2094:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferCount = 0U;
 4045              		.loc 1 2094 0
 4046 0048 0023     		mov	r3, #0
 4047 004a E386     		strh	r3, [r4, #54]
2095:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 4048              		.loc 1 2095 0
 4049 004c 0122     		mov	r2, #1
 4050 004e 5123     		mov	r3, #81
 4051 0050 E254     		strb	r2, [r4, r3]
 4052              	.L260:
2099:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(hspi->Init.Direction == SPI_DIRECTION_2LINES)
 4053              		.loc 1 2099 0
 4054 0052 A368     		ldr	r3, [r4, #8]
 4055 0054 002B     		cmp	r3, #0
 4056 0056 05D1     		bne	.L263
 4057              	.LBB4:
2101:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
 4058              		.loc 1 2101 0
 4059 0058 2368     		ldr	r3, [r4]
 4060 005a DA68     		ldr	r2, [r3, #12]
 4061 005c 0192     		str	r2, [sp, #4]
 4062 005e 9B68     		ldr	r3, [r3, #8]
 4063 0060 0193     		str	r3, [sp, #4]
 4064 0062 019B     		ldr	r3, [sp, #4]
 4065              	.L263:
 4066              	.LBE4:
2105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 4067              		.loc 1 2105 0
ARM GAS  /tmp/cc1veDgB.s 			page 125


 4068 0064 636D     		ldr	r3, [r4, #84]
 4069 0066 002B     		cmp	r3, #0
 4070 0068 03D0     		beq	.L264
2107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
 4071              		.loc 1 2107 0
 4072 006a 201C     		mov	r0, r4
 4073 006c FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4074              	.LVL225:
 4075 0070 02E0     		b	.L259
 4076              	.L264:
2111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     HAL_SPI_TxCpltCallback(hspi);
 4077              		.loc 1 2111 0
 4078 0072 201C     		mov	r0, r4
 4079 0074 FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 4080              	.LVL226:
 4081              	.L259:
2113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 4082              		.loc 1 2113 0
 4083 0078 02B0     		add	sp, sp, #8
 4084              		@ sp needed
 4085              	.LVL227:
 4086 007a 10BD     		pop	{r4, pc}
 4087              		.cfi_endproc
 4088              	.LFE67:
 4090              		.section	.text.SPI_DMAReceiveCplt,"ax",%progbits
 4091              		.align	2
 4092              		.code	16
 4093              		.thumb_func
 4095              	SPI_DMAReceiveCplt:
 4096              	.LFB68:
2122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 4097              		.loc 1 2122 0
 4098              		.cfi_startproc
 4099              	.LVL228:
 4100 0000 10B5     		push	{r4, lr}
 4101              	.LCFI32:
 4102              		.cfi_def_cfa_offset 8
 4103              		.cfi_offset 4, -8
 4104              		.cfi_offset 14, -4
 4105 0002 82B0     		sub	sp, sp, #8
 4106              	.LCFI33:
 4107              		.cfi_def_cfa_offset 16
2123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __IO uint16_t tmpreg = 0U;
 4108              		.loc 1 2123 0
 4109 0004 0022     		mov	r2, #0
 4110 0006 6B46     		mov	r3, sp
 4111 0008 DA80     		strh	r2, [r3, #6]
2125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = ( SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4112              		.loc 1 2125 0
 4113 000a 846A     		ldr	r4, [r0, #40]
 4114              	.LVL229:
2128:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
 4115              		.loc 1 2128 0
 4116 000c 0368     		ldr	r3, [r0]
 4117 000e 1B68     		ldr	r3, [r3]
 4118 0010 9906     		lsl	r1, r3, #26
 4119 0012 5BD4     		bmi	.L267
ARM GAS  /tmp/cc1veDgB.s 			page 126


2131:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
 4120              		.loc 1 2131 0
 4121 0014 2368     		ldr	r3, [r4]
 4122 0016 5A68     		ldr	r2, [r3, #4]
 4123 0018 0121     		mov	r1, #1
 4124 001a 8A43     		bic	r2, r1
 4125 001c 5A60     		str	r2, [r3, #4]
2134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 4126              		.loc 1 2134 0
 4127 001e 2368     		ldr	r3, [r4]
 4128 0020 5A68     		ldr	r2, [r3, #4]
 4129 0022 0221     		mov	r1, #2
 4130 0024 8A43     		bic	r2, r1
 4131 0026 5A60     		str	r2, [r3, #4]
2137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 4132              		.loc 1 2137 0
 4133 0028 8023     		mov	r3, #128
 4134 002a 9B01     		lsl	r3, r3, #6
 4135 002c A26A     		ldr	r2, [r4, #40]
 4136 002e 9A42     		cmp	r2, r3
 4137 0030 29D1     		bne	.L268
2140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, SPI_TIMEOUT_VALUE) != HAL_OK)
 4138              		.loc 1 2140 0
 4139 0032 201C     		mov	r0, r4
 4140              	.LVL230:
 4141 0034 0121     		mov	r1, #1
 4142 0036 0022     		mov	r2, #0
 4143 0038 0A23     		mov	r3, #10
 4144 003a FFF7FEFF 		bl	SPI_WaitOnFlagUntilTimeout
 4145              	.LVL231:
 4146 003e 0028     		cmp	r0, #0
 4147 0040 03D0     		beq	.L269
2142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 4148              		.loc 1 2142 0
 4149 0042 626D     		ldr	r2, [r4, #84]
 4150 0044 2023     		mov	r3, #32
 4151 0046 1343     		orr	r3, r2
 4152 0048 6365     		str	r3, [r4, #84]
 4153              	.L269:
2146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       tmpreg = hspi->Instance->DR;
 4154              		.loc 1 2146 0
 4155 004a 2368     		ldr	r3, [r4]
 4156 004c DA68     		ldr	r2, [r3, #12]
 4157 004e 92B2     		uxth	r2, r2
 4158 0050 6B46     		mov	r3, sp
 4159 0052 DA80     		strh	r2, [r3, #6]
 4160 0054 0633     		add	r3, r3, #6
2147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       UNUSED(tmpreg);		/* avoid warning on tmpreg affectation with some compiler */
 4161              		.loc 1 2147 0
 4162 0056 1B88     		ldrh	r3, [r3]
2150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, SET, SPI_TIMEOUT_VALUE) != HAL_OK)
 4163              		.loc 1 2150 0
 4164 0058 201C     		mov	r0, r4
 4165 005a 0121     		mov	r1, #1
 4166 005c 0122     		mov	r2, #1
 4167 005e 0A23     		mov	r3, #10
 4168 0060 FFF7FEFF 		bl	SPI_WaitOnFlagUntilTimeout
ARM GAS  /tmp/cc1veDgB.s 			page 127


 4169              	.LVL232:
 4170 0064 0028     		cmp	r0, #0
 4171 0066 03D0     		beq	.L270
2152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 4172              		.loc 1 2152 0
 4173 0068 626D     		ldr	r2, [r4, #84]
 4174 006a 2023     		mov	r3, #32
 4175 006c 1343     		orr	r3, r2
 4176 006e 6365     		str	r3, [r4, #84]
 4177              	.L270:
2156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if(__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
 4178              		.loc 1 2156 0
 4179 0070 2368     		ldr	r3, [r4]
 4180 0072 9A68     		ldr	r2, [r3, #8]
 4181 0074 D106     		lsl	r1, r2, #27
 4182 0076 06D5     		bpl	.L268
2158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
 4183              		.loc 1 2158 0
 4184 0078 616D     		ldr	r1, [r4, #84]
 4185 007a 0222     		mov	r2, #2
 4186 007c 0A43     		orr	r2, r1
 4187 007e 6265     		str	r2, [r4, #84]
2159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
 4188              		.loc 1 2159 0
 4189 0080 1122     		mov	r2, #17
 4190 0082 5242     		neg	r2, r2
 4191 0084 9A60     		str	r2, [r3, #8]
 4192              	.L268:
2163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((hspi->Init.Mode == SPI_MODE_MASTER)&&((hspi->Init.Direction == SPI_DIRECTION_1LINE)||(hspi-
 4193              		.loc 1 2163 0
 4194 0086 8223     		mov	r3, #130
 4195 0088 5B00     		lsl	r3, r3, #1
 4196 008a 6268     		ldr	r2, [r4, #4]
 4197 008c 9A42     		cmp	r2, r3
 4198 008e 0DD1     		bne	.L271
2163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if((hspi->Init.Mode == SPI_MODE_MASTER)&&((hspi->Init.Direction == SPI_DIRECTION_1LINE)||(hspi-
 4199              		.loc 1 2163 0 is_stmt 0 discriminator 1
 4200 0090 A368     		ldr	r3, [r4, #8]
 4201 0092 8022     		mov	r2, #128
 4202 0094 1202     		lsl	r2, r2, #8
 4203 0096 9342     		cmp	r3, r2
 4204 0098 03D0     		beq	.L272
 4205 009a 8022     		mov	r2, #128
 4206 009c D200     		lsl	r2, r2, #3
 4207 009e 9342     		cmp	r3, r2
 4208 00a0 04D1     		bne	.L271
 4209              	.L272:
2166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_DISABLE(hspi);
 4210              		.loc 1 2166 0 is_stmt 1
 4211 00a2 2368     		ldr	r3, [r4]
 4212 00a4 1A68     		ldr	r2, [r3]
 4213 00a6 4021     		mov	r1, #64
 4214 00a8 8A43     		bic	r2, r1
 4215 00aa 1A60     		str	r2, [r3]
 4216              	.L271:
2169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferCount = 0U;
 4217              		.loc 1 2169 0
ARM GAS  /tmp/cc1veDgB.s 			page 128


 4218 00ac 0023     		mov	r3, #0
 4219 00ae E387     		strh	r3, [r4, #62]
2170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 4220              		.loc 1 2170 0
 4221 00b0 0122     		mov	r2, #1
 4222 00b2 5123     		mov	r3, #81
 4223 00b4 E254     		strb	r2, [r4, r3]
2173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 4224              		.loc 1 2173 0
 4225 00b6 636D     		ldr	r3, [r4, #84]
 4226 00b8 002B     		cmp	r3, #0
 4227 00ba 03D0     		beq	.L273
2175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
 4228              		.loc 1 2175 0
 4229 00bc 201C     		mov	r0, r4
 4230 00be FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4231              	.LVL233:
 4232 00c2 06E0     		b	.L266
 4233              	.L273:
2179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       HAL_SPI_RxCpltCallback(hspi);
 4234              		.loc 1 2179 0
 4235 00c4 201C     		mov	r0, r4
 4236 00c6 FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 4237              	.LVL234:
 4238 00ca 02E0     		b	.L266
 4239              	.LVL235:
 4240              	.L267:
2184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     HAL_SPI_RxCpltCallback(hspi);
 4241              		.loc 1 2184 0
 4242 00cc 201C     		mov	r0, r4
 4243              	.LVL236:
 4244 00ce FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 4245              	.LVL237:
 4246              	.L266:
2186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 4247              		.loc 1 2186 0
 4248 00d2 02B0     		add	sp, sp, #8
 4249              		@ sp needed
 4250              	.LVL238:
 4251 00d4 10BD     		pop	{r4, pc}
 4252              		.cfi_endproc
 4253              	.LFE68:
 4255 00d6 C046     		.section	.text.SPI_DMATransmitReceiveCplt,"ax",%progbits
 4256              		.align	2
 4257              		.code	16
 4258              		.thumb_func
 4260              	SPI_DMATransmitReceiveCplt:
 4261              	.LFB69:
2195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 4262              		.loc 1 2195 0
 4263              		.cfi_startproc
 4264              	.LVL239:
 4265 0000 10B5     		push	{r4, lr}
 4266              	.LCFI34:
 4267              		.cfi_def_cfa_offset 8
 4268              		.cfi_offset 4, -8
 4269              		.cfi_offset 14, -4
ARM GAS  /tmp/cc1veDgB.s 			page 129


 4270 0002 82B0     		sub	sp, sp, #8
 4271              	.LCFI35:
 4272              		.cfi_def_cfa_offset 16
2196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   __IO uint16_t tmpreg = 0U;
 4273              		.loc 1 2196 0
 4274 0004 0022     		mov	r2, #0
 4275 0006 6B46     		mov	r3, sp
 4276 0008 DA80     		strh	r2, [r3, #6]
2198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   SPI_HandleTypeDef* hspi = ( SPI_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4277              		.loc 1 2198 0
 4278 000a 846A     		ldr	r4, [r0, #40]
 4279              	.LVL240:
2199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
 4280              		.loc 1 2199 0
 4281 000c 0368     		ldr	r3, [r0]
 4282 000e 1B68     		ldr	r3, [r3]
 4283 0010 9906     		lsl	r1, r3, #26
 4284 0012 5BD4     		bmi	.L276
2202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 4285              		.loc 1 2202 0
 4286 0014 8023     		mov	r3, #128
 4287 0016 9B01     		lsl	r3, r3, #6
 4288 0018 A26A     		ldr	r2, [r4, #40]
 4289 001a 9A42     		cmp	r2, r3
 4290 001c 24D1     		bne	.L277
2205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, SET, SPI_TIMEOUT_VALUE) == HAL_OK)
 4291              		.loc 1 2205 0
 4292 001e 201C     		mov	r0, r4
 4293              	.LVL241:
 4294 0020 0121     		mov	r1, #1
 4295 0022 0122     		mov	r2, #1
 4296 0024 0A23     		mov	r3, #10
 4297 0026 FFF7FEFF 		bl	SPI_WaitOnFlagUntilTimeout
 4298              	.LVL242:
 4299 002a 0028     		cmp	r0, #0
 4300 002c 0BD1     		bne	.L278
2208:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, SPI_TIMEOUT_VALUE) != HAL_OK)
 4301              		.loc 1 2208 0
 4302 002e 201C     		mov	r0, r4
 4303 0030 0121     		mov	r1, #1
 4304 0032 0022     		mov	r2, #0
 4305 0034 0A23     		mov	r3, #10
 4306 0036 FFF7FEFF 		bl	SPI_WaitOnFlagUntilTimeout
 4307              	.LVL243:
 4308 003a 0028     		cmp	r0, #0
 4309 003c 03D0     		beq	.L278
2210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 4310              		.loc 1 2210 0
 4311 003e 626D     		ldr	r2, [r4, #84]
 4312 0040 2023     		mov	r3, #32
 4313 0042 1343     		orr	r3, r2
 4314 0044 6365     		str	r3, [r4, #84]
 4315              	.L278:
2214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       tmpreg = hspi->Instance->DR;
 4316              		.loc 1 2214 0
 4317 0046 2368     		ldr	r3, [r4]
 4318 0048 D968     		ldr	r1, [r3, #12]
ARM GAS  /tmp/cc1veDgB.s 			page 130


 4319 004a 89B2     		uxth	r1, r1
 4320 004c 6A46     		mov	r2, sp
 4321 004e D180     		strh	r1, [r2, #6]
 4322 0050 0632     		add	r2, r2, #6
2215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       UNUSED(tmpreg);		/* avoid warning on tmpreg affectation with some compiler */
 4323              		.loc 1 2215 0
 4324 0052 1288     		ldrh	r2, [r2]
2218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if(__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
 4325              		.loc 1 2218 0
 4326 0054 9A68     		ldr	r2, [r3, #8]
 4327 0056 D106     		lsl	r1, r2, #27
 4328 0058 06D5     		bpl	.L277
2220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
 4329              		.loc 1 2220 0
 4330 005a 616D     		ldr	r1, [r4, #84]
 4331 005c 0222     		mov	r2, #2
 4332 005e 0A43     		orr	r2, r1
 4333 0060 6265     		str	r2, [r4, #84]
2221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
 4334              		.loc 1 2221 0
 4335 0062 1122     		mov	r2, #17
 4336 0064 5242     		neg	r2, r2
 4337 0066 9A60     		str	r2, [r3, #8]
 4338              	.L277:
2226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_TXE, RESET, SPI_TIMEOUT_VALUE) != HAL_OK)
 4339              		.loc 1 2226 0
 4340 0068 201C     		mov	r0, r4
 4341 006a 0221     		mov	r1, #2
 4342 006c 0022     		mov	r2, #0
 4343 006e 0A23     		mov	r3, #10
 4344 0070 FFF7FEFF 		bl	SPI_WaitOnFlagUntilTimeout
 4345              	.LVL244:
 4346 0074 0028     		cmp	r0, #0
 4347 0076 03D0     		beq	.L279
2228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 4348              		.loc 1 2228 0
 4349 0078 626D     		ldr	r2, [r4, #84]
 4350 007a 2023     		mov	r3, #32
 4351 007c 1343     		orr	r3, r2
 4352 007e 6365     		str	r3, [r4, #84]
 4353              	.L279:
2232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 4354              		.loc 1 2232 0
 4355 0080 2368     		ldr	r3, [r4]
 4356 0082 5A68     		ldr	r2, [r3, #4]
 4357 0084 0221     		mov	r1, #2
 4358 0086 8A43     		bic	r2, r1
 4359 0088 5A60     		str	r2, [r3, #4]
2235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_BSY, SET, SPI_TIMEOUT_VALUE) != HAL_OK)
 4360              		.loc 1 2235 0
 4361 008a 201C     		mov	r0, r4
 4362 008c 8021     		mov	r1, #128
 4363 008e 0122     		mov	r2, #1
 4364 0090 0A23     		mov	r3, #10
 4365 0092 FFF7FEFF 		bl	SPI_WaitOnFlagUntilTimeout
 4366              	.LVL245:
 4367 0096 0028     		cmp	r0, #0
ARM GAS  /tmp/cc1veDgB.s 			page 131


 4368 0098 03D0     		beq	.L280
2237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 4369              		.loc 1 2237 0
 4370 009a 626D     		ldr	r2, [r4, #84]
 4371 009c 2023     		mov	r3, #32
 4372 009e 1343     		orr	r3, r2
 4373 00a0 6365     		str	r3, [r4, #84]
 4374              	.L280:
2241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
 4375              		.loc 1 2241 0
 4376 00a2 2268     		ldr	r2, [r4]
 4377 00a4 5168     		ldr	r1, [r2, #4]
 4378 00a6 0123     		mov	r3, #1
 4379 00a8 9943     		bic	r1, r3
 4380 00aa 5160     		str	r1, [r2, #4]
2243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxXferCount = 0U;
 4381              		.loc 1 2243 0
 4382 00ac 0022     		mov	r2, #0
 4383 00ae E286     		strh	r2, [r4, #54]
2244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxXferCount = 0U;
 4384              		.loc 1 2244 0
 4385 00b0 E287     		strh	r2, [r4, #62]
2246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 4386              		.loc 1 2246 0
 4387 00b2 5122     		mov	r2, #81
 4388 00b4 A354     		strb	r3, [r4, r2]
2249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 4389              		.loc 1 2249 0
 4390 00b6 636D     		ldr	r3, [r4, #84]
 4391 00b8 002B     		cmp	r3, #0
 4392 00ba 03D0     		beq	.L281
2251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
 4393              		.loc 1 2251 0
 4394 00bc 201C     		mov	r0, r4
 4395 00be FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4396              	.LVL246:
 4397 00c2 06E0     		b	.L275
 4398              	.L281:
2255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       HAL_SPI_TxRxCpltCallback(hspi);
 4399              		.loc 1 2255 0
 4400 00c4 201C     		mov	r0, r4
 4401 00c6 FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 4402              	.LVL247:
 4403 00ca 02E0     		b	.L275
 4404              	.LVL248:
 4405              	.L276:
2260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     HAL_SPI_TxRxCpltCallback(hspi);
 4406              		.loc 1 2260 0
 4407 00cc 201C     		mov	r0, r4
 4408              	.LVL249:
 4409 00ce FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 4410              	.LVL250:
 4411              	.L275:
2262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 4412              		.loc 1 2262 0
 4413 00d2 02B0     		add	sp, sp, #8
 4414              		@ sp needed
ARM GAS  /tmp/cc1veDgB.s 			page 132


 4415              	.LVL251:
 4416 00d4 10BD     		pop	{r4, pc}
 4417              		.cfi_endproc
 4418              	.LFE69:
 4420 00d6 C046     		.section	.text.HAL_SPI_IRQHandler,"ax",%progbits
 4421              		.align	2
 4422              		.global	HAL_SPI_IRQHandler
 4423              		.code	16
 4424              		.thumb_func
 4426              	HAL_SPI_IRQHandler:
 4427              	.LFB52:
1604:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 4428              		.loc 1 1604 0
 4429              		.cfi_startproc
 4430              	.LVL252:
 4431 0000 00B5     		push	{lr}
 4432              	.LCFI36:
 4433              		.cfi_def_cfa_offset 4
 4434              		.cfi_offset 14, -4
 4435 0002 85B0     		sub	sp, sp, #20
 4436              	.LCFI37:
 4437              		.cfi_def_cfa_offset 24
1606:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if((__HAL_SPI_GET_IT_SOURCE(hspi, SPI_IT_RXNE) != RESET) && (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RX
 4438              		.loc 1 1606 0
 4439 0004 0368     		ldr	r3, [r0]
 4440 0006 5A68     		ldr	r2, [r3, #4]
 4441 0008 5106     		lsl	r1, r2, #25
 4442 000a 08D5     		bpl	.L284
1606:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if((__HAL_SPI_GET_IT_SOURCE(hspi, SPI_IT_RXNE) != RESET) && (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RX
 4443              		.loc 1 1606 0 is_stmt 0 discriminator 1
 4444 000c 9A68     		ldr	r2, [r3, #8]
 4445 000e D107     		lsl	r1, r2, #31
 4446 0010 05D5     		bpl	.L284
 4447 0012 9A68     		ldr	r2, [r3, #8]
 4448 0014 5106     		lsl	r1, r2, #25
 4449 0016 02D4     		bmi	.L284
1608:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->RxISR(hspi);
 4450              		.loc 1 1608 0 is_stmt 1
 4451 0018 836C     		ldr	r3, [r0, #72]
 4452 001a 9847     		blx	r3
 4453              	.LVL253:
1609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return;
 4454              		.loc 1 1609 0
 4455 001c 4BE0     		b	.L283
 4456              	.LVL254:
 4457              	.L284:
1613:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if((__HAL_SPI_GET_IT_SOURCE(hspi, SPI_IT_TXE) != RESET) && (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE
 4458              		.loc 1 1613 0
 4459 001e 5A68     		ldr	r2, [r3, #4]
 4460 0020 1106     		lsl	r1, r2, #24
 4461 0022 05D5     		bpl	.L286
1613:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if((__HAL_SPI_GET_IT_SOURCE(hspi, SPI_IT_TXE) != RESET) && (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE
 4462              		.loc 1 1613 0 is_stmt 0 discriminator 1
 4463 0024 9A68     		ldr	r2, [r3, #8]
 4464 0026 9107     		lsl	r1, r2, #30
 4465 0028 02D5     		bpl	.L286
1615:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     hspi->TxISR(hspi);
ARM GAS  /tmp/cc1veDgB.s 			page 133


 4466              		.loc 1 1615 0 is_stmt 1
 4467 002a C36C     		ldr	r3, [r0, #76]
 4468 002c 9847     		blx	r3
 4469              	.LVL255:
1616:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     return;
 4470              		.loc 1 1616 0
 4471 002e 42E0     		b	.L283
 4472              	.LVL256:
 4473              	.L286:
1619:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   if(__HAL_SPI_GET_IT_SOURCE(hspi, SPI_IT_ERR) != RESET)
 4474              		.loc 1 1619 0
 4475 0030 5A68     		ldr	r2, [r3, #4]
 4476 0032 9106     		lsl	r1, r2, #26
 4477 0034 3FD5     		bpl	.L283
1622:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
 4478              		.loc 1 1622 0
 4479 0036 9A68     		ldr	r2, [r3, #8]
 4480 0038 D106     		lsl	r1, r2, #27
 4481 003a 06D5     		bpl	.L287
1624:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
 4482              		.loc 1 1624 0
 4483 003c 416D     		ldr	r1, [r0, #84]
 4484 003e 0222     		mov	r2, #2
 4485 0040 0A43     		orr	r2, r1
 4486 0042 4265     		str	r2, [r0, #84]
1625:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
 4487              		.loc 1 1625 0
 4488 0044 1122     		mov	r2, #17
 4489 0046 5242     		neg	r2, r2
 4490 0048 9A60     		str	r2, [r3, #8]
 4491              	.L287:
1628:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_MODF) != RESET)
 4492              		.loc 1 1628 0
 4493 004a 0368     		ldr	r3, [r0]
 4494 004c 9A68     		ldr	r2, [r3, #8]
 4495 004e 9106     		lsl	r1, r2, #26
 4496 0050 0AD5     		bpl	.L288
1630:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 4497              		.loc 1 1630 0
 4498 0052 416D     		ldr	r1, [r0, #84]
 4499 0054 0122     		mov	r2, #1
 4500 0056 0A43     		orr	r2, r1
 4501 0058 4265     		str	r2, [r0, #84]
 4502              	.LBB5:
1631:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_CLEAR_MODFFLAG(hspi);
 4503              		.loc 1 1631 0
 4504 005a 9A68     		ldr	r2, [r3, #8]
 4505 005c 0192     		str	r2, [sp, #4]
 4506 005e 1A68     		ldr	r2, [r3]
 4507 0060 4021     		mov	r1, #64
 4508 0062 8A43     		bic	r2, r1
 4509 0064 1A60     		str	r2, [r3]
 4510 0066 019B     		ldr	r3, [sp, #4]
 4511              	.L288:
 4512              	.LBE5:
1635:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_OVR) != RESET)
 4513              		.loc 1 1635 0
ARM GAS  /tmp/cc1veDgB.s 			page 134


 4514 0068 0368     		ldr	r3, [r0]
 4515 006a 9A68     		ldr	r2, [r3, #8]
 4516 006c 5106     		lsl	r1, r2, #25
 4517 006e 0CD5     		bpl	.L289
1637:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       if(hspi->State != HAL_SPI_STATE_BUSY_TX)
 4518              		.loc 1 1637 0
 4519 0070 5122     		mov	r2, #81
 4520 0072 825C     		ldrb	r2, [r0, r2]
 4521 0074 122A     		cmp	r2, #18
 4522 0076 08D0     		beq	.L289
1639:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 4523              		.loc 1 1639 0
 4524 0078 416D     		ldr	r1, [r0, #84]
 4525 007a 0422     		mov	r2, #4
 4526 007c 0A43     		orr	r2, r1
 4527 007e 4265     		str	r2, [r0, #84]
 4528              	.LBB6:
1640:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);      
 4529              		.loc 1 1640 0
 4530 0080 DA68     		ldr	r2, [r3, #12]
 4531 0082 0292     		str	r2, [sp, #8]
 4532 0084 9A68     		ldr	r2, [r3, #8]
 4533 0086 0292     		str	r2, [sp, #8]
 4534 0088 029A     		ldr	r2, [sp, #8]
 4535              	.L289:
 4536              	.LBE6:
1645:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_FRE) != RESET)
 4537              		.loc 1 1645 0
 4538 008a 9A68     		ldr	r2, [r3, #8]
 4539 008c D105     		lsl	r1, r2, #23
 4540 008e 06D5     		bpl	.L290
1647:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 4541              		.loc 1 1647 0
 4542 0090 416D     		ldr	r1, [r0, #84]
 4543 0092 0822     		mov	r2, #8
 4544 0094 0A43     		orr	r2, r1
 4545 0096 4265     		str	r2, [r0, #84]
 4546              	.LBB7:
1648:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_CLEAR_FREFLAG(hspi);
 4547              		.loc 1 1648 0
 4548 0098 9A68     		ldr	r2, [r3, #8]
 4549 009a 0392     		str	r2, [sp, #12]
 4550 009c 039A     		ldr	r2, [sp, #12]
 4551              	.L290:
 4552              	.LBE7:
1652:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****     if(hspi->ErrorCode!=HAL_SPI_ERROR_NONE)
 4553              		.loc 1 1652 0
 4554 009e 426D     		ldr	r2, [r0, #84]
 4555 00a0 002A     		cmp	r2, #0
 4556 00a2 08D0     		beq	.L283
1654:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE | SPI_IT_TXE | SPI_IT_ERR);
 4557              		.loc 1 1654 0
 4558 00a4 5A68     		ldr	r2, [r3, #4]
 4559 00a6 E021     		mov	r1, #224
 4560 00a8 8A43     		bic	r2, r1
 4561 00aa 5A60     		str	r2, [r3, #4]
1655:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
ARM GAS  /tmp/cc1veDgB.s 			page 135


 4562              		.loc 1 1655 0
 4563 00ac 0122     		mov	r2, #1
 4564 00ae 5123     		mov	r3, #81
 4565 00b0 C254     		strb	r2, [r0, r3]
1656:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
 4566              		.loc 1 1656 0
 4567 00b2 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 4568              	.LVL257:
 4569              	.L283:
1659:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 4570              		.loc 1 1659 0
 4571 00b6 05B0     		add	sp, sp, #20
 4572              		@ sp needed
 4573 00b8 00BD     		pop	{pc}
 4574              		.cfi_endproc
 4575              	.LFE52:
 4577 00ba C046     		.section	.text.HAL_SPI_GetState,"ax",%progbits
 4578              		.align	2
 4579              		.global	HAL_SPI_GetState
 4580              		.code	16
 4581              		.thumb_func
 4583              	HAL_SPI_GetState:
 4584              	.LFB60:
1801:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 4585              		.loc 1 1801 0
 4586              		.cfi_startproc
 4587              	.LVL258:
1802:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return hspi->State;
 4588              		.loc 1 1802 0
 4589 0000 5123     		mov	r3, #81
 4590 0002 C05C     		ldrb	r0, [r0, r3]
 4591              	.LVL259:
 4592 0004 C0B2     		uxtb	r0, r0
1803:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 4593              		.loc 1 1803 0
 4594              		@ sp needed
 4595 0006 7047     		bx	lr
 4596              		.cfi_endproc
 4597              	.LFE60:
 4599              		.section	.text.HAL_SPI_GetError,"ax",%progbits
 4600              		.align	2
 4601              		.global	HAL_SPI_GetError
 4602              		.code	16
 4603              		.thumb_func
 4605              	HAL_SPI_GetError:
 4606              	.LFB61:
1812:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** {
 4607              		.loc 1 1812 0
 4608              		.cfi_startproc
 4609              	.LVL260:
1813:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c ****   return hspi->ErrorCode;
 4610              		.loc 1 1813 0
 4611 0000 406D     		ldr	r0, [r0, #84]
 4612              	.LVL261:
1814:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_spi.c **** }
 4613              		.loc 1 1814 0
 4614              		@ sp needed
ARM GAS  /tmp/cc1veDgB.s 			page 136


 4615 0002 7047     		bx	lr
 4616              		.cfi_endproc
 4617              	.LFE61:
 4619              		.text
 4620              	.Letext0:
 4621              		.file 2 "/home/niklas/Downloads/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/machine/_defaul
 4622              		.file 3 "/home/niklas/Downloads/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/stdint.h"
 4623              		.file 4 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l053xx.h"
 4624              		.file 5 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l0xx.h"
 4625              		.file 6 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 4626              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_dma.h"
 4627              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_spi.h"
 4628              		.file 9 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
ARM GAS  /tmp/cc1veDgB.s 			page 137


DEFINED SYMBOLS
                            *ABS*:00000000 stm32l0xx_hal_spi.c
     /tmp/cc1veDgB.s:18     .text.SPI_WaitOnFlagUntilTimeout:00000000 $t
     /tmp/cc1veDgB.s:22     .text.SPI_WaitOnFlagUntilTimeout:00000000 SPI_WaitOnFlagUntilTimeout
     /tmp/cc1veDgB.s:201    .text.SPI_WaitOnFlagUntilTimeout:000000e8 $d
     /tmp/cc1veDgB.s:206    .text.HAL_SPI_MspInit:00000000 $t
     /tmp/cc1veDgB.s:211    .text.HAL_SPI_MspInit:00000000 HAL_SPI_MspInit
     /tmp/cc1veDgB.s:223    .text.HAL_SPI_Init:00000000 $t
     /tmp/cc1veDgB.s:228    .text.HAL_SPI_Init:00000000 HAL_SPI_Init
     /tmp/cc1veDgB.s:329    .text.HAL_SPI_Init:00000084 $d
     /tmp/cc1veDgB.s:334    .text.HAL_SPI_MspDeInit:00000000 $t
     /tmp/cc1veDgB.s:339    .text.HAL_SPI_MspDeInit:00000000 HAL_SPI_MspDeInit
     /tmp/cc1veDgB.s:351    .text.HAL_SPI_DeInit:00000000 $t
     /tmp/cc1veDgB.s:356    .text.HAL_SPI_DeInit:00000000 HAL_SPI_DeInit
     /tmp/cc1veDgB.s:409    .text.HAL_SPI_Transmit:00000000 $t
     /tmp/cc1veDgB.s:414    .text.HAL_SPI_Transmit:00000000 HAL_SPI_Transmit
     /tmp/cc1veDgB.s:765    .text.HAL_SPI_Transmit:000001d8 $d
     /tmp/cc1veDgB.s:770    .text.HAL_SPI_TransmitReceive:00000000 $t
     /tmp/cc1veDgB.s:775    .text.HAL_SPI_TransmitReceive:00000000 HAL_SPI_TransmitReceive
     /tmp/cc1veDgB.s:1410   .text.HAL_SPI_TransmitReceive:0000038c $d
     /tmp/cc1veDgB.s:1413   .text.HAL_SPI_TransmitReceive:00000390 $t
     /tmp/cc1veDgB.s:1424   .text.HAL_SPI_Receive:00000000 $t
     /tmp/cc1veDgB.s:1429   .text.HAL_SPI_Receive:00000000 HAL_SPI_Receive
     /tmp/cc1veDgB.s:1852   .text.HAL_SPI_Receive:0000024c $d
     /tmp/cc1veDgB.s:1858   .text.HAL_SPI_Transmit_IT:00000000 $t
     /tmp/cc1veDgB.s:1863   .text.HAL_SPI_Transmit_IT:00000000 HAL_SPI_Transmit_IT
     /tmp/cc1veDgB.s:2025   .text.HAL_SPI_Transmit_IT:000000bc $d
     /tmp/cc1veDgB.s:3561   .text.SPI_TxISR:00000000 SPI_TxISR
     /tmp/cc1veDgB.s:2031   .text.HAL_SPI_TransmitReceive_IT:00000000 $t
     /tmp/cc1veDgB.s:2036   .text.HAL_SPI_TransmitReceive_IT:00000000 HAL_SPI_TransmitReceive_IT
     /tmp/cc1veDgB.s:2213   .text.HAL_SPI_TransmitReceive_IT:000000c8 $d
     /tmp/cc1veDgB.s:3888   .text.SPI_2LinesRxISR:00000000 SPI_2LinesRxISR
     /tmp/cc1veDgB.s:2220   .text.HAL_SPI_Receive_IT:00000000 $t
     /tmp/cc1veDgB.s:2225   .text.HAL_SPI_Receive_IT:00000000 HAL_SPI_Receive_IT
     /tmp/cc1veDgB.s:2399   .text.HAL_SPI_Receive_IT:000000cc $d
     /tmp/cc1veDgB.s:3811   .text.SPI_RxISR:00000000 SPI_RxISR
     /tmp/cc1veDgB.s:2406   .text.HAL_SPI_Transmit_DMA:00000000 $t
     /tmp/cc1veDgB.s:2411   .text.HAL_SPI_Transmit_DMA:00000000 HAL_SPI_Transmit_DMA
     /tmp/cc1veDgB.s:2598   .text.HAL_SPI_Transmit_DMA:000000e0 $d
     /tmp/cc1veDgB.s:3305   .text.SPI_DMAHalfTransmitCplt:00000000 SPI_DMAHalfTransmitCplt
     /tmp/cc1veDgB.s:3987   .text.SPI_DMATransmitCplt:00000000 SPI_DMATransmitCplt
     /tmp/cc1veDgB.s:3946   .text.SPI_DMAError:00000000 SPI_DMAError
     /tmp/cc1veDgB.s:2606   .text.HAL_SPI_TransmitReceive_DMA:00000000 $t
     /tmp/cc1veDgB.s:2611   .text.HAL_SPI_TransmitReceive_DMA:00000000 HAL_SPI_TransmitReceive_DMA
     /tmp/cc1veDgB.s:2834   .text.HAL_SPI_TransmitReceive_DMA:00000120 $d
     /tmp/cc1veDgB.s:3349   .text.SPI_DMAHalfReceiveCplt:00000000 SPI_DMAHalfReceiveCplt
     /tmp/cc1veDgB.s:4095   .text.SPI_DMAReceiveCplt:00000000 SPI_DMAReceiveCplt
     /tmp/cc1veDgB.s:3393   .text.SPI_DMAHalfTransmitReceiveCplt:00000000 SPI_DMAHalfTransmitReceiveCplt
     /tmp/cc1veDgB.s:4260   .text.SPI_DMATransmitReceiveCplt:00000000 SPI_DMATransmitReceiveCplt
     /tmp/cc1veDgB.s:2844   .text.HAL_SPI_Receive_DMA:00000000 $t
     /tmp/cc1veDgB.s:2849   .text.HAL_SPI_Receive_DMA:00000000 HAL_SPI_Receive_DMA
     /tmp/cc1veDgB.s:3055   .text.HAL_SPI_Receive_DMA:00000104 $d
     /tmp/cc1veDgB.s:3064   .text.HAL_SPI_DMAPause:00000000 $t
     /tmp/cc1veDgB.s:3069   .text.HAL_SPI_DMAPause:00000000 HAL_SPI_DMAPause
     /tmp/cc1veDgB.s:3120   .text.HAL_SPI_DMAResume:00000000 $t
     /tmp/cc1veDgB.s:3125   .text.HAL_SPI_DMAResume:00000000 HAL_SPI_DMAResume
     /tmp/cc1veDgB.s:3176   .text.HAL_SPI_DMAStop:00000000 $t
ARM GAS  /tmp/cc1veDgB.s 			page 138


     /tmp/cc1veDgB.s:3181   .text.HAL_SPI_DMAStop:00000000 HAL_SPI_DMAStop
     /tmp/cc1veDgB.s:3233   .text.HAL_SPI_TxCpltCallback:00000000 $t
     /tmp/cc1veDgB.s:3238   .text.HAL_SPI_TxCpltCallback:00000000 HAL_SPI_TxCpltCallback
     /tmp/cc1veDgB.s:3250   .text.HAL_SPI_RxCpltCallback:00000000 $t
     /tmp/cc1veDgB.s:3255   .text.HAL_SPI_RxCpltCallback:00000000 HAL_SPI_RxCpltCallback
     /tmp/cc1veDgB.s:3267   .text.HAL_SPI_TxRxCpltCallback:00000000 $t
     /tmp/cc1veDgB.s:3272   .text.HAL_SPI_TxRxCpltCallback:00000000 HAL_SPI_TxRxCpltCallback
     /tmp/cc1veDgB.s:3284   .text.HAL_SPI_TxHalfCpltCallback:00000000 $t
     /tmp/cc1veDgB.s:3289   .text.HAL_SPI_TxHalfCpltCallback:00000000 HAL_SPI_TxHalfCpltCallback
     /tmp/cc1veDgB.s:3301   .text.SPI_DMAHalfTransmitCplt:00000000 $t
     /tmp/cc1veDgB.s:3328   .text.HAL_SPI_RxHalfCpltCallback:00000000 $t
     /tmp/cc1veDgB.s:3333   .text.HAL_SPI_RxHalfCpltCallback:00000000 HAL_SPI_RxHalfCpltCallback
     /tmp/cc1veDgB.s:3345   .text.SPI_DMAHalfReceiveCplt:00000000 $t
     /tmp/cc1veDgB.s:3372   .text.HAL_SPI_TxRxHalfCpltCallback:00000000 $t
     /tmp/cc1veDgB.s:3377   .text.HAL_SPI_TxRxHalfCpltCallback:00000000 HAL_SPI_TxRxHalfCpltCallback
     /tmp/cc1veDgB.s:3389   .text.SPI_DMAHalfTransmitReceiveCplt:00000000 $t
     /tmp/cc1veDgB.s:3416   .text.HAL_SPI_ErrorCallback:00000000 $t
     /tmp/cc1veDgB.s:3421   .text.HAL_SPI_ErrorCallback:00000000 HAL_SPI_ErrorCallback
     /tmp/cc1veDgB.s:3433   .text.SPI_TxCloseIRQHandler:00000000 $t
     /tmp/cc1veDgB.s:3437   .text.SPI_TxCloseIRQHandler:00000000 SPI_TxCloseIRQHandler
     /tmp/cc1veDgB.s:3557   .text.SPI_TxISR:00000000 $t
     /tmp/cc1veDgB.s:3629   .text.SPI_RxCloseIRQHandler:00000000 $t
     /tmp/cc1veDgB.s:3633   .text.SPI_RxCloseIRQHandler:00000000 SPI_RxCloseIRQHandler
     /tmp/cc1veDgB.s:3802   .text.SPI_RxCloseIRQHandler:000000f0 $d
     /tmp/cc1veDgB.s:3807   .text.SPI_RxISR:00000000 $t
     /tmp/cc1veDgB.s:3884   .text.SPI_2LinesRxISR:00000000 $t
     /tmp/cc1veDgB.s:3942   .text.SPI_DMAError:00000000 $t
     /tmp/cc1veDgB.s:3983   .text.SPI_DMATransmitCplt:00000000 $t
     /tmp/cc1veDgB.s:4091   .text.SPI_DMAReceiveCplt:00000000 $t
     /tmp/cc1veDgB.s:4256   .text.SPI_DMATransmitReceiveCplt:00000000 $t
     /tmp/cc1veDgB.s:4421   .text.HAL_SPI_IRQHandler:00000000 $t
     /tmp/cc1veDgB.s:4426   .text.HAL_SPI_IRQHandler:00000000 HAL_SPI_IRQHandler
     /tmp/cc1veDgB.s:4578   .text.HAL_SPI_GetState:00000000 $t
     /tmp/cc1veDgB.s:4583   .text.HAL_SPI_GetState:00000000 HAL_SPI_GetState
     /tmp/cc1veDgB.s:4600   .text.HAL_SPI_GetError:00000000 $t
     /tmp/cc1veDgB.s:4605   .text.HAL_SPI_GetError:00000000 HAL_SPI_GetError
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
